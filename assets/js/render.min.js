"use strict";
define("render", ["lodash", "coreUtils", "utils", "core", "reactDOM", "experiment", "animations", "tweenEngine", "TweenMax", "TimelineMax", "ScrollToPlugin", "DrawSVGPlugin"], function(e, r, i, n, a, t, s, o, d, w) {
    function c(e) {
        window.clientSideRender || requirejs(["warmup"], function(r) {
            e(r)
        })
    }

    function l(e, r) {
        var i = r.query,
            n = (e[i.configName || "fullFunctionality"] || e.fullFunctionality).getConfig();
        if (!i.dsOrigin) throw new Error("You must define dsOrigin parameter in order to use the documentServices - please speak to html-server team for a key");
        return n.origin = i.dsOrigin, n
    }

    function u(r, n, a) {
        var t = e(a).keys().pull("masterPage").value();
        return e.mapValues(a, function(e, a) {
            return n && window.pagesData && window.pagesData[a] ? e : i.dataFixer.fix(e, t.slice(), r.requestModel, r.currentUrl, r.urlFormatModel, "site" === r.viewMode, r.rendererModel)
        })
    }

    function p(e, r, n, a) {
        i.ajaxLibrary.ajax({
            type: "POST",
            url: "https://jy75p2avi1.execute-api.us-west-2.amazonaws.com/prod/logDiffs",
            dataType: "json",
            headers: {
                "x-api-key": "NrelGcqXZH9pIBYc3zjA77SIpiBKUkp643H7P41F"
            },
            data: {
                vsi: a,
                santaVersion: n,
                url: window.location.href,
                ssrDiverge: {
                    clientMarkup: e,
                    serverMarkup: r
                }
            }
        })
    }

    function S(r, i, t, s, o) {
        c(function(e) {
            e.willRender(i)
        }), window.clientSideRender && window.santaRenderingError && window.parent && window.parent.postMessage({
            santaRenderingError: window.santaRenderingError.errorInfo
        }, "*");
        var d = window.document.getElementById("SITE_CONTAINER").children[0];
        s.onBeforeLayout = function() {
            var e = window.document.getElementById("SITE_CONTAINER").children[0],
                r = e.innerHTML;
            window.sssr.clientSantaVersion = e.getAttribute("data-santa-version"), c(function(n) {
                window.sssr.success = d === e, window.sssr.clientSideRender = {
                    sinceInitialTimestamp: Date.now() - window.wixBiSession.initialTimestamp,
                    performanceNow: g()
                }, window.parent && (window.sssr.success ? window.parent.postMessage("sssrSuccess", "*") : (window.sssr.clientSantaVersion !== window.sssr.serverSantaVersion && (r = window.sssr.clientSantaVersion, window.sssr.serverMarkup = window.sssr.serverSantaVersion), window.sssr.clientMarkup = r, window.sssr.serverMarkup = window.sssr.serverMarkup || d.innerHTML, window.parent.postMessage({
                    sssrFail: {
                        clientMarkup: window.sssr.clientMarkup,
                        serverMarkup: window.sssr.serverMarkup
                    }
                }, "*"), p(window.sssr.clientMarkup, window.sssr.serverMarkup, window.sssr.clientSantaVersion, i.wixBiSession.viewerSessionId))), n.didRender(i)
            })
        }, n.renderer.renderSite(i, t, s, function(i) {
            window.rendered ? window.rendered.forceUpdate() : (window.rendered = a.render(i, window.document.getElementById("SITE_CONTAINER")), window.onpopstate = window.rendered.onPopState, window.onhashchange = window.rendered.onHashChange, window.parent !== window && requirejs(["santaPreview"], function(e) {
                window.rendered.registerAspectToEvent("siteReady", function() {
                    o && o(window.rendered), window.documentServices && (window.parent.postMessage("documentServicesLoaded", "*"), window.createSantaPreview = e)
                })
            }), r.qaAutomation && (e.set(window, "testApi.domSelectors", r.qaAutomation.getDomSelectors(r.react, r.reactDOM)), window.testApi.domSelectors.setSearchRoot(window.rendered), e.set(window, "testApi.isReady", !0)))
        })
    }

    function v(a, t, c) {
        var l = {};
        r.urlUtils.isQueryParamOn(c.currentUrl, "isSantaEditor") && (l = e.assign(l, {
            componentViewMode: "editor"
        })), c.rendererModel.previewMode && (l = e.assign(l, {
            isSocialInteractionAllowed: !1,
            isPlayingAllowed: !1
        })), c.renderFlags = e.assign({}, c.renderFlags, l);
        var u = new i.FullSiteData(c),
            p = o.create(d, w);
        u.animations = s.create(p);
        var S = n.SiteDataAPI.createSiteDataAPIAndDal(u, t),
            v = S.siteData,
            f = S.siteDataAPI;
        return {
            fullSiteData: u,
            displayedSiteData: v,
            siteDataWrapper: S,
            viewerPrivateServices: {
                pointers: S.pointers,
                displayedDAL: S.displayedDal,
                siteDataAPI: f
            },
            isServerSideRender: v.isClientAfterSSR(),
            siteModel: c,
            siteDataAPI: f
        }
    }

    function f(r, n, a, s, o) {
        var d = v(r, n, a),
            w = r.documentServices;
        try {
            w && e.isUndefined(window.karmaIntegration) && t.isOpen("sv_fullstory", a) && i.integrations.fullStory.start(a)
        } catch (e) {}
        if (w) d.siteDataWrapper.dataLoadedRegistrar = d.siteDataAPI.registerDataLoadedCallback.bind(d.siteDataAPI), window.documentServices = new w.Site(l(w.configs, d.siteModel.currentUrl), d.siteDataWrapper, e.partial(u, d.siteModel, d.isServerSideRender), e.partial(S, r, d.displayedSiteData, d.viewerPrivateServices, s)), e.set(window, "testApi.documentServices", window.documentServices);
        else {
            var c = d.siteDataWrapper.fullPagesData.pagesData;
            d.fullSiteData.pagesData = c && u(d.siteModel, d.isServerSideRender, c), c.masterPage && d.siteDataAPI.createDisplayedPage("masterPage"), S(r, d.displayedSiteData, d.viewerPrivateServices, s, o)
        }
    }
    var g = Object.freeze("undefined" != typeof window && window.performance && window.performance.now ? window.performance.now.bind(window.performance) : Date.now.bind(Date));
    return {
        clientSide: f
    }
});
//# sourceMappingURL=render.min.js.map
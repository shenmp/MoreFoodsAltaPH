"use strict";

function _defineProperty(e, t, i) {
    return t in e ? Object.defineProperty(e, t, {
        value: i,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = i, e
}
define("core/util/santaVersion.json", [], function() {
    return {
        version: "1.2326.5"
    }
}), define("core/siteRender/styleCollector", ["lodash", "utils", "skins"], function(e, t, i) {
    function s(e, t, i) {
        var s = i.styleId && e.getDataByQuery(i.styleId, t, e.dataTypes.THEME);
        return {
            dataItem: i.dataQuery && e.getDataByQuery(i.dataQuery, t),
            propertiesItem: i.propertyQuery && e.getDataByQuery(i.propertyQuery, t, e.dataTypes.PROPERTIES),
            styleItem: s,
            structure: i
        }
    }

    function n(e, t, i) {
        t && !e[t] && (e[t] = i)
    }

    function o(e, t) {
        return e[t] && h[e[t].skin]
    }

    function a(e, i, s) {
        e.styleId ? o(i, e.styleId) ? n(s, e.styleId, i[e.styleId].skin) : n(s, e.styleId, e.skin) : e.skin && h[e.skin] && n(s, t.santaTypes.shortenStyleId(e.skin), e.skin)
    }

    function r(e, t, i, n, o) {
        if (e.componentType && g[e.componentType]) {
            var a = s(i, o, e);
            g[e.componentType](a, t, i, n, o)
        }
    }

    function c(t, i, s) {
        t.modes && t.modes.overrides && e.forEach(t.modes.overrides, function(e) {
            e.styleId && o(i, e.styleId) && n(s, e.styleId)
        })
    }

    function p(i, s, n, o, l, d) {
        a(i, s, o), c(i, s, o), r(i, s, n, o, l);
        var u = t.dataUtils.getChildrenData(i, !!d);
        e(u).compact().forEach(function(e) {
            p(e, s, n, o, l)
        })
    }

    function l(i, s, n, o, c, p) {
        a(i, s, o), r(i, s, n, o, c);
        var d = t.dataUtils.getChildrenData(i, !!p);
        e(d).compact().forEach(function(e) {
            l(e, s, n, o, c)
        })
    }

    function d(e, t) {
        g[e] = t
    }

    function u(t, i) {
        var s = i.getAllTheme();
        return e.reduce(t, function(e, t) {
            var n = i.pagesData[t.id] ? t.id : i.MASTER_PAGE_ID,
                o = {};
            return l(t, s, i, o, n, i.isMobileView()), e[t.id || n] = o, e
        }, {})
    }
    var h = i.skins,
        g = {};
    return t.sessionFreezer.freeze(g), {
        buildLoadedStyles: u,
        collectStyleIdsFromFullStructure: p,
        registerClassBasedStyleCollector: d
    }
}), define("core/fonts/FontRuler", ["react", "reactDOM", "utils"], function(e, t, i) {
    function s(e) {
        return e && e.offsetWidth && e.offsetHeight
    }

    function n(e, t) {
        return e.offsetWidth !== t.offsetWidth || e.offsetHeight !== t.offsetHeight
    }

    function o(e) {
        return e && {
            offsetWidth: e.offsetWidth,
            offsetHeight: e.offsetHeight
        }
    }
    return e.createClass({
        displayName: "FontRuler",
        handleFontResize: function() {
            if (this.isMounted() && !this.triggeredResize) {
                var e = this.trigger;
                if (!e && (e = s(this.contentNodeOrigSize))) {
                    var o = t.findDOMNode(this.refs.content);
                    if (!o) return;
                    e = n(o, this.contentNodeOrigSize)
                }
                e ? (this.rafID && (i.animationFrame.cancel(this.rafID), this.rafID = 0), this.triggeredResize = !0, this.props.onLoadCallback(this.props.fontFamily)) : this.rafID || (this.rafID = i.animationFrame.request(this.updateCurrentSize))
            }
        },
        updateCurrentSize: function() {
            this.rafID = 0;
            var e = t.findDOMNode(this.refs.wrapper);
            if (e) {
                var i = t.findDOMNode(this.refs.content),
                    a = t.findDOMNode(this.refs.innerContent),
                    r = t.findDOMNode(this.refs.innerWrapper),
                    c = o(e);
                e.style.width = c.offsetWidth - 1 + "px", e.style.height = c.offsetHeight - 1 + "px", e.scrollLeft = e.scrollWidth - e.clientWidth, e.scrollTop = e.scrollHeight - e.clientHeight, a.style.width = c.offsetWidth + 1 + "px", a.style.height = c.offsetHeight + 1 + "px", r.scrollLeft = r.scrollWidth - r.clientWidth, r.scrollTop = r.scrollHeight - r.clientHeight, s(i) && (this.contentNodeOrigSize ? this.trigger = n(i, this.contentNodeOrigSize) : this.contentNodeOrigSize = o(i), i.style.fontFamily = this.props.fontFamily + ", serif")
            }
        },
        componentDidMount: function() {
            this.trigger = !1, this.triggeredResize = !1, this.updateCurrentSize()
        },
        componentWillUnmount: function() {
            this.rafID && (i.animationFrame.cancel(this.rafID), this.rafID = 0)
        },
        render: function() {
            var t = e.DOM.div({
                    ref: "innerContent",
                    refInParent: "innerContent"
                }),
                i = e.DOM.div({
                    ref: "innerWrapper",
                    refInParent: "innerWrapper",
                    onScroll: this.handleFontResize,
                    style: {
                        position: "absolute",
                        width: "100%",
                        height: "100%",
                        overflow: "hidden"
                    }
                }, t),
                s = e.DOM.div({
                    style: {
                        position: "relative",
                        whiteSpace: "nowrap",
                        fontFamily: "serif"
                    }
                }, i, e.DOM.span({
                    ref: "content",
                    className: "font-ruler-content"
                }));
            return e.DOM.div({
                ref: "wrapper",
                refInParent: "wrapper",
                onScroll: this.handleFontResize,
                style: {
                    position: "absolute",
                    overflow: "hidden",
                    fontSize: 1200,
                    left: -2e3,
                    visibility: "hidden"
                }
            }, s)
        }
    })
}), define("core/fonts/FontRulersContainer", ["react", "lodash", "core/fonts/FontRuler", "utils"], function(e, t, i, s) {
    var n = e.createFactory(i);
    return e.createClass({
        displayName: "FontRulersContainer",
        getInitialState: function() {
            var e = this.props.siteData;
            return this.invokeCallback = t.debounce(this.invokeCallback, e.browser.firefox || e.os.ios ? 300 : 30), {
                loadedFonts: []
            }
        },
        fontLoaded: function(e) {
            var t = this.state.loadedFonts.concat(e);
            this.isMounted() && (this.setState({
                loadedFonts: t
            }), s.fonts.renderedFontsList.set(t)), this.invokeCallback()
        },
        invokeCallback: function() {
            s.performance.finish("font ruler"), this.props.onLoadCallback()
        },
        componentDidMount: function() {
            s.performance.startOnce("font ruler")
        },
        render: function() {
            var i = this.props.fontsList,
                s = [{
                    key: "fontRulersContainer",
                    style: {
                        overflow: "hidden",
                        visibility: "hidden",
                        maxHeight: 0,
                        maxWidth: 0,
                        position: "absolute"
                    }
                }, e.DOM.style({
                    dangerouslySetInnerHTML: {
                        __html: '.font-ruler-content::after {content:"@#$%%^&*~IAO"}'
                    }
                })];
            return t.forEach(i, function(e) {
                t.includes(this.state.loadedFonts, e) || s.push(n({
                    key: e,
                    fontFamily: e,
                    onLoadCallback: this.fontLoaded
                }))
            }.bind(this)), e.DOM.div.apply(void 0, s)
        },
        hasPendingFonts: function() {
            return t.difference(this.props.fontsList, this.state.loadedFonts).length > 0
        }
    })
}), define("core/fonts/fontsLoader", ["lodash", "react", "fonts", "core/fonts/FontRulersContainer"], function(e, t, i, s) {
    function n(e, t, i, s) {
        return a({
            fontsList: e,
            siteData: t,
            onLoadCallback: i,
            ref: s,
            key: s
        })
    }

    function o(t, s, n, o, a) {
        var r = e.map(t, function(e) {
                return i.fontUtils.getPageUsedFontsList(s, e)
            }),
            c = e(r).concat(n).flattenDeep().uniq().value();
        return this.getRulersNode(c, s, o, a)
    }
    var a = t.createFactory(s);
    return {
        getRulersNode: n,
        getFontsLoaderNode: o
    }
}), define("core/fonts/collectFontsFromLoadedCompStyles", ["lodash", "skins", "fonts"], function(e, t, i) {
    function s(e) {
        return /^(font|color)_[0-9]+$/.test(e) ? "theme" : "value"
    }

    function n(t, i, o) {
        var c = [];
        if (i.exports && (c = e(i.exports).pickBy(function(e) {
                return e.skin && a[e.skin]
            }).flatMap(function(e) {
                return n(t, a[e.skin], o)
            }).value()), i.params) {
            var p = e.keys(e.omitBy(i.params, function(e) {
                return "FONT" !== e
            }));
            e.has(o, "style.properties") && e.forEach(p, function(e) {
                var n = "",
                    a = o.style.properties[e] || i.paramsDefaults[e],
                    p = s(a);
                "value" === p ? n = r.parseFontStr(a).family.toLowerCase() : "theme" === p && (n = r.getFontFamilyByStyleId(t, a)), n && c.push(n.replace(/\u0000$/, ""))
            })
        }
        return c
    }

    function o(t, i) {
        var s = e.get(t, ["pagesData", "masterPage", "data", "theme_data"]),
            o = s.THEME_DATA;
        return e(s).pick(i).reduce(function(e, t, i) {
            var s = a[t ? t.skin : i];
            return s ? e.concat(n(o, s, t)) : e
        }, [])
    }
    var a = t.skins,
        r = i.fontUtils;
    return o
}), define("core/siteRender/WixThemeReact", ["zepto", "lodash", "react", "skins", "fonts", "utils", "core/fonts/fontsLoader", "core/fonts/collectFontsFromLoadedCompStyles", "reactDOM"], function(e, t, i, s, n, o, a, r, c) {
    function p(e) {
        var t = e.santaBase + "/static/css/mobileIEFix.css";
        return i.DOM.link({
            rel: "stylesheet",
            type: "text/css",
            href: t
        })
    }

    function l(e, s, n) {
        return n && (s = t.map(s.trim().split("\n"), function(e) {
            var i = e.split("{"),
                s = i[0].split(",");
            return i[0] = t.map(s, function(e) {
                return n + " " + e
            }), i.join("{")
        }).join("\n")), i.DOM.style({
            type: "text/css",
            key: e,
            dangerouslySetInnerHTML: {
                __html: s || ""
            }
        })
    }

    function d(e, t) {
        var i = [],
            s = v.getThemeFontsCss(e.THEME_DATA.font, e.THEME_DATA.color);
        i.push(l("theme_fonts", s, t));
        var n = A.getColorsCssString(e.THEME_DATA.color);
        return i.push(l("theme_colors", n, t)), i
    }

    function u(e, i, s, n, o, a, r) {
        var c = t.get(n, "style.properties") || {};
        return l(s, _.createSkinCss(i, c, e.THEME_DATA, s, o, r), a)
    }

    function h(e, i, s, n, a) {
        var r = [];
        t.forEach(i, function(t, i) {
            var c = e[i],
                p = P[c ? c.skin : t];
            p && r.push(u(e, p, o.santaTypes.shortenStyleId(i), c, s, n, a))
        }), r.push(u(e, P["wysiwyg.viewer.skins.wixadsskins.WixAdsWebSkin"], "wixAds", null, s, n, a)), r.push(u(e, P["skins.viewer.deadcomp.DeadCompPublicSkin"], "deadComp", null, s, n, a)), r.push(u(e, P["wysiwyg.viewer.skins.siteBackgroundSkin"], "siteBackground", null, s, n, a)), r.push(u(e, P["wysiwyg.viewer.skins.PasswordLoginSkin"], "loginDialog", null, s, n, a));
        var c = o.constants.POPUP.POPUP_OVERLAY_CONTAINER;
        return r.push(u(e, P[c.SKIN], c.STYLE_ID, null, s, n, a)), r
    }

    function g(e, t) {
        var s = (t ? t + " " : "") + "." + m + " {position:absolute; display: none; z-index: " + e + "}";
        return [i.DOM.style({
            type: "text/css",
            key: "testStyle"
        }, s), i.DOM.div({
            ref: m,
            className: m
        })]
    }

    function f(e, t) {
        var i = window.document.getElementById("font_" + t);
        return !i || (i.removeAttribute("media"), !1)
    }
    var m = "testStyles",
        y = n.fontUtils,
        v = n.fontCss,
        S = o.fonts.uploadedFontsUtils,
        A = o.cssUtils,
        _ = s.skinsRenderer,
        P = s.skins;
    return i.createClass({
        displayName: "WixThemeReact",
        getInitialState: function() {
            return this.testNodeIndex = 0, this.waitingForStylesReady = !1, this.waitingStartTime = 0, this.skinsFonts = [], null
        },
        render: function() {
            this.testNodeIndex = (this.testNodeIndex + 1) % 100;
            var e = [{
                    key: "theme"
                }],
                s = this.props.themeData,
                n = this.props.siteData,
                o = this.props.siteAPI,
                c = this.props.masterPage.data.document_data.masterPage,
                l = t.assign({}, this.prevLoadedStyles, this.props.loadedStyles),
                u = t.reduce(l, function(e, i) {
                    return t.assign(e, i)
                }, {});
            if (s.THEME_DATA && s.THEME_DATA.font) {
                var f = r(n, t.keys(u));
                this.skinsFonts = t.union(this.skinsFonts, f), n.getBrowser().ie && !n.isMobileView() && e.push(p(n)), e = e.concat(d(s, this.props.styleRoot), h(s, u, this.props.siteData.mobile, this.props.styleRoot, n.serviceTopology), g(this.testNodeIndex, this.props.styleRoot));
                var m = o.getRootIdsWhichShouldBeRendered();
                e = e.concat(this.getUploadedFontsStyles(m)), this.props.shouldRenderPage && (e = e.concat(this.getFontsCssLinks(n, c), a.getFontsLoaderNode(m, n, f, this.waitForStylesReady, "fontsLoader")))
            }
            return i.DOM.div.apply(void 0, e)
        },
        componentWillReceiveProps: function() {
            this.prevLoadedStyles = this.props.loadedStyles
        },
        componentWillUnmount: function() {
            this.afterStylesReadyCallback = null, this.waitingForStylesReady = !1
        },
        registerStylesReadyCallback: function(e) {
            this.afterStylesReadyCallback = e
        },
        initWaitForStylesReady: function() {
            this.waitingForStylesReady || this.waitForStylesReady()
        },
        waitForStylesReady: function() {
            if (this.isMounted()) {
                this.waitingForStylesReady || (this.waitingForStylesReady = !0, this.waitingStartTime = t.now());
                var i = e(c.findDOMNode(this.refs[m]));
                if (t.isFunction(this.afterStylesReadyCallback) && i.css("z-index") == this.testNodeIndex) {
                    var s = t.now() - this.waitingStartTime > 1e3;
                    if (s || "visible" !== i.css("overflow-y")) return s && o.log.error("waitForStylesReady waiting for testStyles", i.css("overflow-y")), this.waitingForStylesReady = !1, void this.afterStylesReadyCallback()
                }
                o.animationFrame.request(this.waitForStylesReady)
            }
        },
        getFontsCssLinks: function() {
            var e = this.props.siteData,
                s = e.rendererModel.siteInfo.documentType,
                n = y.getCssUrls(s, e.serviceTopology);
            return e.isInSSR() || e.isClientAfterSSR() || (f(null, "viewer"), n = t.pickBy(n, f)), t.map(n, function(e, t) {
                return i.DOM.link({
                    rel: "stylesheet",
                    type: "text/css",
                    href: e,
                    key: t
                })
            })
        },
        getUploadedFontsStyles: function(e) {
            this.uploadedFonts = this.uploadedFonts || [];
            var i = this,
                s = this.props.siteData;
            t.forEach(e, function(e) {
                i.uploadedFonts.push(y.getPageUsedFontsList(s, e))
            }), this.skinsFonts && this.uploadedFonts.push(this.skinsFonts);
            var n = t(this.uploadedFonts).flatten().union().filter(function(e) {
                return S.isUploadedFontFamily(e)
            }).value();
            return l("uploadedFonts", S.getUploadedFontFaceStyles(n, this.props.siteData.serviceTopology.mediaRootUrl))
        }
    })
}), define("core/components/animatableMixin", ["reactDOM", "lodash"], function(e, t) {
    function i(e) {
        var t = e.style.display;
        e.style.display = "none", e.offsetHeight, e.style.display = t
    }
    return {
        isAnimatable: !0,
        shouldChildrenUpdate: !0,
        componentWillMount: function() {
            this._animatableMixin = {
                animationsCounter: 0,
                deferredStates: []
            }
        },
        componentDidMount: function() {
            this._animatableMixin.setStateOrig = this.setState
        },
        componentWillUnmount: function() {
            this._animatableMixin.updateOnAnimationEnded = !1
        },
        animationStarted: function() {
            1 == ++this._animatableMixin.animationsCounter && (this.setState = this.setStateDeferred, this.isCurrentlyAnimating = !0), this.shouldChildrenUpdate || t(this.refs).filter("isAnimatable").invokeMap("animationStarted").value()
        },
        animationEnded: function(s) {
            s = !1 !== s, this.shouldChildrenUpdate || t(this.refs).filter("isAnimatable").invokeMap("animationEnded", !1).value();
            var n = this._animatableMixin;
            if (n.animationsCounter && 0 == --n.animationsCounter && (this.setState = n.setStateOrig, this.isCurrentlyAnimating = !1), s)
                if (n.deferredStates.length) {
                    for (var o = n.deferredStates, a = 0; a < o.length; a += 2) n.setStateOrig.call(this, o[a], o[a + 1]);
                    o.length = 0
                } else n.updateOnAnimationEnded && this.forceUpdate();
            this._updateOnAnimationEnded = !1, !0 === this.forceRedrawOnAnimationEnded && i(e.findDOMNode(this))
        },
        setStateDeferred: function(e, i) {
            var s = this._animatableMixin.deferredStates,
                n = s.length;
            0 === n || s[n - 1] || i ? (s.push(e), s.push(i)) : (t.assign(s[n - 2], e), s[n - 1] = i)
        },
        shouldComponentUpdateAnimatable: function() {
            var e = 0 === this._animatableMixin.animationsCounter;
            return e || (this._animatableMixin.updateOnAnimationEnded = !0), e
        }
    }
}), define("core/components/compActionMixin", ["lodash", "santaProps", "loggingUtils"], function(e, t, i) {
    function s(t) {
        var s = {
            id: e.get(t, "id") || this.props.id,
            timeStamp: i.performance.now()
        };
        return t ? (s.timeStamp = t.timeStamp || s.timeStamp, e.defaults(s, t)) : s
    }
    return {
        propTypes: {
            id: t.Types.Component.id,
            handleAction: t.Types.Behaviors.handleAction,
            compActions: t.Types.Component.compActions
        },
        handleAction: function(t, i) {
            var n = e.get(this.props.compActions, t);
            n && this.props.handleAction(n, s.call(this, i))
        }
    }
}), define("core/components/compBehaviorsExecuterMixin", ["lodash", "santaProps"], function(e, t) {
    function i(t, i) {
        var s = e.map(t.params, function(t) {
            return e.isString(t) ? i.params[t] : e.get(i.params, t.name, t.defaultValue)
        });
        return i.callback ? s.concat(i.callback) : s
    }

    function s(t) {
        e.forEach(t, function(t) {
            var s = e.get(this.constructor, ["behaviors", t.name]) || e.get(this.constructor, ["behaviorExtensions", t.name], {});
            if (e.isFunction(this[s.methodName])) {
                var n = i(s, t);
                this[s.methodName].apply(this, n)
            }
        }.bind(this))
    }
    return {
        propTypes: {
            compDynamicBehaviors: t.Types.Component.compDynamicBehaviors,
            compDynamicBehaviorsClearAfterFlush: t.Types.Component.compDynamicBehaviorsClearAfterFlush
        },
        getDefaultProps: function() {
            return {
                compDynamicBehaviorsClearAfterFlush: e.noop
            }
        },
        componentWillMount: function() {
            s.call(this, this.props.compDynamicBehaviors)
        },
        componentWillReceiveProps: function(e) {
            s.call(this, e.compDynamicBehaviors)
        },
        componentDidUpdate: function() {
            this.props.compDynamicBehaviorsClearAfterFlush()
        },
        componentDidMount: function() {
            this.props.compDynamicBehaviorsClearAfterFlush()
        }
    }
}), define("core/components/baseCompMixin", ["lodash", "react", "santaProps", "siteUtils", "core/components/animatableMixin", "core/components/compActionMixin", "core/components/compBehaviorsExecuterMixin", "utils"], function(e, t, i, s, n, o, a, r) {
    function c(t) {
        var i = e.pick(t, e.values(u));
        if (e.get(this.props.compProp, "isDisabled")) return i;
        var s = e(this.props.compActions).pick(e.keys(u)).mapKeys(function(e, t) {
            return u[t]
        }).mapValues(function(e) {
            return this.handleAction.bind(this, e.name)
        }.bind(this)).value();
        return e.assignWith(s, i, function(e, t) {
            var i = this;
            return function() {
                e && e.apply(i, arguments), t && t.apply(i, arguments)
            }
        }.bind(this))
    }

    function p(t) {
        var i = e.defaults({}, t.style || {}, this.props.style);
        return e.get(this.props.compProp, "isHidden") && (i.visibility = "hidden"), t["data-collapsed"] && (i.visibility = "hidden"), !e.get(this.props.compProp, "isDisabled") && e.has(this.props.compActions, "click") && (i.cursor = "pointer"), e.isFunction(this.transformRefStyle) ? this.transformRefStyle(i) : i
    }

    function l(t) {
        var i = e.compact([t, this.props.className]).join(" ");
        return e.isFunction(this.transformRefClasses) ? this.transformRefClasses(i) : i
    }
    var d = i.Types,
        u = {
            click: "onClick",
            dblClick: "onDoubleClick",
            mouseenter: "onMouseEnter",
            mouseleave: "onMouseLeave"
        },
        h = ["wysiwyg.viewer.components.SiteBackground"];
    return {
        baseComp: {
            mixins: [n, s.renderDoneMixin, a, o],
            propTypes: {
                id: d.Component.id.isRequired,
                className: t.PropTypes.string,
                structure: d.Component.structure.isRequired,
                style: d.Component.style.isRequired,
                compActions: d.Component.compActions,
                compBehaviors: d.Component.compBehaviors,
                compProp: i.Types.Component.compProp,
                registerReLayoutPending: d.Layout.registerReLayoutPending,
                reLayoutIfPending: d.Layout.reLayoutIfPending,
                registerBehaviors: d.Behaviors.registerBehaviors,
                setBehaviorsForActions: d.Behaviors.setBehaviorsForActions,
                convertBehaviors: d.Behaviors.convertBehaviors,
                getRootIdsWhichShouldBeRendered: d.getRootIdsWhichShouldBeRendered,
                rootId: d.Component.rootId
            },
            registerReLayout: function() {
                this.props.registerReLayoutPending && this.props.registerReLayoutPending(this.props.id)
            },
            componentDidUpdate: function() {
                this.props.reLayoutIfPending && this.callAfterRenderDone(this.props.reLayoutIfPending)
            },
            shouldComponentUpdate: function(t, i) {
                var s = !this.shouldComponentUpdateAnimatable || this.shouldComponentUpdateAnimatable(t, i),
                    n = t.getRootIdsWhichShouldBeRendered || t.siteAPI.getRootIdsWhichShouldBeRendered,
                    o = r.componentUtils.shouldBeRendered(n(), t.rootId),
                    a = this.shouldComponentUpdatePage && this.shouldComponentUpdatePage(t, i),
                    c = e.includes(h, t.structure.componentType),
                    p = !e.isFunction(this.componentSpecificShouldUpdate) || this.componentSpecificShouldUpdate(t, i);
                return s && p && (a || o || c)
            },
            updateRootRefDataStyles: function(t) {
                var i = e.get(this.props.compProp, "isCollapsed") && (!e.isFunction(this.shouldCollapse) || this.shouldCollapse());
                if (!e.get(this.props, "compProp.isHidden") && !i) {
                    var s = c.call(this, t);
                    e.assign(t, s)
                }
                i && (t["data-collapsed"] = !0), t.style = p.call(this, t), t.className = l.call(this, t.className);
                var n = this.props.structure,
                    o = e.get(n, "layout.rotationInDegrees");
                o && (t["data-angle"] = o)
            }
        },
        _testActionsMap: u
    }
}), define("core/components/util/animationsQueueHandler", ["lodash", "reactDOM"], function(e, t) {
    function i(t) {
        var i = t.comp;
        return e(t.animations).map(function(t) {
            var s = [];
            return e.isPlainObject(t.refNames) ? (s = c(i, t.refNames.sourceRefs), t.refNames.destRefs && (s = s.concat(c(i, t.refNames.destRefs)))) : s = c(i, t.refNames), s
        }).flattenDeep().compact().uniq().value()
    }

    function s(t, i, s, n) {
        return e.forEach(i.animations, function(i) {
            var o = i.params || {};
            o = "function" == typeof o ? i.params() : e.cloneDeep(o);
            var a, r, c;
            e.isPlainObject(i.refNames) ? (a = p(s, i.refNames.sourceRefs), r = i.refNames.destRefs && p(s, i.refNames.destRefs)) : a = p(s, i.refNames), r ? (c = t.transition(i.animationName, a, r, i.duration, i.delay, o)) && n.add(c, i.position) : (c = t.animate(i.animationName, a, i.duration, i.delay, o)) && n.add(c, i.position)
        }), n.get()
    }

    function n(t, n, r) {
        for (var c, p, l, d, u, h; n.length;) p = (d = n.pop()).comp, c = {}, d.callbacks = d.callbacks || {}, u = {
            suppressReactRendering: !1 !== (l = "function" == typeof(l = d.params || {}) ? d.params() : e.cloneDeep(l)).suppressReactRendering,
            forgetSequenceOnComplete: !1 !== l.forgetSequenceOnComplete,
            id: d.id
        }, h = i(d), c.onStart = d.callbacks.onStart, c.onComplete = a.bind(null, h, u, d.callbacks.onComplete, r), c.onReverseComplete = a.bind(null, h, u, d.callbacks.onReverseComplete, r), c.onInterrupt = a.bind(null, h, u, d.callbacks.onInterrupt, r), l.callbacks = c, r[d.id] = s(t, d, p, t.sequence(l)), d.callbacks.onInit && d.callbacks.onInit(r[d.id]), o(h, u)
    }

    function o(t, i, s) {
        i.suppressReactRendering && e.invokeMap(t, "animationStarted"), s && s()
    }

    function a(t, i, s, n) {
        i.forgetSequenceOnComplete && delete n[i.id], i.suppressReactRendering && e.invokeMap(t, "animationEnded"), s && s()
    }

    function r(e, t) {
        return e.compRefs && e.compRefs[t] || e.refs[t]
    }

    function c(t, i) {
        return i = e.isArray(i) ? i : [i], e(i).map(function(i) {
            return e.isArray(i) ? e.reduce(i, r, t) : e.isString(i) ? r(t, i) : i
        }).compact().value()
    }

    function p(i, s) {
        return e.map(c(i, s), t.findDOMNode)
    }
    return {
        flushQueue: n,
        getElementsByRefs: p
    }
}), define("core/components/animationsMixin", ["lodash", "santaProps", "core/components/util/animationsQueueHandler"], function(e, t, i) {
    function s(t) {
        this.comp = t, this.animations = [], this.callbacks = {}, this.id = e.uniqueId("seq_")
    }
    var n = t.Types;
    return s.prototype.add = function(e, t, i, s, n, o) {
        return this.animations.push({
            refNames: e,
            animationName: t,
            duration: i,
            delay: s,
            params: n,
            position: o
        }), this
    }, s.prototype.onCompleteAll = function(e) {
        return this.callbacks.onComplete = e, this
    }, s.prototype.onReverseAll = function(e) {
        return this.callbacks.onReverseComplete = e, this
    }, s.prototype.onInterruptAll = function(e) {
        return this.callbacks.onInterrupt = e, this
    }, s.prototype.onStartAll = function(e) {
        return this.callbacks.onStart = e, this
    }, s.prototype.onInit = function(e) {
        this.callbacks.onInit = e
    }, s.prototype.execute = function(e) {
        return this.comp.executeAnimationsWhenPossible(this.comp, this.id, this.animations, this.callbacks, e), this.id
    }, s.prototype.getId = function() {
        return this.id
    }, s.prototype.hasAnimations = function() {
        return !e.isEmpty(this.animations)
    }, {
        propTypes: {
            isSiteBusy: n.isSiteBusy,
            animations: n.animations
        },
        getInitialState: function() {
            return this._animationsQueue = [], this._liveSequences = {}, this._isBusy = !0, null
        },
        executeAnimationsWhenPossible: function(t, s, n, o, a) {
            e.isEmpty(this._liveSequences) && (this._liveSequences = {}), e.isEmpty(this._animationsQueue) && (this._animationsQueue = []), this._animationsQueue.push({
                comp: t,
                id: s,
                animations: n,
                callbacks: o,
                params: a
            }), this.isBusy() || i.flushQueue(this.getAnimations(), this._animationsQueue, this._liveSequences)
        },
        componentWillUpdate: function() {
            this._isBusy = !0
        },
        componentDidUpdate: function() {
            this._isBusy = !1, this.isBusy() || i.flushQueue(this.getAnimations(), this._animationsQueue, this._liveSequences)
        },
        componentDidMount: function() {
            this._isBusy = !1
        },
        componentDidLayoutAnimations: function() {
            i.flushQueue(this.getAnimations(), this._animationsQueue, this._liveSequences)
        },
        componentWillUnmount: function() {
            this._isBusy = !0, this.clearAnimationsQueue(!1)
        },
        clearAnimationsQueue: function(t) {
            e.forEach(this._liveSequences, function(e) {
                this.getAnimations().kill(e, t ? 1 : void 0)
            }.bind(this)), this._liveSequences = {}, this._animationsQueue = []
        },
        isBusy: function() {
            var e = this.props.isSiteBusy || this.props.siteAPI.isSiteBusy;
            return !this.isMounted() || this._isBusy || e()
        },
        animate: function(e, t, i, s, n, o) {
            var a = this.sequence(e, t, i, s, n);
            return (o = o || {}).onStart && a.onStartAll(o.onStart), o.onInterrupt && a.onInterruptAll(o.onInterrupt), o.onComplete && a.onCompleteAll(o.onComplete), a.execute()
        },
        transition: function(e, t, i, s, n, o, a) {
            return this.animate({
                sourceRefs: e,
                destRefs: t
            }, i, s, n, o, a)
        },
        sequence: function(e, t, i, n, o) {
            var a = new s(this);
            return arguments.length && a.add.apply(a, arguments), a
        },
        getSequence: function(e) {
            return e ? this._liveSequences[e] : null
        },
        stopSequence: function(e, t) {
            var i = this.getSequence(e);
            i && (this.getAnimations().kill(i, t), delete this._liveSequences[e])
        },
        reverseSequence: function(e) {
            var t = this.getSequence(e);
            t && t.reversed(!t.reversed())
        },
        easeStartSequence: function(e, t, i, s) {
            var n = this.getSequence(e);
            n && this.getAnimations().animateTimeScale(n, t, 0, 1, i, s)
        },
        easeStopSequence: function(e, t, i, s) {
            var n, o = this.getSequence(e);
            o && (n = (s = s || {}).onComplete || function() {}, s.onComplete = function() {
                n(), this.stopSequence(e)
            }.bind(this), o.paused() ? this.stopSequence(e) : this.getAnimations().animateTimeScale(o, t, 1, 0, i, s))
        },
        getAnimationProperties: function(e) {
            return this.getAnimations().getProperties(e)
        },
        addTickerEvent: function() {
            this.getAnimations().addTickerEvent.apply(null, arguments)
        },
        removeTickerEvent: function() {
            this.getAnimations().removeTickerEvent.apply(null, arguments)
        },
        getAnimations: function() {
            return this.props.animations || e.get(this.props, "siteData.animations")
        }
    }
}), define("core/siteRender/WixPageReact", ["lodash", "react", "reactDOM", "santaProps", "utils", "compUtils", "core/components/baseCompMixin", "core/components/animationsMixin"], function(e, t, i, s, n, o, a, r) {
    function c(i, s, o) {
        var a = h.getRootProps(i, o.siteAPI, o.viewerPrivateServices, o.measureMap);
        return o.siteAPI.isExperimentOpen("sv_dpages") && a.rootNavigationInfo && a.rootNavigationInfo.routerDefinition && (a.key = a.rootId + a.rootNavigationInfo.routersRendererIndex), a.firstPage = s, a.mobxObserverWrapperProps = o.mobxObserverWrapperProps, a.mobxObserverWrapperProps.dimensionsMap = n.structureDimensions.createDimensionsMap(a.structure, a.siteData.getScreenSize(), a.siteData.getSiteWidth(), a.siteData.isMobileView()), a.onRendered = e.once(function() {
            o.siteAPI.getSiteAspect("WidgetAspect").getWidgetHandler().handleEvent(a.rootId, "onRendered")
        }), t.createElement(g, a)
    }

    function p(e) {
        var t = {
            createPage: function(t, i) {
                return c(t, i, e)
            },
            skin: "skins.core.InlineSkin"
        };
        return t.measureMap = e.measureMap, t
    }

    function l(e) {
        return e && o.compFactory.getCompClass(e) || t.DOM.div
    }

    function d(e, t) {
        var i = e.getRootIdsWhichShouldBeRendered();
        return !n.componentUtils.shouldBeRendered(i, t)
    }

    function u() {
        var e = this.props.compBehaviors;
        if (e) {
            var t = this.props.rootId,
                i = this.props.siteAPI.getSiteAspect("actionsAspect"),
                s = this.props.siteAPI.getSiteAspect("behaviorsAspect");
            i.registerBehaviors(t, t, e), s.setBehaviorsForActions(s.convertBehaviors(e, t), t, t)
        }
    }
    var h = s.componentPropsBuilder,
        g = t.createClass({
            displayName: "WixPageReact",
            propTypes: {
                mobxObserverWrapperProps: t.PropTypes.object,
                structure: t.PropTypes.object,
                rootId: t.PropTypes.string,
                onRendered: t.PropTypes.func
            },
            getDefaultProps: function() {
                return {
                    onRendered: e.noop
                }
            },
            mixins: [a.baseComp, r],
            componentWillMount: function() {
                this.childrenAnimations = {}, this.transitioningChildrenPrevLayout = {}, this.compRefs = {}, u.call(this)
            },
            addComponentRef: function(e, t) {
                e ? this.compRefs[t] = e : delete this.compRefs[t]
            },
            shouldComponentUpdatePage: function(e) {
                return !d(e.siteAPI, e.rootId)
            },
            componentWillUpdate: function() {
                d(this.props.siteAPI, this.props.rootId) && this.props.siteAPI.deactivateModesInPage(this.props.rootId), u.call(this)
            },
            render: function() {
                if (!this.props.siteAPI.getSiteAspect("WidgetAspect").allContextsReady()) return this.renderedPage || t.createElement("div");
                var i = e.assign({}, this.props.mobxObserverWrapperProps, {
                        propsForSitePages: p(this.props),
                        addComponentRef: this.addComponentRef,
                        anyChangeInParentActiveModes: !1,
                        compAnimationType: null
                    }),
                    s = {
                        structure: this.props.structure,
                        key: this.props.rootId,
                        ref: this.props.rootId,
                        rootId: this.props.rootId,
                        mobxObserverWrapperProps: i
                    },
                    n = l(this.props.structure.componentType);
                return this.renderedPage = n(s), this.renderedPage
            },
            updateVisibility: function() {
                this.props.siteAPI.getSiteAspect("WidgetAspect").isContextReady(this.props.rootId) && (i.findDOMNode(this).style.visibility = "", this.props.onRendered())
            },
            componentDidLayout: function() {
                this.updateVisibility()
            }
        });
    return g
}), define("core/siteRender/wixBackgroundInstantiator", ["lodash", "compUtils"], function(e, t) {
    var i = "wysiwyg.viewer.components.SiteBackground",
        s = {
            id: "SITE_BACKGROUND",
            skin: "wysiwyg.viewer.skins.siteBackgroundSkin",
            componentType: i,
            styleId: "siteBackground"
        };
    return Object.freeze(s), {
        getWixBgStructure: function() {
            return s
        },
        getWixBgComponent: function(e) {
            var n = {
                mobxObserverWrapperProps: e,
                structure: s,
                rootId: "masterPage",
                key: s.id
            };
            return t.compFactory.getCompClass(i)(n)
        }
    }
}), define("core/bi/errors.json", [], function() {
    return _defineProperty({
        JAVASCRIPT_ERROR: {
            errorName: "JAVASCRIPT_ERROR",
            errorCode: 111022,
            severity: "fatal",
            params: {
                p1: "errorMsg",
                p2: "url",
                p3: "line",
                p4: "column"
            }
        },
        CONSOLE_ERROR: {
            errorName: "CONSOLE_ERROR",
            errorCode: 111023,
            severity: "error",
            params: {
                p1: "errorMsg"
            }
        },
        REQUIREJS_ERROR: {
            errorName: "REQUIREJS_ERROR",
            errorCode: 111024,
            severity: "fatal",
            params: {
                p1: "errorMsg",
                p2: "modules"
            }
        },
        REQUIREJS_RETRY_ERROR: {
            errorName: "REQUIREJS_RETRY_ERROR",
            errorCode: 111025,
            severity: "recoverable",
            params: {
                p1: "errorMsg",
                p2: "modules"
            }
        },
        NULL_SITE_ERROR: {
            errorName: "NULL_SITE_ERROR",
            errorCode: 112e3,
            severity: "error",
            params: {
                p1: "errorMsg",
                p2: "modules"
            }
        },
        MISSING_DESKTOP_BACKGROUND_ITEM: {
            errorName: "MISSING_DESKTOP_BACKGROUND_ITEM",
            errorCode: 112001,
            severity: "recoverable",
            params: {
                p1: "errorMsg",
                p2: "modules"
            }
        }
    }, "MISSING_DESKTOP_BACKGROUND_ITEM", {
        errorName: "MISSING_MOBILE_BACKGROUND_ITEM",
        errorCode: 112002,
        severity: "recoverable",
        params: {
            p1: "errorMsg",
            p2: "modules"
        }
    })
}), define("core/bi/errors", ["core/bi/errors.json", "lodash", "utils"], function(e, t, i) {
    var s = i.logger;
    return t.forEach(e, function(e, t) {
        e.errorName = t
    }), s.register("core", "error", e), e
}), define("core/siteRender/SiteAPI", ["utils", "zepto", "lodash", "core/bi/errors", "experiment"], function(e, t, i, s, n) {
    function o(e, t) {
        !e && arguments.length && "undefined" != typeof window && (t = t || "unknown", window.wixBiSession && window.wixBiSession.sendError(s.NULL_SITE_ERROR, t)), this._site = e, i.bindAll(this, i.functionsIn(this))
    }

    function a(e, t, s) {
        for (; t;) {
            if (i.get(s, [t.id, "isCurrentlyAnimating"])) return !0;
            t = e.components.getParent(t)
        }
        return !1
    }

    function r(e, t, i) {
        var s = this.getPointers().platform.getControllerStageDataPointer(e, t, i);
        return this.getDisplayedDAL().get(s)
    }

    function c() {
        var e = this.getSiteData();
        e.nonObservableUpdateIndex = e.observableUpdateIndex + 1
    }

    function p() {
        this.getSiteData().observableUpdateIndex++
    }

    function l(t) {
        return t ? e.constants.VIEW_MODES.MOBILE : e.constants.VIEW_MODES.DESKTOP
    }

    function d(e) {
        var t = this.getRootIdsWhichShouldBeRendered(),
            s = this.getSiteDataAPI(),
            n = l(e),
            o = this.getSiteData().anchorsMap;
        i.forEach(t, function(t) {
            i.has(o, [t, n]) || s.anchors.createPageAnchors(t, e)
        })
    }

    function u(e, t) {
        for (var s, n, o = i.cloneDeep(e); o.length > 0;) {
            if ((s = o.pop()).id === t) return !0;
            if (s.components && s.components.length)
                for (n = 0; n < s.components.length; n += 1) o.push(s.components[n])
        }
        return !1
    }

    function h(e, t, s) {
        var n = e.pagesData[s],
            o = e.MASTER_PAGE_ID === s ? "children" : "components";
        return u(i.get(n, ["structure", o]), t)
    }

    function g(e, t) {
        var i, s, n, o = e.getSiteData(),
            a = e.getAllRenderedRootIds();
        for (s = 0, n = a.length; s < n; s++)
            if (i = a[s], h(o, t, i)) return i;
        return !1
    }

    function f(e, t) {
        return i.get(e, ["shownInFixed", t], !1)
    }

    function m(e) {
        return ["siteApi", e, "globalData"]
    }
    var y = e.logger;
    return o.prototype = {
        reLayout: function() {
            this._site.reLayout()
        },
        registerReLayoutPending: function(e) {
            this._site.registerReLayoutPending(e)
        },
        cancelReLayoutPending: function(e) {
            this._site.cancelReLayoutPending(e)
        },
        reLayoutIfPending: function() {
            this._site.reLayoutIfPending()
        },
        getSiteAspect: function(e) {
            return this._site && this._site.siteAspects && this._site.siteAspects[e]
        },
        getSiteData: function() {
            return this._site.props.siteData
        },
        getLoadedStyles: function() {
            return this._site.loadedStyles
        },
        setBiParam: function(e, t) {
            var i = this.getSiteData();
            i && i.wixBiSession && void 0 === i.wixBiSession[e] && (i.wixBiSession[e] = t)
        },
        addPrefetchPages: function(e) {
            var t = this.getDisplayedDAL(),
                s = t.getByPath(["prefetchPages"]);
            t.setByPath(["prefetchPages"], i.union(s, e))
        },
        markVisitedPage: function(e) {
            var t = this.getDisplayedDAL(),
                s = t.getByPath(["visitedPages"]);
            t.setByPath(["visitedPages"], i.union(s, [e]))
        },
        setBiMarker: function(e) {
            this.setBiParam(e, i.now())
        },
        onSiteUnmount: function() {
            setTimeout(function() {
                delete this._site
            }.bind(this))
        },
        isZoomOpened: function() {
            var e = this._site.props.siteData;
            return !(!e.getExistingRootNavigationInfo(e.getFocusedRootId()).pageItemId && !e.getNonPageItemZoomData())
        },
        openPopup: function(e, t, i) {
            window.open(e, t, i)
        },
        href: function(e) {
            window.location.href = e
        },
        isPageLandingPage: function(e) {
            return this.getSiteData().isPageLandingPage(e)
        },
        scrollToAnchor: function(t, i) {
            var s = e.scrollAnchors.calcAnchorScrollToPosition(t, this);
            return this._site.scrollToAnchor(s, i)
        },
        scrollToComponent: function(e, t) {
            var s = this.getSiteData(),
                n = s.measureMap || {},
                o = g(this, e);
            if (o)
                if (f(n, e)) t && i.forEach(t, function(e) {
                    i.isFunction(e) && e()
                });
                else {
                    var a = i.get(n, ["top", e]),
                        r = s.isPopupPage(o) ? s.getPopupsContainer() : this._site.props.getSiteContainer();
                    this._site.scrollTo({
                        y: a
                    }, t, r)
                }
        },
        getRenderRealtimeConfigItem: function(e) {
            var t = this.getDisplayedDAL(),
                i = this.getPointers().general.getRenderRealtimeConfigItem(e);
            return t.get(i)
        },
        getAllRenderedRootIds: function() {
            return this._site.getAllRenderedRootIds()
        },
        getRootIdsWhichShouldBeRendered: function() {
            return this._site.getRootIdsWhichShouldBeRendered()
        },
        navigateToPage: function(e, t, i) {
            this._site.tryToNavigate(e, t, !1, i)
        },
        updateUrlIfNeeded: function(e) {
            this._site.updateUrlIfNeeded(e)
        },
        handleNavigation: function(e, t, i) {
            this._site.handleNavigation(e, t, i)
        },
        getDynamicPageRealPageAndReloadLoadApps: function(e) {
            var t = this.getSiteData();
            this._site.props.getDynamicPageRealPage(t, e, function() {
                this.getSiteAspect("WidgetAspect").restartApps()
            }.bind(this))
        },
        updatePageNavInfo: function(e, t, i) {
            var s = this.getSiteData();
            if (e.pageId !== s.getPrimaryPageId() && e.pageId !== s.getCurrentPopupId()) throw "you need to navigate to page if it's a different page";
            this._site.tryToNavigate(e, t, !0, i)
        },
        forceUpdate: function(e) {
            this._site.forceUpdate(e)
        },
        getComponentsByPageId: function(e) {
            return this._site.getComponentsByPageId(e)
        },
        getPageUrl: function(e) {
            return this.getPageUrlFor(this.getSiteData().getCurrentUrlPageId(), e)
        },
        getPageData: function() {
            return this.getSiteData().getDataByQuery(this.getSiteData().getCurrentUrlPageId())
        },
        setPageTitle: function(e, t, i) {
            var s = this.getPageData();
            s.title = e, s.descriptionSEO = t, s.pageTitleSEO = i
        },
        setRunTimePageTitle: function(e, t, i) {
            var s = this.getRuntimeDal()._siteData.getDataByQuery(this.getSiteData().getCurrentUrlPageId());
            s.title = e, s.descriptionSEO = t, s.pageTitleSEO = i, this._site.updateTitleAndMetaTags(), this._site.notifyAspects(this._site.supportedEvents.siteMetadataChange, {
                title: this.getSiteData().getCurrentUrlPageTitle(),
                description: t
            })
        },
        setPageMetaKeywords: function(e) {
            this.getPageData().metaKeywordsSEO = e
        },
        setPageMetaOgTags: function(e) {
            var t = this.getSiteData();
            t.setPageOgTags(t.getCurrentUrlPageId(), e)
        },
        setPageJsonld: function(e) {
            var t = this.getSiteData();
            t.setJsonLd(t.getCurrentUrlPageId(), e)
        },
        setPageLinkTag: function(e) {
            var t = this.getSiteData();
            t.setPageLinkTag(t.getCurrentUrlPageId(), e)
        },
        setPageTwitterMetaTags: function(e) {
            var t = this.getSiteData();
            t.setPageTwitterTags(t.getCurrentUrlPageId(), e)
        },
        getPageUrlFor: function(t, i) {
            var s = this.getSiteData().getDataByQuery(t);
            return s ? e.wixUrlParser.getUrl(this.getSiteData(), {
                pageId: t,
                title: s.pageUriSEO
            }, i) : ""
        },
        initFacebookRemarketing: function(e) {
            e ? y.initFacebookRemarketingPixelId(this.getSiteData(), e) : y.initFacebookRemarketingUserPixel(this.getSiteData())
        },
        fireFacebookRemarketingPixel: function(e, t) {
            y.fireFacebookRemarketingPixel(this.getSiteData(), e, t)
        },
        initGoogleRemarketing: function() {
            y.initGoogleRemarketingPixel(this.getSiteData())
        },
        fireGoogleRemarketing: function() {
            y.fireGoogleRemarketingPixel()
        },
        initYandexMetrika: function() {
            y.initYandexMetrika(this.getSiteData())
        },
        reportYandexPageHit: function(e) {
            y.reportYandexPageHit(e)
        },
        reportBI: function(e, t) {
            y.reportBI(this._site.props.siteData, e, t)
        },
        getBiVisitorId: function() {
            return y.getVisitorId(this._site.props.siteData)
        },
        reportCurrentPageEvent: function(e) {
            var t = this._site.props.siteData;
            e || (e = i.isString(t.currentUrl) ? t.currentUrl : t.currentUrl.full);
            var s = t.getExternalBaseUrl().replace(/\/$/, ""),
                n = e.replace(s, "");
            y.reportPageEvent(t, n)
        },
        reportPageEvent: function(e) {
            y.reportPageEvent(this._site.props.siteData, e)
        },
        reportBeatEvent: function(e, t) {
            y.reportBeatEvent(this._site.props.siteData, e, t)
        },
        reportBeatStart: function(e) {
            this.getSiteData().getBiData().switchPage(e), this.reportBeatEvent("start", e)
        },
        reportBeatFinish: function(e) {
            this.reportBeatEvent("finish", e)
        },
        reportPageBI: function() {
            y.reportBI(this._site.props.siteData)
        },
        getUserSession: function() {
            return this._site.props.siteData.getSvSession()
        },
        setUserSession: function(t) {
            if (t !== this.getUserSession()) {
                var i = this.getSiteData();
                i.pubSvSession(t), e.cookieUtils.deleteCookie("svSession", i.currentUrl.hostname, i.getMainPagePath()), e.cookieUtils.setCookie("svSession", t, null, i.currentUrl.hostname, i.getMainPagePath()), this._site.notifyAspects(this._site.supportedEvents.svSessionChange, t)
            }
        },
        triggerFakeModeChange: function(e, t) {
            this._site.notifyAspects(this._site.supportedEvents.fakeModeChange, e, t)
        },
        isSiteBusy: function() {
            return this._site.isBusy
        },
        isSiteBusyIncludingTransition: function() {
            return this.isSiteBusy() || this._site.isDuringTransition
        },
        startingPageTransition: function(e) {
            var t = this.getSiteData().getRootNavigationInfo(),
                s = !i.isEqual(t.routerDefinition, e.routerDefinition) || t.innerRoute !== e.innerRoute;
            (e.pageId && this.getSiteData().getFocusedRootId() !== e.pageId || s) && (this._site.isDuringTransition = !0)
        },
        endingPageTransition: function() {
            this._site.isDuringTransition = !1
        },
        setSiteScrollingEnabled: function(e) {
            e ? t("html").removeClass("disableSiteScroll") : t("html").addClass("disableSiteScroll")
        },
        enterFullScreenMode: function(i) {
            "undefined" != typeof window ? (t("body").addClass("fullScreenMode"), i && !i.scrollable || t("body").addClass("fullScreenMode-scrollable")) : e.log.warn("SiteAPI.enterFullScreenMode should only be called from client specific code!")
        },
        exitFullScreenMode: function() {
            "undefined" != typeof window ? (t("body").removeClass("fullScreenMode"), t("body").removeClass("fullScreenMode-scrollable")) : e.log.warn("SiteAPI.exitFullScreenMode should only be called from client specific code!")
        },
        forceBackground: function(e) {
            window.document.body.style.background = e
        },
        disableForcedBackground: function() {
            window.document.body.style.background = ""
        },
        passClickEvent: function(e) {
            this._site.clickHandler(e)
        },
        getRuntimeDal: function() {
            return this.getSiteDataAPI().runtime
        },
        hasPendingFonts: function() {
            return this._site.refs.theme.refs.fontsLoader.hasPendingFonts()
        },
        getCurrentPopupId: function() {
            return this.getSiteData().getCurrentPopupId()
        },
        openPopupPage: function(e) {
            this.navigateToPage({
                pageId: e
            }, !0)
        },
        closePopupPage: function() {
            this.navigateToPage(this.getSiteData().getRootNavigationInfo(), !0)
        },
        isPopupOpened: function() {
            return this.getSiteData().isPopupOpened()
        },
        getSiteDataAPI: function() {
            return this._site.props.viewerPrivateServices.siteDataAPI
        },
        getPointers: function() {
            return this._site.props.viewerPrivateServices.pointers
        },
        getDisplayedDAL: function() {
            return this._site.props.viewerPrivateServices.displayedDAL
        },
        getActiveModes: function() {
            return this.getSiteDataAPI().modes.getActiveModes()
        },
        getPrevRenderActiveModes: function() {
            return this._site.prevActiveModes
        },
        activateModeById: function(e, t, i) {
            var s = this.getPointers(),
                n = s.components.getPage(t, this.getSiteData().getViewMode()),
                o = s.components.getComponent(e, n);
            this.activateMode(o, i)
        },
        activateMode: function(e, t) {
            var i = this.getPointers(),
                s = i.components.getPageOfComponent(e);
            a(i, e, this._site.getComponentsByPageId(s.id)) || this.getSiteDataAPI().modes.activateMode(e, t) && (c.call(this), this.forceUpdate(), p.call(this))
        },
        deactivateModeById: function(e, t, i) {
            this.getSiteDataAPI().modes.deactivateModeById(e, t, i) && (c.call(this), this.forceUpdate(), p.call(this))
        },
        deactivateMode: function(e, t) {
            this.getSiteDataAPI().modes.deactivateMode(e, t) && (c.call(this), this.forceUpdate(), p.call(this))
        },
        deactivateModesInPage: function(e) {
            this.getSiteDataAPI().unloadNonVisiblePage(e) && (c.call(this), this.forceUpdate(), p.call(this))
        },
        switchModesByIds: function(e, t, i, s) {
            this.getSiteDataAPI().modes.switchModesByIds(e, t, i, s) && (c.call(this), this.forceUpdate(), p.call(this))
        },
        resetAllActiveModes: function() {
            this.getSiteDataAPI().modes.resetAllActiveModes(), c.call(this), this.forceUpdate(), p.call(this)
        },
        setMobileView: function(e) {
            var t = this.getSiteData();
            if (t.isMobileView() !== e) {
                d.call(this, e), t.setMobileView(e);
                var i = t.getRootNavigationInfo();
                i.routerDefinition ? this.getDynamicPageRealPageAndReloadLoadApps(i) : this.getSiteAspect("WidgetAspect").restartApps()
            }
        },
        showSelectionSharer: function(e, t) {
            this._site.refs.selectionSharer.show(e, t)
        },
        hideSelectionSharer: function() {
            this._site.refs.selectionSharer.isVisible() && this._site.refs.selectionSharer.hide()
        },
        isSelectionSharerVisible: function() {
            return i.get(this._site, "refs.selectionSharer") && this._site.refs.selectionSharer.isVisible()
        },
        getWixCodeAppApi: function() {
            return this._site.props.wixCodeAppApi
        },
        getControllerStageData: function(e, t, s) {
            var n = r.call(this, e, t, s);
            if ("default" === s) return n;
            var o = r.call(this, e, t, "default");
            return i.defaults({}, n, o)
        },
        getControllerState: function(e) {
            var t = this.getPointers().platform.getControllerStatePointer(e);
            return this.getDisplayedDAL().get(t) || "default"
        },
        getAppManifest: function(e) {
            var t = this.getPointers().platform.getAppManifestPointer(e);
            return this.getDisplayedDAL().get(t)
        },
        getAspectGlobalData: function(e) {
            return this.getDisplayedDAL().getByPath(["siteAspectsData", e, "globalData"])
        },
        getAspectComponentData: function(e, t) {
            var i = this.getDisplayedDAL();
            return t ? i.getByPath(["siteAspectsData", e, "dataByCompId", t]) : i.getByPath(["siteAspectsData", e, "dataByCompId"])
        },
        getRenderFlag: function(e) {
            var t = this.getDisplayedDAL(),
                i = this.getPointers().general.getRenderFlag(e);
            return t.get(i)
        },
        isLoggedInToWix: function() {
            var t = this.getDisplayedDAL().getByPath(["requestModel", "cookie"]);
            return e.wixUserApi.isSessionValid(t)
        },
        logoutFromWix: function() {
            var t = this.getSiteData();
            e.wixUserApi.logout(t), this.forceUpdate()
        },
        registerClientSpecMapUpdateCallback: function(e) {
            if (i.isFunction(e)) {
                var t = this.getDisplayedDAL(),
                    s = m("ClientSpecMapUpdateCallbacks");
                if (t.isPathExist(s)) {
                    var n = t.getByPath(s);
                    t.pushByPath(s, e, n.length)
                } else t.setByPath(s, [e])
            }
        },
        setClientSpecMap: function(e) {
            var t = this.getDisplayedDAL(),
                s = this.getPointers().general.getClientSpecMap();
            t.set(s, e);
            var n = m("ClientSpecMapUpdateCallbacks");
            if (t.isPathExist(n)) {
                var o = t.getByPath(n);
                o && i.isArray(o) && i.forEach(o, function(t) {
                    t(e)
                })
            }
        },
        isExperimentOpen: function(e) {
            return n.isOpen(e, this.getSiteData())
        }
    }, o
}), define("core/core/siteAspectsRegistry", ["lodash", "utils"], function(e, t) {
    var i = {};
    return t.sessionFreezer.freeze(i), {
        registerSiteAspect: function(e, t) {
            i[e] = t
        },
        getAllAspectConstructors: function() {
            return i
        },
        getSiteAspectConstructor: function(e) {
            return i[e]
        },
        extendSiteAspect: function(t, s) {
            var n = i[t];
            if (n) {
                var o = function() {
                    n.apply(this, arguments), s.apply(this, arguments)
                };
                o.prototype = e.assign(n.prototype, s.prototype), i[t] = o
            }
        }
    }
}), define("core/siteRender/SiteAspectsSiteAPI", ["lodash", "core/siteRender/SiteAPI"], function(e, t) {
    function i(i) {
        t.call(this, i, "Site Aspect"), e.bindAll(this, ["getComponentById", "getRootOfComponentId", "getCurrentPage", "getCurrentPopup", "getAllRenderedRoots", "getMasterPage", "getPageById", "getPageComponents", "registerToMessage", "registerToSiteReady", "registerToScroll", "registerToResize", "registerToOrientationChange", "registerToModeChange", "registerToSlideChange", "registerToComponentDidMount", "registerToSiteWillMount", "registerToSiteWillUpdate", "registerToDidLayout", "unRegisterFromDidLayout", "registerToWillUnmount", "registerToUrlPageChange", "registerToRenderedRootsChange", "registerToAddedRenderedRootsDidLayout", "registerToKeyDown", "registerToWindowTouchEvent", "registerToFocusEvents", "registerToVisibilityChange", "registerToDocumentClick", "registerToSvSessionChange", "registerToSiteMetadataChange", "getSiteAPI", "getSiteContainer", "scrollSiteBy", "scrollSiteTo", "getWindowSize", "getDocumentSize", "getSiteScroll", "getCurrentPopupScroll", "getBrowserFlags", "getVisibilityState", "setSiteRootHiddenState", "notifyAspects", "registerToFakeModeChange"])
    }

    function s(e) {
        return ["siteAspectsData", e, "globalData"]
    }

    function n(e, t) {
        return ["siteAspectsData", e, "dataByCompId", t]
    }
    return i.prototype = e.create(t.prototype, {
        constructor: i
    }), i.prototype.getComponentById = function(e, t) {
        var i = null,
            s = t || this.getRootOfComponentId(e);
        return s && (i = this._site.getComponentByPageAndCompId(s, e)), i || (i = this._site.getAspectsContainer().refs[e] || this._site.getAspectsContainer().refs.aspectPortal.refs[e]), i || "SITE_BACKGROUND" !== e && "WIX_ADS" !== e || (i = this._site.compRefs[e]), i || null
    }, i.prototype.getRootOfComponentId = function(t) {
        var i = this._site.getPageOfComp(t),
            s = i && i.props.rootId;
        if (s) return s;
        var n = this._site.getMasterPage();
        return e.forEach(this._site.getPageRefs(n), function(e, i) {
            if (this._site.getComponentByPageAndCompId(i, t)) return s = i, !1
        }.bind(this)), s || null
    }, i.prototype.getCurrentPage = function() {
        return this._site.getPrimaryPage()
    }, i.prototype.getCurrentPopup = function() {
        return this._site.getCurrentPopup()
    }, i.prototype.getAllRenderedRoots = function() {
        return e.map(this.getAllRenderedRootIds, this.getPageById.bind(this))
    }, i.prototype.getMasterPage = function() {
        return this._site.getMasterPage()
    }, i.prototype.getPageById = function(e) {
        return this._site.getPageById(e)
    }, i.prototype.getPageComponents = function(e) {
        return this._site.getComponentsByPageId(e)
    }, i.prototype.getComponentByPageAndCompId = function(e, t) {
        return this._site.getComponentByPageAndCompId(e, t)
    }, i.prototype.registerToMessage = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.message, e)
    }, i.prototype.registerToSiteReady = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.siteReady, e)
    }, i.prototype.registerToScroll = function(e) {
        var t = this.getSiteAPI().getSiteData();
        this._site.registerAspectToEvent(this._site.supportedEvents.scroll, function() {
            var i = {
                x: window.pageXOffset || (t.isMobileView() ? window.document.scrollLeft : window.document.body.scrollLeft),
                y: window.pageYOffset || (t.isMobileView() ? window.document.scrollTop : window.document.body.scrollTop)
            };
            e(i)
        })
    }, i.prototype.registerToResize = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.resize, e)
    }, i.prototype.registerToOrientationChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.orientationchange, e)
    }, i.prototype.registerToModeChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.modeChange, e)
    }, i.prototype.registerToSlideChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.slideChange, e)
    }, i.prototype.registerToComponentDidMount = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.mount, e)
    }, i.prototype.registerToSiteWillMount = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.willMount, e)
    }, i.prototype.registerToSiteWillUpdate = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.willUpdate, e)
    }, i.prototype.registerToDidLayout = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.didLayout, e)
    }, i.prototype.unRegisterFromDidLayout = function(e) {
        this._site.unregisterAspectFromEvent(this._site.supportedEvents.didLayout, e)
    }, i.prototype.registerToWillUnmount = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.unmount, e)
    }, i.prototype.registerToUrlPageChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.urlPageChange, e)
    }, i.prototype.registerToRenderedRootsChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.renderedRootsChanged, e)
    }, i.prototype.registerToAddedRenderedRootsDidLayout = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.addedRenderedRootsDidLayout, e)
    }, i.prototype.registerToKeyDown = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.keydown, e)
    }, i.prototype.registerToKeyUp = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.keyup, e)
    }, i.prototype.registerToWindowTouchEvent = function(e, t) {
        this._site.registerAspectToEvent(this._site.supportedEvents[e.toLowerCase()], t)
    }, i.prototype.registerToFocusEvents = function(e, t) {
        this._site.registerAspectToEvent(this._site.supportedEvents[e], t)
    }, i.prototype.registerToVisibilityChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.visibilitychange, e)
    }, i.prototype.registerToDocumentClick = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.click, e)
    }, i.prototype.registerToOrientationChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.orientationchange, e)
    }, i.prototype.registerToFakeModeChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.fakeModeChange, e)
    }, i.prototype.registerToSvSessionChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.svSessionChange, e)
    }, i.prototype.registerToSiteMetadataChange = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.siteMetadataChange, e)
    }, i.prototype.registerToAspectsReady = function(e) {
        this._site.registerAspectToEvent(this._site.supportedEvents.aspectsReady, e)
    }, i.prototype.unregisterFromAspectsReady = function(e) {
        this._site.unregisterAspectFromEvent(this._site.supportedEvents.aspectsReady, e)
    }, i.prototype.getSiteAPI = function() {
        return this._site.siteAPI
    }, i.prototype.getSiteContainer = function() {
        return this._site.props.getSiteContainer()
    }, i.prototype.scrollSiteBy = function(e, t) {
        this.getSiteContainer().scrollBy(e, t)
    }, i.prototype.scrollSiteTo = function(e, t) {
        this.getSiteContainer().scrollTo(e, t)
    }, i.prototype.getWindowSize = function() {
        var e = this.getSiteContainer();
        return {
            height: e.innerHeight,
            width: e.innerWidth
        }
    }, i.prototype.getDocumentSize = function() {
        return {
            height: window.document.documentElement.clientHeight || window.document.body.clientHeight,
            width: window.document.documentElement.clientWidth || window.document.body.clientWidth
        }
    }, i.prototype.getSiteScroll = function() {
        var e = this.getSiteContainer() || {};
        return {
            x: e.pageXOffset || e.scrollX || 0,
            y: e.pageYOffset || e.scrollY || 0
        }
    }, i.prototype.getCurrentPopupScroll = function() {
        var t = window.document.getElementById("POPUPS_ROOT");
        return {
            x: e.get(t, "scrollLeft", 0),
            y: e.get(t, "scrollTop", 0)
        }
    }, i.prototype.getBrowserFlags = function() {
        return this.getSiteAPI().getSiteData().browserFlags()
    }, i.prototype.getVisibilityState = function() {
        return {
            hidden: "undefined" != typeof document && window.document.hidden
        }
    }, i.prototype.setSiteRootHiddenState = function(e, t) {
        this._site.setState({
            siteRootHidden: e
        }, t)
    }, i.prototype.notifyAspects = function(e) {
        this._site.notifyAspects(e)
    }, i.prototype.updateAspectGlobalData = function(e, t) {
        var i = this.getDisplayedDAL(),
            n = s(e);
        i.isPathExist(n) ? i.mergeByPath(n, t) : i.setByPath(n, t)
    }, i.prototype.setAspectGlobalData = function(e, t) {
        var i = this.getDisplayedDAL(),
            n = s(e);
        i.setByPath(n, t)
    }, i.prototype.getAspectGlobalData = function(e) {
        var t = this.getDisplayedDAL(),
            i = s(e);
        return t.getByPath(i)
    }, i.prototype.removeAspectGlobalData = function(e) {
        var t = this.getDisplayedDAL();
        if (this.getAspectGlobalData(e)) {
            var i = s(e);
            t.removeByPath(i)
        }
    }, i.prototype.updateAspectComponentData = function(t, i, s) {
        var o = this.getDisplayedDAL(),
            a = n(t, i);
        o.isPathExist(a) && e.isPlainObject(s) ? o.mergeByPath(a, s) : o.setByPath(a, s)
    }, i.prototype.setAspectComponentData = function(e, t, i) {
        var s = this.getDisplayedDAL(),
            o = n(e, t);
        s.setByPath(o, i)
    }, i
}), define("core/siteRender/siteAspectsMixin", ["lodash", "zepto", "core/core/siteAspectsRegistry", "core/siteRender/SiteAspectsSiteAPI", "utils", "coreUtils"], function(e, t, i, s, n, o) {
    function a(t, i, s) {
        return e.map(t, function(t) {
            var n = t[i];
            return e.isFunction(n) && n.apply(t, s) || l
        })
    }

    function r() {
        this.notifyAspects("orientationchange"), this.timeout = window.setTimeout(this.notifyAspects.bind(this, u.resize), 300)
    }

    function c() {
        var t = this.siteAPI.getRootIdsWhichShouldBeRendered();
        if (!e.isEqual(t, this._previoslyRenderedRoots)) {
            var i = e.difference(this._previoslyRenderedRoots, t),
                s = e.difference(t, this._previoslyRenderedRoots);
            this._rootsAddedAndNotYetLayouted = e(this._rootsAddedAndNotYetLayouted).concat(s).difference(i).uniq().value(), this._previoslyRenderedRoots = e.clone(t), this.notifyAspects(d.renderedRootsChanged, s, i)
        }
    }

    function p() {
        var t = this.siteAPI.getSiteData().getRootNavigationInfo(),
            i = this._previoslyNavigationInfo;
        this.siteAPI.isExperimentOpen("sv_dpages") && !e.isEqual(t, i) && (o.dynamicPagesUtils.isSamePageNavigation(t, i) && o.dynamicPagesUtils.isInnerRouteChanged(t, i) && (this.siteAPI.getSiteAspect("actionsAspect").handlePagePageNavigationCanceled(), this.notifyAspects(g.urlPageChange)), this._previoslyNavigationInfo = t)
    }
    var l = [],
        d = {
            mount: "mount",
            unmount: "unmount",
            urlPageChange: "urlPageChange",
            renderedRootsChanged: "renderedRootsChanged",
            addedRenderedRootsDidLayout: "addedRenderedRootsDidLayout",
            modeChange: "modeChange",
            fakeModeChange: "fakeModeChange",
            slideChange: "slideChange",
            didLayout: "didLayout",
            siteReady: "siteReady",
            willMount: "willMount",
            willUpdate: "willUpdate",
            aspectsReady: "aspectsReady",
            viewportChange: "viewportChange",
            svSessionChange: "svSessionChange",
            siteMetadataChange: "siteMetadataChange"
        },
        u = {
            scroll: "scroll",
            resize: "resize",
            focus: "focus",
            blur: "blur",
            message: "message",
            keydown: "keydown",
            keyup: "keyup",
            touchstart: "touchstart",
            touchend: "touchend",
            touchmove: "touchmove",
            touchcancel: "touchcancel",
            orientationchange: "orientationchange"
        },
        h = {
            visibilitychange: "visibilitychange",
            click: "click"
        },
        g = e.assign(e.clone(d), u, h);
    Object.freeze(g);
    var f = {
        didLayout: function() {
            if (!e.isEmpty(this._rootsAddedAndNotYetLayouted)) {
                var t = this._rootsAddedAndNotYetLayouted;
                this._rootsAddedAndNotYetLayouted = [], this.notifyAspects(d.addedRenderedRootsDidLayout, t)
            }
        }
    };
    return {
        supportedEvents: g,
        getAllSiteAspects: function() {
            return this._addMissingAspects(), this.siteAspects
        },
        getInitialState: function() {
            this._aspectsSiteAPI = new s(this), this.siteAspects = {}, this._siteAspectsEventsRegistry = {}, this._listenersOnWindow = [], this._listenersOnDocument = [], this._previoslyRenderedRoots = [], this._previoslyNavigationInfo = {}, this._rootsAddedAndNotYetLayouted = []
        },
        componentWillMount: function() {
            this._addMissingAspects(), this.notifyAspects(this.supportedEvents.willMount)
        },
        componentWillUpdate: function() {
            this.notifyAspects(this.supportedEvents.willUpdate)
        },
        _addMissingAspects: function() {
            e.forEach(i.getAllAspectConstructors(), function(e, t) {
                this.siteAspects[t] || (this.props.viewerPrivateServices.displayedDAL.setByPath(["siteAspectsData", t], {
                    globalData: void 0,
                    dataByCompId: {}
                }), this.siteAspects[t] = new e(this._aspectsSiteAPI))
            }.bind(this)), this.notifyAspects(this.supportedEvents.aspectsReady)
        },
        getAspectsContainer: function() {
            return this.refs.siteAspectsContainer
        },
        getAspectsReactComponents: function() {
            return e.flattenDeep(a(this.siteAspects, "getReactComponents", [this.loadedStyles]))
        },
        getAspectComponentDescriptions: function() {
            return e.flattenDeep(a(this.siteAspects, "getComponentsToRender", [this._aspectsSiteAPI]))
        },
        getAspectsComponentStructures: function() {
            var t = e.flattenDeep(a(this.siteAspects, "getComponentStructures")),
                i = e.map(this.getAspectComponentDescriptions(), "structure");
            return t.concat(i)
        },
        componentDidMount: function() {
            var i = t(window),
                s = t(window.document);
            e.forEach(u, function(e) {
                var t = {
                    eventName: e,
                    listener: this.notifyAspects.bind(this, e)
                };
                this._listenersOnWindow.push(t), i.on(e, t.listener)
            }.bind(this)), e.forEach(h, function(e) {
                var t = {
                    eventName: e,
                    listener: this.notifyAspects.bind(this, e)
                };
                this._listenersOnDocument.push(t), s.on(e, t.listener)
            }.bind(this));
            var n = {
                eventName: u.orientationchange,
                listener: r.bind(this)
            };
            this._listenersOnWindow.push(n), i.on(n.eventName, n.listener), this.notifyAspects("mount"), this.siteAPI.getSiteData().isClientAfterSSR() || c.call(this), p.call(this)
        },
        componentDidUpdate: function() {
            this.isChangingUrlPage && this.notifyAspects("urlPageChange"), c.call(this), p.call(this)
        },
        componentWillUnmount: function() {
            var i = t(window),
                s = t(window.document);
            e.forEach(this._listenersOnWindow, function(e) {
                i.off(e.eventName, e.listener)
            }), e.forEach(this._listenersOnDocument, function(e) {
                s.off(e.eventName, e.listener)
            }), window.clearTimeout(this.timeout), this._aspectsSiteAPI.onSiteUnmount(), this.notifyAspects("unmount")
        },
        notifyAspects: function(t) {
            e.has(f, t) && f[t].apply(this, e.tail(arguments));
            var i = this._siteAspectsEventsRegistry[t];
            if (i && i.length) {
                var s = i.slice();
                e.invokeMap(s, "apply", void 0, e.tail(arguments))
            }
        },
        registerAspectToEvent: function(e, t) {
            e === d.siteReady && this.siteIsReady ? t() : g[e] ? (this._siteAspectsEventsRegistry[e] = this._siteAspectsEventsRegistry[e] || [], this._siteAspectsEventsRegistry[e].push(t)) : n.log.error("this event isn't supported by site " + e)
        },
        unregisterAspectFromEvent: function(e, t) {
            var i = this._siteAspectsEventsRegistry[e];
            if (i) {
                var s = i.indexOf(t); - 1 !== s && i.splice(s, 1)
            }
        }
    }
}), define("core/siteRender/aspectComponentsPortal", ["lodash", "react", "santaProps", "compUtils"], function(e, t, i, s) {
    return t.createClass({
        propTypes: {
            siteAPI: t.PropTypes.object,
            loadedStyles: t.PropTypes.object,
            compDescriptions: t.PropTypes.arrayOf(t.PropTypes.shape({
                structure: t.PropTypes.object,
                props: t.PropTypes.object
            }))
        },
        displayName: "AspectSantaCompsPortal",
        render: function() {
            var n = e.map(this.props.compDescriptions, function(t) {
                var n = i.componentPropsBuilder.getCompProps(t.structure, this.props.siteAPI, t.pageId, null, t.props);
                return e.assign(n, t.props, {
                    key: t.structure.id,
                    ref: t.structure.id
                }), s.compFactory.getCompClass(t.structure.componentType, !0)(n)
            }.bind(this));
            return t.DOM.div({}, n)
        }
    })
}), define("core/components/siteAspects/scriptClass", ["react", "reactDOM"], function(e, t) {
    function i(e) {
        return window.loadedScripts && window.loadedScripts[e.NAME]
    }

    function s(e) {
        return 'window.loadedScripts = window.loadedScripts || {}; window.loadedScripts["' + e.NAME + '"] = true;'
    }
    return e.createClass({
        displayName: "scriptClass",
        loaded: !1,
        componentDidMount: function() {
            var e, s, n, o = this.props.scriptData,
                a = i(o.script);
            a && !this.loaded ? this.fireCallbacks(o, !0) : (n = this, a = window.document.createElement("script"), e = function() {
                n.fireCallbacks(o, !1), n.loaded = !0, a.removeEventListener("load", e)
            }, a.addEventListener("load", e), a.src = o.script.SRC, (s = t.findDOMNode(this)).replaceChild(a, s.children[0]))
        },
        fireCallbacks: function(e, t) {
            e.callbacks.forEach(function(e) {
                var i = e.context;
                i ? e.callback.call(i, {
                    fromCache: t
                }) : e.callback({
                    fromCache: t
                })
            }), e.callbacks.length = 0
        },
        render: function() {
            var t = this.props.scriptData.script,
                i = "script-" + t.NAME;
            return e.DOM.div(null, e.DOM.script({
                id: i,
                src: t.SRC
            }), e.DOM.script({
                dangerouslySetInnerHTML: {
                    __html: s(t)
                }
            }))
        }
    })
}), define("core/components/siteAspects/externalScriptLoaderAspect/externalScriptContainer", ["react", "lodash", "core/components/siteAspects/scriptClass"], function(e, t, i) {
    return e.createClass({
        displayName: "externalScriptContainer",
        getScriptComponents: function() {
            var s = this.props.siteAPI.getAspectGlobalData("externalScriptLoaderAspect");
            return t.map(s, function(t, s) {
                return e.createElement(i, {
                    key: s,
                    ref: s,
                    scriptData: t
                })
            })
        },
        render: function() {
            return e.DOM.div(null, this.getScriptComponents())
        }
    })
}), define("core/components/siteAspects/externalScriptLoaderAspect/ecomCheckoutAspectContainer", ["lodash", "react"], function(e, t) {
    function i(e) {
        var i = t.DOM.iframe({
            src: e,
            id: "checkoutPageIFrame",
            style: {
                width: "900",
                height: "600",
                top: "50%",
                left: "50%",
                "margin-left": "-450",
                "margin-top": "-300",
                position: "absolute"
            }
        });
        return t.DOM.div({
            style: {
                position: "fixed",
                top: 0,
                left: 0,
                width: "100%",
                height: "100%",
                backgroundColor: "rgba(0, 0, 0, 0.5)"
            }
        }, i)
    }
    return t.createClass({
        displayName: "ecomCheckoutAspectContrainer",
        render: function() {
            var t = this.props.siteAPI.getAspectGlobalData("ecomCheckoutAspect");
            return e.get(t, ["modalOpened"]) ? i(e.get(t, ["src"])) : null
        }
    })
}), define("core/siteRender/siteAspectsDomContainer", ["lodash", "react", "core/siteRender/aspectComponentsPortal", "core/components/siteAspects/externalScriptLoaderAspect/externalScriptContainer", "core/components/siteAspects/externalScriptLoaderAspect/ecomCheckoutAspectContainer"], function(e, t, i, s, n) {
    var o = t.createFactory(i);
    return t.createClass({
        propTypes: {
            loadedStyles: t.PropTypes.object,
            siteAPI: t.PropTypes.object,
            aspectsCompsFunc: t.PropTypes.func,
            getAspectComponentDescriptions: t.PropTypes.func
        },
        displayName: "siteAspectsDomContainer",
        render: function() {
            var i = {};
            this.props.isMobileView && e.assign(i, {
                width: this.props.siteWidth
            });
            var a = [o({
                key: "aspectPortal",
                ref: "aspectPortal",
                siteAPI: this.props.siteAPI,
                loadedStyles: this.props.loadedStyles,
                compDescriptions: this.props.getAspectComponentDescriptions()
            }), t.createElement(s, {
                siteAPI: this.props.siteAPI,
                key: "externalScriptContainer"
            }), t.createElement(n, {
                siteAPI: this.props.siteAPI,
                key: "ecomCheckoutAspectContrainer"
            })].concat(this.props.aspectsCompsFunc());
            return t.DOM.div({
                className: "siteAspectsContainer",
                style: i
            }, a)
        }
    })
}), define("core/siteRender/extraSiteHeight", ["react"], function(e) {
    return e.createClass({
        displayName: "extraSiteHeight",
        render: function() {
            return e.DOM.div({
                style: {
                    height: this.props.siteAPI.getRenderFlag("extraSiteHeight"),
                    position: "relative"
                }
            })
        }
    })
}), define("core/siteRender/blockingLayer", ["lodash", "react"], function(e, t) {
    var i = Math.pow(2, 31) - 2;
    return t.createClass({
        displayName: "blockingLayer",
        getStyle: function() {
            var t = this.props.siteAPI.getRenderFlag("blockingLayer"),
                s = this.props.siteAPI.getRenderFlag("blockingPopupLayer");
            return e.merge({
                display: "inline-block",
                width: "100vw",
                height: "100vh",
                position: "fixed",
                top: 0,
                left: 0,
                zIndex: i
            }, t || s)
        },
        render: function() {
            return t.DOM.div({
                style: this.getStyle()
            })
        }
    })
}), define("core/siteRender/wixAdsInstatiator", ["lodash", "santaProps", "compUtils"], function(e, t, i) {
    var s, n = {
        mobile: {
            footerLabel: "7c3dbd_67131d7bd570478689be752141d4e28a.jpg",
            adUrl: "http://www.wix.com/"
        },
        desktop: {
            topLabel: '<span class="smallMusa">(Wix-Logo) </span>Create a <span class="smallLogo">Wix</span> site!',
            topContent: '100s of templates<br />No coding needed<br /><span class="emphasis spacer">Start now >></span>',
            footerLabel: '<div class="adFootBox"><div class="siteBanner" ><div class="siteBanner"><div class="wrapper"><div class="bigMusa">(Wix Logo)</div><div class="txt shd" style="color:#fff">This site was created using </div> <div class="txt shd"><a href="http://www.wix.com?utm_campaign=vir_wixad_live" style="color:#fff"> WIX.com. </a></div> <div class="txt shd" style="color:#fff"> Create your own for FREE <span class="emphasis"> >></span></div></div></div></div></div>',
            adUrl: "http://www.wix.com/lpviral/en900viral?utm_campaign=vir_wixad_live"
        }
    };
    return {
        getStructure: function(e) {
            var t = e.isMobileView(),
                i = t ? "wysiwyg.viewer.components.WixAdsMobile" : "wysiwyg.viewer.components.WixAdsDesktop";
            return {
                id: e.WIX_ADS_ID,
                skin: "wysiwyg.viewer.skins.wixadsskins.WixAdsWebSkin",
                componentType: i,
                styleId: "wixAds",
                layout: {
                    position: t ? "static" : "absolute"
                }
            }
        },
        compRefFunction: function(e) {
            s && s(e)
        },
        getWixAdsComponent: function(o, a) {
            var r, c = o.getSiteData();
            r = c.isMobileView() ? c.mobileAdData && !e.isEmpty(c.mobileAdData.adUrl) ? c.mobileAdData : n.mobile : c.adData && !e.isEmpty(c.adData.adUrl) ? c.adData : n.desktop;
            var p = this.getStructure(c),
                l = p.componentType,
                d = i.compFactory.getCompClass(l),
                u = t.componentPropsBuilder.getCompProps(p, o);
            return u.adData = r, a && (s = e.partialRight(a, u.structure.id)), u.ref = this.compRefFunction, d(u)
        }
    }
}), define("core/bi/events.json", [], function() {
    return {
        SITE_MEMBER_LOGIN_SUCCESS: {
            eventId: 520,
            adapter: "hed",
            params: {
                c1: "userName"
            }
        },
        PAGE_PERFORMANCE_DATA: {
            eventId: 350,
            adapter: "ugc-viewer",
            params: {
                c1: "preClient",
                c2: "client",
                c3: "santaVersion",
                i1: "timeoutSeconds",
                is_premium: "isPremium",
                is_wixsite: "isWixSite",
                dns_time: "dnsTime",
                response_time: "responseTime",
                experiment: "experiment",
                page_id: "pageId"
            },
            sampleRatio: 1
        },
        LOAD_IMAGES_DATA: {
            eventId: 341,
            adapter: "mlt",
            params: {
                c1: "imagePerf"
            }
        },
        LP_BUTTON_CLICK: {
            eventId: 352,
            adapter: "ugc-viewer",
            params: {
                postSignUp: "postSignUp",
                postLogin: "postLogin",
                target_url: "targetUrl",
                button_name: "buttonName",
                active_fold: "activeFold",
                total_folds: "totalFolds",
                text: "text",
                component_id: "componentId",
                loginCompName: "loginCompName"
            },
            wixSiteSampleRatio: 0
        },
        IMAGES_DOWNLOAD: {
            eventId: 353,
            adapter: "ugc-viewer",
            params: {
                imagePerf: "imagePerf",
                kbps: "kbps",
                ttfb: "ttfb"
            }
        },
        MONOTYPE_FONTS_USED_ON_SITE: {
            eventId: 355,
            adapter: "ugc-viewer",
            params: {}
        },
        USER_INTERACTION: {
            eventId: 368,
            adapter: "ugc-viewer",
            params: {
                type: "type",
                time: "time"
            }
        },
        UNSAFE_HTML_IN_TEXT_COMPONENT: {
            eventId: 369,
            adapter: "ugc-viewer",
            params: {
                filtered_content: "filtered_content",
                component_id: "component_id",
                component_type: "component_type"
            }
        },
        CLICK_TO_ACTION: {
            eventId: 372,
            adapter: "ugc-viewer",
            params: {
                data: "data",
                field_type: "field_type",
                input_type: "input_type"
            }
        },
        SITE_MEMBER_OPEN_LOGIN_OR_SIGNUP_DIALOGS: {
            eventId: 601,
            adapter: "site-members",
            src: 5,
            params: {
                action: "action",
                visitor_id: "visitor_id"
            }
        },
        SITE_MEMBER_EXIT_DIALOG: {
            eventId: 602,
            adapter: "site-members",
            src: 5,
            params: {
                context: "context",
                visitor_id: "visitor_id"
            }
        },
        SITE_MEMBER_SUBMIT_BUTTON: {
            eventId: 603,
            adapter: "site-members",
            src: 5,
            params: {
                context: "context",
                visitor_id: "visitor_id"
            }
        },
        SITE_MEMBER_CLICKED_FORGOT_PASSWORD: {
            eventId: 604,
            adapter: "site-members",
            src: 5,
            params: {
                visitor_id: "visitor_id"
            }
        },
        SITE_MEMBER_AUTH_DIALOG_OPENED: {
            eventId: 607,
            adapter: "site-members",
            src: 5,
            params: {
                context: "context",
                app_id: "app_id",
                initator: "initator",
                visitor_id: "visitor_id",
                has_social: "has_social"
            }
        },
        CDN_PERFORMANCE: {
            eventId: 379,
            adapter: "ugc-viewer",
            params: {
                small_name: "smallName",
                small_dns_time: "smallDnsTime",
                small_connect_time: "smallConnectTime",
                small_ttfb: "smallTtfb",
                small_response_time: "smallResponseTime",
                small_kbps: "smallKbps",
                large_name: "largeName",
                large_dns_time: "largeDnsTime",
                large_connect_time: "largeConnectTime",
                large_ttfb: "largeTtfb",
                large_response_time: "largeResponseTime",
                large_kbps: "largeKbps"
            }
        }
    }
}), define("core/bi/events", ["core/bi/events.json", "lodash", "utils"], function(e, t, i) {
    return i.logger.register("core", "event", e), e
}), define("core/core/siteBI", ["lodash", "zepto", "utils", "core/bi/events", "fonts", "experiment"], function(e, t, i, s, n, o) {
    function a(t) {
        var i = t.rendererModel || t.editorModel || {};
        return e.reduce(i.runningExperiments, function(e, t, i) {
            var s = h.indexOf(i);
            return -1 === s ? e : e + Math.pow(2, s)
        }, 0)
    }

    function r(t, i) {
        function n(e, t) {
            return "number" != typeof t ? t : t ? t - e : void 0
        }
        if (!(M < i)) {
            "lastTimeStamp" in t.wixBiSession && (M = i);
            var r = t.isPremiumDomain(),
                c = "WixSite" === t.rendererModel.siteInfo.documentType,
                p = e.assign({}, C, {
                    initialTimestamp: t.wixBiSession.initialTimestamp
                });
            p = e.mapValues(p, n.bind(null, p.navigationStart || p.initialTimestamp));
            var l = e.omitBy(t.wixBiSession, function(e, t) {
                return "number" != typeof e || "et" === t
            });
            if (T.getEntries) {
                var d = T.getEntries().filter(function(e) {
                    return -1 !== e.name.search(/.min.js$/)
                });
                if (d.length) {
                    var h = C.navigationStart || 0,
                        g = e.find(d, function(t) {
                            return e.includes(t.name, "skins")
                        });
                    g && (l.skinsStart = Math.round(h + g.startTime), l.skinsEnd = Math.round(l.skinsStart + g.duration)), l.packagesEnd = 0, d.forEach(function(e) {
                        l.packagesEnd = Math.max(l.packagesEnd, e.startTime + e.duration)
                    }), l.packagesEnd = Math.round(h + l.packagesEnd)
                }
            }
            l = e.mapValues(l, n.bind(null, l.initialTimestamp || 0));
            var f = t.santaBase.match(/([\d\.]+)\/?$/);
            f = f && f[1] || "unknown";
            var m = {
                    isPremium: r ? 1 : 0,
                    isWixSite: c ? 1 : 0,
                    preClient: JSON.stringify(p),
                    client: JSON.stringify(l),
                    santaVersion: f,
                    timeoutSeconds: i,
                    experiment: a(t),
                    pageId: t.getCurrentUrlPageId()
                },
                y = p.domainLookupEnd - p.domainLookupStart;
            isNaN(y) || (m.dnsTime = y);
            var v = p.responseEnd - p.connectStart;
            isNaN(v) || (m.responseTime = v), t.wixBiSession.viewerSessionId && (o.isOpen("useBeaconForPerformanceEvent", t) && (s.PAGE_PERFORMANCE_DATA.useBeacon = !0), u.reportBI(t, s.PAGE_PERFORMANCE_DATA, m))
        }
    }

    function c(t) {
        function i(e) {
            return "_" + e + "k"
        }

        function n(t) {
            var s = r.map(i).concat([c]);
            return e.zipObject(s, e.times(s.length, t))
        }

        function o(t, i) {
            var s = {
                    url: t.src,
                    hadError: !1,
                    width: t.width,
                    height: t.height,
                    size: t.width * t.height
                },
                n = i ? i.startTime : 0,
                o = i ? i.duration : 0;
            return e.defaults(s, {
                hadError: !i,
                start: Math.round(n),
                end: Math.round(n + o),
                speed: Math.round(s.size / (o + .01) * 100) / 100
            }), s
        }

        function a(t) {
            var s = e.findLastIndex(r, function(e) {
                return 1e3 * e < t.size
            }) + 1;
            return s < r.length ? i(r[s]) : c
        }
        var r = [100, 200, 300, 400, 500, 1e3, 2e3, 3e3],
            c = "_over" + e.last(r) + "k",
            p = e(window.document.getElementsByTagName("img")).filter(function(t) {
                return e.startsWith(t.src, window.serviceTopology.staticMediaUrl)
            }).reduce(function(e, t) {
                if (t.complete) {
                    var i = o(t, T.getEntriesByName(t.src)[0]);
                    if (i.hadError) e.errors++;
                    else {
                        var s = a(i);
                        e.imagesBySize[s]++, e.imagesSamples[s].length < I && e.imagesSamples[s].push(i)
                    }
                } else e.loading++;
                return e
            }, {
                loading: 0,
                imagesBySize: n(e.constant(0)),
                imagesSamples: n(function() {
                    return []
                }),
                errors: 0
            });
        u.reportBI(t, s.LOAD_IMAGES_DATA, {
            imagePerf: JSON.stringify(p)
        })
    }

    function p(t) {
        function n() {
            return e(T.getEntriesByType("resource")).toArray().filter(function(t) {
                return t.duration > g && e.startsWith(t.name, c)
            }).value()
        }

        function o(e) {
            var t = e.name.replace(c, ""),
                i = t.match(/\.([^\/]+).+w_(\d+),h_(\d+),/);
            if (i) {
                var s = Number(i[2]),
                    n = Number(i[3]);
                return {
                    url: t,
                    format: i[1],
                    width: s,
                    height: n,
                    size: s * n
                }
            }
            return {}
        }

        function a(t) {
            var i = o(t),
                s = {
                    start: Math.round(t.startTime),
                    end: Math.round(t.startTime + t.duration),
                    ttfb: Math.round(t.responseStart - t.requestStart),
                    dns: Math.round(t.domainLookupEnd - t.domainLookupStart),
                    ssl: t.secureConnectionStart ? Math.round(t.connectEnd - t.secureConnectionStart) : 0,
                    speed: t.duration > 0 ? Math.round(i.size / t.duration) : 0,
                    fileSize: t.fileSize,
                    kbps: t.duration > 0 ? Math.round(1e3 * t.fileSize / t.duration) : 0
                };
            return e.assign({}, i, s)
        }

        function r(o) {
            function r(t) {
                return new o(function(s) {
                    function n(i) {
                        s(e.assign(t, {
                            fileSize: Math.round(i / 1024)
                        }))
                    }
                    var o = t.transferSize || t.encodedBodySize;
                    o ? n(o) : i.ajaxLibrary.ajax({
                        type: "HEAD",
                        url: t.name,
                        success: function(e, t, i) {
                            n(i.getResponseHeader("Content-Length") || 0)
                        },
                        error: function() {
                            n(0)
                        }
                    })
                })
            }
            var c = n().map(r);
            o.all(c).then(function(i) {
                var n = e(i).filter(function(e) {
                    return e.fileSize > m
                }).sortBy("fileSize").takeRight(E).map(a).filter(function(e) {
                    return e.kbps <= f
                }).value();
                if (n.length) {
                    var o = e.reduce(n, function(e, t) {
                        return {
                            size: e.size + t.fileSize,
                            duration: e.duration + t.end - t.start,
                            ttfb: e.ttfb + t.ttfb
                        }
                    }, {
                        size: 0,
                        duration: 0,
                        ttfb: 0
                    });
                    u.reportBI(t, s.IMAGES_DOWNLOAD, {
                        imagePerf: JSON.stringify(n),
                        kbps: Math.round(1e3 * o.size / o.duration),
                        ttfb: Math.round(o.ttfb / n.length)
                    })
                }
            }, e.noop)
        }
        var c = window.serviceTopology ? window.serviceTopology.staticMediaUrl : "nothing";
        window.Promise && window.Promise.all ? r(window.Promise) : requirejs(["bluebird"], r, e.noop)
    }

    function l(i) {
        function n() {
            ++c > y && r("key")
        }

        function o() {
            ++p > v && r("mouse")
        }

        function a() {
            ++l > S && r("scroll")
        }
        if (t) {
            var r = function(n) {
                    t(window).off(".bi"), r = e.noop, u.reportBI(i, s.USER_INTERACTION, {
                        type: n
                    })
                },
                c = 0,
                p = 0,
                l = 0;
            t(window).on({
                "keydown.bi": n,
                "mousemove.bi": o,
                "scroll.bi": a
            })
        }
    }
    var d = !1,
        u = i.logger,
        h = ["useHttps"],
        g = 25,
        f = 9216,
        m = 5,
        y = 2,
        v = 44,
        S = 11;
    if ("undefined" == typeof window) return {
        init: e.noop,
        send: e.noop
    };
    var A = window.queryUtil && window.queryUtil.isParameterTrue("isEdited"),
        _ = ["navigationStart", "fetchStart", "domainLookupStart", "domainLookupEnd", "connectStart", "secureConnectionStart", "requestStart", "responseStart", "responseEnd"],
        P = [5, 15, 30],
        I = 3,
        E = 10,
        T = window.performance || {},
        C = T.timing;
    C = e.pick(C, _);
    var M, D = e.now();
    return {
        init: function(t) {
            A || (u.shouldSendReport(t, s.USER_INTERACTION) && setTimeout(function() {
                l(t)
            }, 300), u.shouldSendReport(t) && (M = 1 / 0, D = e.now(), e.forEach(P, function(e) {
                setTimeout(r.bind(null, t, e), 1e3 * e)
            }), T.getEntriesByName && setTimeout(function() {
                c(t), p(t)
            }, 10500)))
        },
        send: function(t) {
            A || u.shouldSendReport(t, s.PAGE_PERFORMANCE_DATA) && setTimeout(function() {
                r(t, Math.round((e.now() - D) / 1e3))
            }, 300)
        },
        trackFontsIfNeeded: function(e, t) {
            var a = n.fontsTracker;
            A || d || !a.shouldTrackFonts(e, t) || (d = !0, u.reportBI(e, s.MONOTYPE_FONTS_USED_ON_SITE, {}), o.isOpen("monotypeTrackPixel", e) && i.ajaxLibrary.get("//fast.fonts.com/t/1.css?apiType=css&projectid=b4572556-9c74-4a59-a1a8-e8c7efe11d70"))
        }
    }
}), define("core/siteRender/WixPopupRoot", ["lodash", "react", "reactDOM", "santaProps", "core/siteRender/WixPageReact", "core/siteRender/blockingLayer"], function(e, t, i, s, n, o) {
    function a(e) {
        return "preview" === e.getRenderFlag("componentViewMode")
    }
    var r = t.createFactory(n),
        c = t.createFactory(o);
    return t.createClass({
        displayName: "WixPopupRoot",
        getInitialState: function() {
            return {
                activePopupId: this.props.currentPopupId,
                activePopupKey: 1,
                animating: !1
            }
        },
        shouldComponentUpdate: function(t, i) {
            if (!t.currentPopupId && this.state.activePopupId && !this.state.animating) {
                var s = this.props.siteAPI.getSiteAspect("actionsAspect"),
                    n = e.keys(this.refs[this.state.activePopupId].refs);
                return this.setState({
                    animating: !0
                }), s.registerComponentsExit(n, function() {
                    t.currentPopupId || this.setState({
                        activePopupId: null,
                        animating: !1
                    }), s.handleNavigationComplete()
                }.bind(this)), !1
            }
            return !(i.animating && !t.currentPopupId)
        },
        componentWillReceiveProps: function(e) {
            e.currentPopupId !== this.state.activePopupId && this.setState({
                activePopupId: e.currentPopupId,
                activePopupKey: (this.state.activePopupKey || 0) + 1,
                animating: !1
            })
        },
        componentDidUpdate: function() {
            var e = this.state.activePopupId;
            e && a(this.props.siteAPI) && this.props.siteAPI.getRuntimeDal().markPopupAsBeenOpened(e)
        },
        render: function() {
            var e = this.props.siteData,
                i = this.state.activePopupId,
                n = e.isMobileView();
            if (i) {
                var o = s.componentPropsBuilder.getRootProps(this.props.currentPopupId, this.props.siteAPI, this.props.viewerPrivateServices, this.props.measureMap);
                o.mobxObserverWrapperProps = this.props.mobxObserverWrapperProps, o.key = this.state.activePopupKey;
                var a = [r(o), this.props.blockingPopupLayer ? c({
                        siteAPI: this.props.siteAPI
                    }) : null],
                    p = e.getSiteWidth(),
                    l = t.DOM.div({
                        id: "POPUPS_WRAPPER",
                        className: "POPUPS_WRAPPER",
                        key: "POPUPS_WRAPPER",
                        style: {
                            minWidth: p,
                            minHeight: e.getScreenHeight(),
                            margin: "0 auto",
                            width: n ? p : "auto"
                        },
                        children: a
                    });
                return t.DOM.div({
                    id: "POPUPS_ROOT",
                    className: n ? "POPUPS_ROOT mobile" : "POPUPS_ROOT",
                    key: "POPUPS_ROOT",
                    style: {
                        overflow: this.props.siteAPI.getRenderFlag("allowSiteOverflow") ? null : "hidden"
                    },
                    tabIndex: 0,
                    children: [l]
                })
            }
            return null
        },
        componentDidMount: function() {
            var e = i.findDOMNode(this);
            e && e.focus()
        }
    })
}), define("core/siteRender/siteClickHandler", ["lodash", "zepto", "utils", "core/bi/events.json"], function(e, t, i, s) {
    function n(e) {
        return e.stopPropagation(), e.preventDefault(), !1
    }

    function o(e, t) {
        if (e.attr("data-mobile")) {
            var s = i.stringUtils.isTrue(e.attr("data-mobile"));
            t.setMobileView(s), i.mobileViewportFixer.fixViewportTag(t.getSiteData())
        }
    }

    function a(e, t, s) {
        var n = this.props.siteData,
            o = i.linkRenderer.isExternalLink(n, s),
            a = i.linkRenderer.isEmailLink(s),
            r = "_self" === t.attr("target"),
            c = this.siteAPI.getRenderRealtimeConfigItem("previewTooltipCallback");
        return !(this.siteAPI.getRenderFlag("isExternalNavigationAllowed") || !c || !(o && r || a)) && (c(e.target.getBoundingClientRect(), "text_editor_inactive_link_on_preview"), !0)
    }

    function r(e, t, s) {
        var n = e.attr("data-no-physical-url") || t;
        return i.wixUrlParser.parseUrl(s, n)
    }

    function c(e) {
        return !e.attr("data-no-physical-url")
    }

    function p(e) {
        return !!e.attr("data-keep-roots")
    }

    function l(t, i) {
        e.assign(t, {
            pageItemAdditionalData: i.attr("data-page-item-context"),
            anchorData: i.attr("data-anchor")
        })
    }

    function d(e, t) {
        var i = r(e, t, this.props.siteData);
        if (!i || "_blank" === e.attr("target")) return !1;
        l(i, e);
        var s = c(e),
            n = p(e);
        return this.handleNavigation(i, t, s, n), !0
    }

    function u(e, t) {
        t.attr("data-type") && e.reportBI(s.CLICK_TO_ACTION, {
            field_type: t.attr("data-type"),
            data: t.attr("data-content"),
            input_type: t.attr("data-auto-recognition") ? "auto_recognized" : "user_input"
        })
    }

    function h(e) {
        var i = "a" === e.target.tagName.toLowerCase() ? t(e.target) : t(e.target).parents("a"),
            s = i[0],
            r = i.attr("href") || s && s.href;
        u(this.siteAPI, i), o(i, this.siteAPI);
        var c = a.call(this, e, i, r);
        return c || (c = d.call(this, i, r)), this.siteAPI.isSelectionSharerVisible() && this.siteAPI.hideSelectionSharer(), !c || n(e)
    }
    return {
        clickHandler: h
    }
}), define("core/siteRender/siteTraversalMixin", ["lodash"], function(e) {
    function t(t) {
        if (t) {
            var i = t.props.id;
            return e.get(t, ["compRefs", i, "props", "pageStub"])
        }
    }

    function i(e, i) {
        return !t(e[i])
    }

    function s(i) {
        return e(i).omit("").pickBy(function(e) {
            return !t(e)
        }).keys().value()
    }

    function n() {
        var t = this.getMasterPage();
        if (!t) return [];
        var n = this.props.siteData,
            o = c(t);
        if (!o) return [];
        var a = p(this),
            r = n.getPrimaryPageId(),
            l = n.getCurrentPopupId();
        return !i(o, r) || l && !i(a, l) ? e.flatten(["masterPage", s(o), s(a)]) : e.compact(["masterPage", r, l])
    }

    function o() {
        var t = this.props.siteData;
        if (!this.getMasterPage()) {
            var i = t.getExistingRootNavigationInfo(t.getCurrentUrlPageId());
            if (!this.siteAPI.getSiteAspect("siteMembers").isPageAllowed(i)) return []
        }
        return e.compact(["masterPage", t.getPrimaryPageId(), t.getCurrentPopupId()])
    }

    function a(e) {
        var t = this.getPageById(e);
        return t && t.compRefs
    }

    function r(e, t) {
        var i = this.getComponentsByPageId(e);
        return i && i[t]
    }

    function c(t) {
        return e.get(t, ["compRefs", "SITE_PAGES", "refs"])
    }

    function p(t) {
        return e.get(t, ["refs", "popupRoot", "refs"], {})
    }
    return {
        getAllRenderedRootIds: n,
        getRootIdsWhichShouldBeRendered: o,
        getComponentsByPageId: a,
        getComponentByPageAndCompId: r,
        getPageRefs: c
    }
}), define("core/components/selectionSharer/selectionSharer", ["lodash", "react", "utils"], function(e, t, i) {
    var s = i.wixappsClassicsLogger,
        n = i.socialShareHandler;
    return t.createClass({
        displayName: "selectionSharer",
        getInitialState: function() {
            return {
                visible: !1,
                position: null,
                shareInfo: null
            }
        },
        sharePostWrapper: function(e) {
            var t = this.state.shareInfo;
            t.url = e, n.handleShareRequest(this.props.siteAPI, {
                url: e,
                service: t.service,
                title: t.title,
                storeId: t.storeId,
                postId: t.postId,
                hashTags: t.hashTags || "",
                imageUrl: t.imgSrc,
                addDeepLinkParam: !1,
                description: t.description
            })
        },
        show: function(e, t) {
            s.reportEvent(this.props.siteAPI.getSiteData(), s.events.SELECTION_SHARER_OPENED, {
                post_id: t.postId,
                site_id: t.siteId
            }), this.setState({
                visible: !0,
                position: e,
                shareInfo: t
            })
        },
        hide: function() {
            this.setState({
                visible: !1,
                position: null,
                shareInfo: null
            })
        },
        isVisible: function() {
            return this.state.visible
        },
        twitterClickHandler: function() {
            s.reportEvent(this.props.siteAPI.getSiteData(), s.events.SELECTION_SHARER_CLICKED, {
                type: "twitter",
                post_id: this.state.shareInfo.postId,
                site_id: this.state.shareInfo.siteId
            }), this.hide();
            var e = this.state.shareInfo;
            e.service = "twitter", e.title = e.description, n.shortenURL(e.url, 2e3, this.sharePostWrapper, this.sharePostWrapper.bind(null, e.url))
        },
        facebookClickHandler: function() {
            s.reportEvent(this.props.siteAPI.getSiteData(), s.events.SELECTION_SHARER_CLICKED, {
                type: "facebook",
                post_id: this.state.shareInfo.postId,
                site_id: this.state.shareInfo.siteId
            }), this.hide();
            var e = this.state.shareInfo;
            e.service = "facebook", n.shortenURL(e.url, 2e3, this.sharePostWrapper, this.sharePostWrapper.bind(null, e.url))
        },
        mailClickHandler: function() {
            s.reportEvent(this.props.siteAPI.getSiteData(), s.events.SELECTION_SHARER_CLICKED, {
                type: "mail",
                post_id: this.state.shareInfo.postId,
                site_id: this.state.shareInfo.siteId
            }), this.hide();
            var e = this.state.shareInfo;
            e.service = "email", e.description = e.description + "\r\n( " + e.url + " )", n.handleShareRequest(this.props.siteAPI, e)
        },
        render: function() {
            if (this.state.visible) {
                var e = {
                        position: "absolute",
                        left: this.state.position.x + "px",
                        top: this.state.position.y + "px"
                    },
                    s = i.media.getMediaUrl(this.props.siteAPI.getSiteData().serviceTopology, "selectionSharerSocialIcons/facebook.svg"),
                    n = i.media.getMediaUrl(this.props.siteAPI.getSiteData().serviceTopology, "selectionSharerSocialIcons/twitter.svg"),
                    o = i.media.getMediaUrl(this.props.siteAPI.getSiteData().serviceTopology, "selectionSharerSocialIcons/mail.svg");
                return t.createElement("div", {
                    className: "selectionSharerContainer",
                    style: e
                }, [t.createElement("img", {
                    key: "selection-sharer-facebook-img",
                    className: "selectionSharerOption",
                    src: s,
                    onClick: this.facebookClickHandler
                }), t.createElement("div", {
                    key: "selection-sharer-first-separator",
                    className: "selectionSharerVerticalSeparator"
                }), t.createElement("img", {
                    key: "selection-sharer-twitter-img",
                    className: "selectionSharerOption",
                    src: n,
                    onClick: this.twitterClickHandler
                }), t.createElement("div", {
                    key: "selection-sharer-second-separator",
                    className: "selectionSharerVerticalSeparator"
                }), t.createElement("img", {
                    key: "selection-sharer-mail-img",
                    className: "selectionSharerOption",
                    src: o,
                    onClick: this.mailClickHandler
                })])
            }
            return null
        }
    })
}), define("core/siteRender/WixSiteReact", ["zepto", "lodash", "react", "reactDOM", "santaProps", "coreUtilsLib", "core/siteRender/styleCollector", "core/siteRender/WixThemeReact", "core/siteRender/WixPageReact", "core/siteRender/wixBackgroundInstantiator", "layout", "utils", "core/siteRender/SiteAPI", "core/siteRender/siteAspectsMixin", "core/siteRender/siteAspectsDomContainer", "core/siteRender/extraSiteHeight", "core/siteRender/blockingLayer", "core/siteRender/wixAdsInstatiator", "mousetrap", "core/core/siteBI", "core/siteRender/WixPopupRoot", "core/siteRender/siteClickHandler", "core/siteRender/siteTraversalMixin", "core/util/santaVersion.json", "core/components/selectionSharer/selectionSharer", "experiment"], function(e, t, i, s, n, o, a, r, c, p, l, d, u, h, g, f, m, y, v, S, A, _, P, I, E, T) {
    function C(e) {
        return !e.getSiteData().isMobileView()
    }

    function M(e, i) {
        return t.isFunction(e) ? e(i) : e
    }

    function D(e, t, i) {
        return w(i) || M(pe[e], t)
    }

    function R(e, t) {
        return M(le[e], t)
    }

    function b(e, t) {
        return M(ce[e], t)
    }

    function w(e) {
        return "wysiwyg.viewer.components.Group" === e
    }

    function O(e, i) {
        var s = i.getSiteData(),
            n = t.last(e),
            o = ve.getChildrenData(n, s.isMobileView()),
            a = [n].concat(o);
        if (e.length > 1) {
            var r = e[e.length - 2];
            if (D(n.componentType, i, r.componentType) && a.push(r), R(n.componentType, i)) {
                var c = ve.getChildrenData(r, s.isMobileView());
                a = a.concat(c)
            }
            b(n.componentType, i) && t.forEach(o, function(e) {
                var t = ve.getChildrenData(e, s.isMobileView());
                a = a.concat(t)
            })
        }
        return a
    }

    function k(e, i) {
        var s = t.get(e, ["compRefs", i]),
            n = t.get(e, ["refs", i]);
        return s || n
    }

    function N(e, t, i, s, n, o) {
        return {
            viewerPrivateServices: e,
            siteAPI: t,
            loadedStyles: i,
            measureMap: n,
            addComponentRef: s,
            applyStyleOverrides: o,
            activeModes: d.objectUtils.cloneDeep(t.getSiteData().activeModes)
        }
    }

    function B(e, i) {
        var s = this.deletedMeasureMap || this.props.siteData.measureMap,
            n = oe.getRootProps(this.props.rootId, e, this.props.viewerPrivateServices, s);
        return n.structure = t.merge({}, n.structure, {
            layout: {
                position: this.props.siteRootPosition
            }
        }), n.ref = this.props.rootId, n.refInParent = n.ref, n.className = "SITE_ROOT", n.firstPage = !0, delete n.id, n.style = {
            width: this.props.siteData.getSiteWidth()
        }, n.key = (e.getSiteData().isMobileView() ? "mobile_" : "desktop_") + "siteRoot", n.mobxObserverWrapperProps = i, n
    }

    function L() {
        return N(this.props.viewerPrivateServices, this.siteAPI, this.loadedStyles, this.addComponentRef, this.deletedMeasureMap, !0)
    }

    function x() {
        var e = N.call(this, this.props.viewerPrivateServices, this.siteAPI, this.loadedStyles, this.addComponentRef, this.deletedMeasureMap, !1);
        return p.getWixBgComponent(e)
    }

    function U() {
        var e = this;
        return t.throttle(function() {
            !e.dead && e.getMasterPage() && (e.props.siteData.updateScreenSize(), e.forceUpdate())
        }, 500, {
            leading: !1,
            trailing: !0
        })
    }

    function F() {
        if (window.rendererModel) {
            var e = t(window.rendererModel.runningExperiments).pickBy(function(e) {
                return "new" === e
            }).keys().value();
            v.bind("ctrl+alt+shift+e", function() {
                window.alert("Active Experiments:\n" + e).join("\n")
            })
        }
    }

    function G() {
        var e = this.props.siteData,
            i = e.baseVersion || "could not retrieve version!";
        v.bind("ctrl+alt+shift+v", function() {
            window.alert("You are running React!\nVersion: " + i)
        }), t.find(e.currentUrl.query, function(e, t) {
            return "alertversion" === t.toLowerCase()
        }) && (e.isMobileDevice() || e.isTabletDevice()) && window.alert("You are running React!\nVersion: " + i)
    }

    function W(e) {
        e.componentDidLayout && e.componentDidLayout.call(e), e.componentDidLayoutAnimations && e.componentDidLayoutAnimations.call(e), t.forOwn(e.refs, W), t.forOwn(e.compRefs, W)
    }

    function H(e) {
        t.forEach(e, W)
    }

    function V(e) {
        var i = t.clone(e.getMasterPageData().structure);
        return ["children", "mobileComponents"].forEach(function(e) {
            var s = t.chain(i[e]).find({
                id: "PAGES_CONTAINER"
            }).cloneDeep().value();
            s.layout.y = 0, q(s), i[e] = [s]
        }), i
    }

    function q(e) {
        if (e.layout.anchors) {
            for (var t = {
                    distance: 0,
                    locked: !0,
                    originalValue: e.layout.height,
                    targetComponent: "masterPage",
                    topToTop: e.layout.height,
                    type: "BOTTOM_PARENT"
                }; e.layout.anchors.length;) e.layout.anchors.pop();
            e.layout.anchors.push(t)
        }
    }

    function K(e) {
        return function() {
            var i = t.toArray(arguments);
            return Se.apply(null, [e].concat(i)) || Se.apply(null, [e.refs.aspectPortal].concat(i))
        }
    }

    function z(e) {
        var i = this.getAspectsComponentStructures(),
            s = this.props.siteData,
            n = K(this.refs.siteAspectsContainer),
            o = t.transform(i, function(e, t) {
                e[t.id] = {
                    structure: t,
                    getDomNodeFunc: n
                }
            }, {}),
            a = this.state.currentUrlPageId;
        if (!e) return o;
        o.inner = {
            structure: s.pagesData[a].structure,
            pageId: a,
            getDomNodeFunc: Se.bind(null, this.getPageById(a))
        }, o.outer = {
            structure: s.getMasterPageData().structure,
            getDomNodeFunc: Se.bind(null, this.refs[this.props.rootId])
        };
        var r, c = s.getViewMode();
        s.isPageLandingPage(a) ? (o.outer.structure = V(s), r = t.get(s, ["anchorsMap", "landingPageMasterPage", c])) : r = t.get(s, ["anchorsMap", "defaultMasterPage", c]), r && t.set(s, ["anchorsMap", s.getMasterPageData().structure.id, c], r), o.siteBackground = {
            structure: p.getWixBgStructure(),
            getDomNodeFunc: Se.bind(null, this)
        };
        var l = this.state.currentPopupId;
        if (l && (o[l] = {
                structure: s.getPageData(l).structure,
                getDomNodeFunc: Se.bind(null, this.refs.popupRoot, l),
                pageId: l
            }), s.shouldShowWixAds()) {
            var d = y.getStructure(s);
            o.wixAds = {
                structure: d,
                getDomNodeFunc: Se.bind(null, this)
            }
        }
        return o
    }

    function j(t) {
        var i = e(".hiddenTillReady");
        t.isMobileDevice() ? (e(".wix-menu-enabled").removeClass("wix-menu-enabled"), i.css({
            display: "none"
        })) : i.removeClass("hiddenTillReady")
    }

    function Q(e) {
        return {
            x: e.pageXOffset || e.scrollX || 0,
            y: e.pageYOffset || e.scrollY || 0
        }
    }

    function Y(i, n) {
        if (i) {
            var o = t.assign({}, n),
                a = d.style.getPrefixedTransform(),
                r = J(a);
            o[r] = n[a], a !== r && (o[a] = ""), i.hasOwnProperty("getRootStyle") && t.assign(o, i.getRootStyle(o)), e(s.findDOMNode(i)).css(o)
        }
    }

    function J(e) {
        return e.replace(/[A-Z]/g, function(e) {
            return "-" + e.toLowerCase()
        })
    }

    function Z(e, t) {
        return e.getSiteAspect("siteMembers").isPageAllowed(t)
    }

    function X(e, i) {
        var s = t.keys(i),
            n = function(s) {
                return t.isEmpty($(e, i, s))
            };
        return !t.every(s, n)
    }

    function $(e, i, s) {
        var n = t.get(e, s, {}),
            o = t.get(i, s, {});
        return d.modes.getModeChanges(n, o)
    }

    function ee(e, t) {
        if (e.isExperimentOpen("sv_platform1")) {
            var i = e.getSiteData(),
                s = e.isExperimentOpen("sv_dpages") && !!t.routerDefinition,
                n = !s,
                o = i.getFocusedRootId() === e.getCurrentPopupId(),
                a = o && t.pageId === i.getPrimaryPageId(),
                r = i.getFocusedRootId() !== t.pageId;
            if (n && r && !a) e.getSiteAspect("WidgetAspect").loadApps([t.pageId]);
            else if (s) {
                var c = !r,
                    p = t.innerRoute !== i.getRootNavigationInfo().innerRoute;
                if (c && p) return e.getSiteAspect("WidgetAspect").stopApps([t.pageId]), void e.getSiteAspect("WidgetAspect").loadApps([t.pageId]);
                if (r && !o) return void e.getSiteAspect("WidgetAspect").loadApps([t.pageId]);
                o && (t.pageId === i.getPrimaryPageId() ? p && (e.getSiteAspect("WidgetAspect").stopApps([t.pageId]), e.getSiteAspect("WidgetAspect").loadApps([t.pageId])) : e.getSiteAspect("WidgetAspect").loadApps([t.pageId]))
            }
        }
    }

    function te(e, i, s) {
        return T.isOpen("sv_partialReLayout", e) ? !e.measureMap || t.isEmpty(i) && t.isEmpty(s) ? null : t.assign({}, s, i) : null
    }

    function ie(e) {
        return e ? 50 : 49
    }

    function se(e, i) {
        var s = t.get(e, "lastScale");
        return !s || i.layout.scale === s
    }

    function ne(e, t) {
        return e.getFocusedRootId() === t.pageId && !t.isRefetchingPageAfterLogin
    }
    var oe = n.componentPropsBuilder,
        ae = {
            "components.layout.update": !0,
            "components.layout.continuousUpdate": !0,
            "components.layout.continuousUpdateAndAdjustLayout": !0,
            "renderPlugins.setCompsToShowOnTop": !0,
            "components.layout.updateAndAdjustLayout": !0,
            "siteSegments.layout.update": !0,
            "components.layout.updateDock": !0,
            "components.layout.setDock": !0,
            "components.layout.unDock": !0
        },
        re = ae.hasOwnProperty.bind(ae),
        ce = {
            "wysiwyg.viewer.components.BoxSlideShow": !0,
            "wysiwyg.viewer.components.StripContainerSlideShow": !0,
            "wysiwyg.viewer.components.StripColumnsContainer": !0
        },
        pe = {
            "wysiwyg.viewer.components.Column": C
        },
        le = {
            "wysiwyg.viewer.components.Column": C
        },
        de = d.style.MAX_Z_INDEX,
        ue = i.createFactory(r),
        he = i.createFactory(c),
        ge = i.createFactory(A),
        fe = i.createFactory(g),
        me = i.createFactory(f),
        ye = i.createFactory(m),
        ve = d.dataUtils,
        Se = function(e, t, i, n, o, a, r) {
            return e = e && t ? k(e, t) : e, e = e && i ? k(e, i) : e, e = e && n ? k(e, n) : e, e = e && o ? k(e, o) : e, e = e && a ? k(e, a) : e, (e = e && r ? k(e, r) : e) && s.findDOMNode(e)
        };
    return i.createClass({
        displayName: "WixSite",
        mixins: [h, d.renderDoneMixin, _, P],
        propTypes: {
            wixCodeAppApi: i.PropTypes.shape({
                init: i.PropTypes.func,
                sendMessage: i.PropTypes.func,
                registerMessageHandler: i.PropTypes.func,
                registerMessageModifier: i.PropTypes.func
            })
        },
        getDefaultProps: function() {
            return {
                siteRootPosition: "static",
                scopedRoot: null,
                rootId: "masterPage",
                wixCodeAppApi: {
                    init: t.noop,
                    sendMessage: t.noop,
                    registerMessageHandler: t.noop,
                    registerMessageModifier: t.noop
                }
            }
        },
        getPrimaryPage: function() {
            var e = this.refs[this.props.rootId];
            if ("masterPage" === this.props.rootId && e) {
                var t = this.props.siteData.getPrimaryPageId();
                e = this.getPageComponent(e, t)
            }
            return e
        },
        getCurrentPopup: function() {
            var e = this.props.siteData.getCurrentPopupId();
            return e ? d.reactComponentUtils.getRef(this, "popupRoot", e) : null
        },
        getMasterPage: function() {
            return this.refs[this.props.rootId]
        },
        getPageById: function(e) {
            var t = this.getMasterPage();
            return e === this.props.rootId ? t : t && this.getPageComponent(t, e) ? this.getPageComponent(t, e) : d.reactComponentUtils.getRef(this, "popupRoot", e)
        },
        getPageComponent: function(e, i) {
            return t.get(this.getPageRefs(e), i)
        },
        isDomOnly: function(e, i, s, n) {
            return t.every(n, re) && s.style.position === e.props.style.position && se(e, i) && t.isEqual(s.compProp, e.props.compProp) && s.style.transform === e.props.style.transform
        },
        isDomOnlyByMethodNamesAndCompId: function(e, i) {
            var s = this.getPageOfComp(i).props.rootId,
                n = this.getComponentByPageAndCompId(s, i),
                o = ve.findHierarchyInStructure(i, this.props.siteData.isMobileView(), this.props.siteData.pagesData[s].structure),
                a = t.last(o),
                r = oe.getCompProps(a, this.siteAPI, s);
            return this.isDomOnly(n, a, r, e)
        },
        updateMultipleComps: function(e, i) {
            function s(i) {
                n.push(i), n.length === e.length && (this.lockedCompIds = t.flatten(n), this.reLayout())
            }
            this.tempMeasureMap = this.props.siteData.measureMap;
            var n = [];
            this.noEnforceAnchors = i, t.forEach(e, this.updateDOMOnlySingleComp.bind(this, s.bind(this)))
        },
        updateDOMOnlySingleComp: function(e, i) {
            var s = this.getPageOfComp(i),
                o = s.props.rootId,
                a = this.getComponentByPageAndCompId(o, i),
                r = ve.findHierarchyInStructure(i, this.props.siteData.isMobileView(), this.props.siteData.pagesData[o].structure),
                c = t.last(r),
                p = oe.getCompProps(c, this.siteAPI, o),
                l = O(r, this.siteAPI),
                d = t.map(l, "id");
            Y(a, p.style);
            var u = t.reject(l, c),
                h = this.componentsUpdatedBySingleCompUpdateBehindReactsBack[i] || t.clone(a.props.style);
            if (this.componentsUpdatedBySingleCompUpdateBehindReactsBack[i] = h, !(p.style.zIndex !== de || h && h.hasOwnProperty("zIndex"))) {
                var g = c.layout.fixedPosition ? ie(this.siteAPI.getRenderFlag("renderFixedPositionContainers")) : "";
                this.componentsUpdatedBySingleCompUpdateBehindReactsBack[i] = t.assign(h, {
                    zIndex: g
                })
            }
            t.forEach(u, function(e) {
                Y(s.refs[e.id], n.propsBuilderUtil.getStyle(e.layout, this.siteAPI, e.id))
            }.bind(this)), e(d)
        },
        getPageOfComp: function(e) {
            var i = t.find(this.siteAPI.getAllRenderedRootIds(), function(t) {
                var i = this.getComponentsByPageId(t);
                return !!i && !!i[e]
            }.bind(this));
            return this.getPageById(i)
        },
        updateSingleComp: function(e, i, s) {
            function n() {
                f && (r.componentWillUpdate = f), m && (r.componentDidUpdate = m), this.noEnforceAnchors = i, t.forEach(g, function(e) {
                    e()
                }), this.lockedCompIds = t.map(O(c, this.siteAPI), "id"), this.reLayout()
            }
            var o = this.props.siteData;
            o.dataResolver.setReadingFromCache(!1), this.tempMeasureMap = o.measureMap, this.deletedMeasureMap = o.measureMap, delete o.measureMap;
            var a = this.getPageOfComp(e).props.rootId,
                r = this.getComponentByPageAndCompId(a, e),
                c = ve.findHierarchyInStructure(e, o.isMobileView(), o.pagesData[a].structure),
                p = t.clone(t.last(c));
            p.layout = t.clone(p.layout);
            var l = oe.getCompProps(p, this.siteAPI, a);
            o.dataResolver.setReadingFromCache(!0);
            var u = d.style.getPrefixedTransform(),
                h = J(u);
            l.style[h] = l.style[u], this.markInvokedMethodNames(s);
            var g = [],
                f = null,
                m = null;
            this.componentsUpdatedBySingleCompUpdateBehindReactsBack[e] && (Y(r, this.componentsUpdatedBySingleCompUpdateBehindReactsBack[e]), delete this.componentsUpdatedBySingleCompUpdateBehindReactsBack[e]);
            var y = {};
            if (r.componentWillReceiveProps) {
                var v = r.setState;
                r.setState = function(e, i) {
                    t.assign(y, e), i && g.push(i)
                }, r.componentWillReceiveProps(l, r.state), r.setState = v
            }
            r.componentWillUpdate && (f = r.componentWillUpdate, r.componentWillUpdate = function(e, t) {
                f.call(r, l, t)
            });
            var S = t.pickBy(l, t.isPlainObject),
                A = t.pickBy(l, t.isArray);
            if (r.componentDidUpdate) {
                m = r.componentDidUpdate;
                var _ = t.clone(r.props);
                t(S).keys().concat(t.keys(A)).forEach(function(e) {
                    _[e] = t.clone(_[e])
                }), r.componentDidUpdate = function(e, t) {
                    m.call(r, _, t)
                }
            }
            t.forEach(S, function(e, i) {
                t.assign(r.props[i] || {}, e)
            }), t.forEach(A, function(e, t) {
                [].splice.apply(r.props[t], [0, r.props[t].length].concat(e))
            }), r.setState(y, n.bind(this))
        },
        scrollTo: function(e, t, i) {
            i = i || this.props.getSiteContainer();
            var s = this.props.siteData.isMobileView(),
                n = o.scrollUtils.calcScrollDuration(Q(i).y, e.y, s),
                a = s ? "Quint.easeOut" : "Sine.easeInOut";
            this.props.siteData.animations.animate("BaseScroll", i, n, 0, {
                y: e.y,
                ease: a,
                callbacks: t
            })
        },
        scrollToAnchor: function(e, t) {
            this.scrollTo(e, {
                onUpdate: t
            })
        },
        scrollToTop: function() {
            this.scrollTo({
                y: 0
            })
        },
        getInitialState: function() {
            return this.reLayoutPending = !1, this.pendingReLayoutCompsMap = {}, this.siteAPI = new u(this), this.isBusy = !0, this.isChangingUrlPage = !0, this.noEnforceAnchors = !1, this.siteAPI.reportBeatEvent(7, this.props.siteData.getPrimaryPageId()), this.componentsUpdatedBySingleCompUpdateBehindReactsBack = {}, this.prevActiveModes = d.objectUtils.cloneDeep(this.props.siteData.activeModes), this.compRefs = {}, {}
        },
        addComponentRef: function(e, t) {
            e ? this.compRefs[t] = e : delete this.compRefs[t]
        },
        componentWillMount: function() {
            var e = this.props.siteData,
                t = e.getCurrentUrlPageId(),
                i = e.getExistingRootNavigationInfo(t),
                s = Z(this.siteAPI, i) ? t : null;
            this.setState({
                currentUrlPageId: s,
                currentPopupId: null
            })
        },
        _addSiteStylesToLoaded: function(e, i) {
            var s = this.getAspectsComponentStructures();
            if (i) {
                var n = e.getAllPossiblyRenderedRoots();
                s = t.reduce(n, function(t, i) {
                    return t.push(e.pagesData[i].structure), t
                }, s)
            } else s.push(e.getMasterPageData().structure);
            this.loadedStyles = t.merge(this.loadedStyles, a.buildLoadedStyles(s, e))
        },
        markInvokedMethodNames: function(e) {
            this.invokedMethodNames = t.union(this.invokedMethodNames || [], e)
        },
        componentWillUpdate: function(e, i) {
            d.performance.start("reRender"), this.isBusy = !0, this.isChangingUrlPage = i.currentUrlPageId !== this.state.currentUrlPageId, t.forEach(this.componentsUpdatedBySingleCompUpdateBehindReactsBack, function(e, t) {
                var i = this._aspectsSiteAPI.getComponentById(t);
                i && Y(i, e)
            }.bind(this)), this.componentsUpdatedBySingleCompUpdateBehindReactsBack = {}, i.noEnforceAnchors && i.noEnforceAnchors !== this.state.noEnforceAnchors && (this.noEnforceAnchors = !0), i.forceUpdateIndex !== this.state.forceUpdateIndex ? (this.props.siteData.clearCache(), this.tempMeasureMap = this.props.siteData.measureMap, this.deletedMeasureMap = this.props.siteData.measureMap, delete this.props.siteData.measureMap) : this.markInvokedMethodNames(["*"]), X(this.prevActiveModes, e.siteData.activeModes) && (this.deletedMeasureMap = this.props.siteData.measureMap, delete this.props.siteData.measureMap)
        },
        render: function() {
            var e = this.props.siteData,
                s = e.getExistingRootNavigationInfo(e.getCurrentUrlPageId()),
                n = Z(this.siteAPI, s);
            if (!n) {
                this.siteAPI.getSiteAspect("siteMembers").showDialogOnNextRender(s);
                var o = K(this.refs.siteAspectsContainer);
                e.notRenderedStructures = t.transform(this.getAspectsComponentStructures(), function(e, t) {
                    e[t.id] = {
                        structure: t,
                        getDomNodeFunc: o
                    }
                }, {})
            }
            this._addSiteStylesToLoaded(e, n);
            var a = [ue({
                themeData: e.getAllTheme(),
                siteData: e,
                masterPage: e.getMasterPageData(),
                loadedStyles: this.loadedStyles,
                styleRoot: this.props.scopedRoot ? "#" + this.props.scopedRoot : null,
                ref: "theme",
                shouldRenderPage: n,
                siteAPI: this.siteAPI
            }), e.shouldShowWixAds() ? y.getWixAdsComponent(this.siteAPI, this.addComponentRef) : void 0, fe({
                ref: "siteAspectsContainer",
                key: "siteAspectsContainer",
                siteWidth: this.props.siteData.getSiteWidth(),
                isMobileView: this.props.siteData.isMobileView(),
                aspectsCompsFunc: this.getAspectsReactComponents,
                getAspectComponentDescriptions: this.getAspectComponentDescriptions,
                loadedStyles: this.loadedStyles,
                siteAPI: this.siteAPI
            }), i.createElement(E, {
                ref: "selectionSharer",
                siteBasePath: e.santaBase,
                siteAPI: this.siteAPI
            })];
            if (this.siteAPI.getRenderFlag("extraSiteHeight") > 0 && !e.isMobileView() && a.push(me({
                    siteAPI: this.siteAPI
                })), this.siteAPI.getRenderFlag("blockingLayer") && a.push(ye({
                    siteAPI: this.siteAPI
                })), n) {
                var r = L.call(this, this.props.viewerPrivateServices, this.siteAPI, this.loadedStyles, this.addComponentRef, this.deletedMeasureMap),
                    c = B.call(this, this.siteAPI, r),
                    p = x.call(this),
                    l = this.getRootStyle();
                a.splice(2, 0, p, i.DOM.div({
                    className: "SITE_ROOT",
                    key: "SITE_ROOT",
                    id: this.props.scopedRoot ? null : "SITE_ROOT",
                    style: l
                }, he(c))), a.splice(4, 0, ge({
                    currentPopupId: this.state.currentPopupId,
                    viewerPrivateServices: this.props.viewerPrivateServices,
                    siteAPI: this.siteAPI,
                    siteData: e,
                    loadedStyles: this.loadedStyles,
                    ref: "popupRoot",
                    siteRootStyle: l,
                    blockingPopupLayer: this.siteAPI.getRenderFlag("blockingPopupLayer"),
                    measureMap: this.deletedMeasureMap,
                    mobxObserverWrapperProps: r
                }))
            }
            return i.DOM.div(t.assign({
                className: this.props.className,
                "data-santa-version": I.version,
                id: this.props.scopedRoot ? this.props.scopedRoot : null,
                onClick: this.clickHandler,
                children: a
            }, this.props.extraEventsHandlers))
        },
        getRootStyle: function() {
            var e = {};
            return e.width = this.props.siteData.getSiteWidth(), e.paddingBottom = this.props.siteData.getPageBottomMargin(), this.state.siteRootHidden && (e.height = 0, e.overflowY = "hidden"), e
        },
        onPopState: function() {
            var e = window.location.href,
                t = d.wixUrlParser.parseUrl(this.props.siteData, e);
            t && this.tryToNavigate(t, !0)
        },
        onHashChange: function() {
            var e = d.wixUrlParser.parseUrl(this.props.siteData, window.location.href);
            e && this.props.siteData.isUsingUrlFormat("slash") && this.tryToNavigate(e)
        },
        isPageExists: function(e) {
            return t.includes(this.props.siteData.getAllPageIds(), e) || d.errorPages.isErrorPage(e)
        },
        updateUrlIfNeeded: function(e) {
            var t = this.siteAPI.getSiteData();
            this.props.updateUrlIfNeededMethod(t, e)
        },
        navigateIfPossible: function(e, i, s, n) {
            var o = t.get(this.props, "viewerPrivateServices.siteDataAPI"),
                a = this.siteAPI.getSiteData();
            if (this.isPageExists(e.pageId))
                if (Z(this.siteAPI, e)) {
                    var r = a.getDataByQuery(e.pageId);
                    if (!r) return;
                    r.isPopup || this.siteAPI.getSiteAspect("siteMembers").forceCloseDialog();
                    var c = t.clone(e);
                    c.title = e.title || r.pageUriSEO;
                    var p = d.wixUrlParser.getUrl(a, c),
                        l = a.isPopupPage(e.pageId) || i;
                    this.siteAPI.startingPageTransition(c), this.props.navigateMethod(this, o, p, c, !l, s, n)
                } else this.siteAPI.getSiteAspect("siteMembers").showDialogOnNextRender(e), this.forceUpdate()
        },
        tryToNavigate: function(e, t, i, s) {
            var n = this.siteAPI.getSiteData(),
                o = this.siteAPI.getSiteAspect("actionsAspect");
            if (this.currNav = e, T.isOpen("sv_dpages", n) && e.routerDefinition && (!e.pageId || e.isRefetchingPageAfterLogin)) return this.siteAPI.startingPageTransition(e), void this.props.getDynamicPageRealPage(n, e, function(a) {
                d.errorPages.isErrorPage(a.pageId) ? (d.errorPages.setIsFixingDisplayedMasterPage(), d.errorPages.updateErrorPageMasterData("masterPage", n.pagesData.masterPage), this.props.viewerPrivateServices.siteDataAPI.loadPage(a, function() {
                    this.dynamicPageTryToNavigate(e, o, a, n, this.siteAPI, t, i, s)
                }.bind(this))) : this.dynamicPageTryToNavigate(e, o, a, n, this.siteAPI, t, i, s)
            }.bind(this));
            ee(this.siteAPI, e), this.navigateIfPossible(e, t, i, s)
        },
        dynamicPageTryToNavigate: function(e, i, s, n, o, a, r, c) {
            if (s.errorInfo) {
                var p = o.getRenderRealtimeConfigItem("errorPagesPopUp");
                p && p(s.errorInfo)
            }
            if (t.isEqual(this.currNav, e)) {
                if (s.isStaticPageRedirect ? e = s : t.assign(e, s), ee(this.siteAPI, e), ne(n, e)) {
                    var l = e.innerRoute !== n.getRootNavigationInfo().innerRoute;
                    if (this.handleSamePageAnchorNavigation(e), !l && e.imageZoom === n.getRootNavigationInfo().imageZoom) return void i.handlePagePageNavigationCanceled()
                }
                delete e.isRefetchingPageAfterLogin, this.navigateIfPossible(e, a, r, c)
            } else i.handlePagePageNavigationCanceled()
        },
        handleSamePageAnchorNavigation: function(e) {
            var t = this.siteAPI,
                i = this.props.siteData;
            if (e.anchorData) {
                var s = function(s) {
                    1 === s.ratio && t.getSiteAspect("anchorChangeEvent").setSelectedAnchorAsync(i, e.anchorData, e.pageId, d.constants.ACTIVE_ANCHOR.DELAY_TO_END_SCROLL)
                };
                t.scrollToAnchor(e.anchorData, s.bind(this))
            } else i.isImageZoom(e) || e.routerDefinition || this.scrollToTop()
        },
        handleNavigation: function(e, i, s, n) {
            var o = this.props.siteData;
            if (e.pageId === o.getPrimaryPageId()) {
                if ("#" !== i) {
                    var a = t.get(this.props, "viewerPrivateServices.siteDataAPI");
                    this.props.navigateMethod(this, a, i, e, s, n)
                }
                this.handleSamePageAnchorNavigation(e)
            } else this.tryToNavigate(e, !s)
        },
        renderCompsAfterLayout: function(e) {
            this.props.siteData.componentsToRender = t.union(this.props.siteData.componentsToRender, e), t.isEmpty(e) || this.forceUpdate(function() {
                this.props.siteData.componentsToRender = []
            })
        },
        reLayout: function() {
            if (this.siteAPI.getSiteAspect("WidgetAspect").allContextsReady()) {
                var e = this.lockedCompIds && d.arrayUtils.toTrueObj(this.lockedCompIds),
                    t = this.props.siteData,
                    i = t.getExistingRootNavigationInfo(t.getCurrentUrlPageId()),
                    s = Z(this.siteAPI, i);
                l.updateBodyNodeStyle(t);
                var n = z.call(this, s),
                    o = te(t, e, this.pendingReLayoutCompsMap),
                    a = l.reLayout(n, this.siteAPI, this.noEnforceAnchors, e, o);
                if (t.measureMap = a.measureMap, t.reLayoutedCompsMap = a.reLayoutedCompsMap, delete this.tempMeasureMap, delete this.lockedCompIds, s) {
                    this.pendingReLayoutCompsMap = {}, this.reLayoutPending = !1, this.noEnforceAnchors = !1, this.renderCompsAfterLayout(a.componentsToRender), this.isBusy = !1;
                    var r = [this.getMasterPage(), this.getPrimaryPage(), this.refs.siteAspectsContainer],
                        c = this.getCurrentPopup();
                    c && r.push(c), H(r)
                } else this.siteAPI.getSiteAspect("siteMembers").showDialogOnNextRender(i), H([this.refs.siteAspectsContainer]);
                this.isBusy = !1;
                var p = this.invokedMethodNames || [];
                this.invokedMethodNames = [], this.notifyAspects("didLayout", p), this.siteIsReady || (this.siteIsReady = !0, this.siteAPI && this.siteAPI.setBiMarker && this.siteAPI.setBiMarker("lastTimeStamp"), this.notifyAspects("siteReady"))
            }
        },
        registerReLayoutPending: function(e) {
            this.pendingReLayoutCompsMap[e] = !0, this.reLayoutPending = !0
        },
        cancelReLayoutPending: function(e) {
            delete this.pendingReLayoutCompsMap[e], t.isEmpty(this.pendingReLayoutCompsMap) && (this.reLayoutPending = !1)
        },
        reLayoutIfPending: function() {
            !this._reLayoutAnimationFrameRequested && this.reLayoutPending && (this._reLayoutAnimationFrameRequested = !0, d.animationFrame.request(function() {
                this._reLayoutAnimationFrameRequested = !1, this.reLayoutPending && (this.reLayoutPending = !1, this.refs.theme.initWaitForStylesReady())
            }.bind(this)))
        },
        componentDidMount: function() {
            if (t.invoke(this.props, "onBeforeLayout"), this.props.siteData.isUsingUrlFormat(d.siteConstants.URL_FORMATS.SLASH) ? this.siteAPI.reportCurrentPageEvent() : this.siteAPI.reportPageEvent(this.props.siteData.currentUrl.full), this.siteAPI.initFacebookRemarketing(), this.siteAPI.initGoogleRemarketing(), this.siteAPI.initYandexMetrika(), this.siteAPI.setBiMarker("renderEnd"), this.registerAspectToEvent("siteReady", function() {
                    this.siteAPI.reportBeatFinish(this.props.siteData.getCurrentUrlPageId()), S.send(this.siteAPI.getSiteData()), j(this.props.siteData)
                }.bind(this)), this.registerAspectToEvent("resize", U.call(this)), F.call(this), G.call(this), this.updateTitleAndMetaTags(), this.refs.theme.registerStylesReadyCallback(this.reLayout), this.siteAPI.reportBeatEvent(8, this.props.siteData.getPrimaryPageId()), this.reLayoutPending = !1, this.pendingReLayoutCompsMap = {}, this.refs.theme.initWaitForStylesReady(), this.siteAPI.isExperimentOpen("fontsTrackingInViewer")) {
                var e = this.props.siteData.getCurrentUrlPageId(),
                    i = this.props.siteData.getExistingRootNavigationInfo(e);
                Z(this.siteAPI, i) && S.trackFontsIfNeeded(this.props.siteData, e)
            }
        },
        componentDidUpdate: function() {
            if (this.prevActiveModes = d.objectUtils.cloneDeep(this.props.siteData.activeModes), this.tempMeasureMap && !this.props.siteData.measureMap && (this.props.siteData.measureMap = this.tempMeasureMap, delete this.deletedMeasureMap, delete this.tempMeasureMap), this.isChangingUrlPage) {
                this.siteAPI.setBiMarker("renderEnd");
                var e = this.props.siteData.getCurrentUrlPageId();
                this.siteAPI.reportBeatFinish(e), this.props.siteData.isUsingUrlFormat(d.siteConstants.URL_FORMATS.SLASH) || this.siteAPI.reportPageEvent(this.props.siteData.currentUrl.full), this.siteAPI.fireGoogleRemarketing(), this.siteAPI.reportYandexPageHit(this.props.siteData.currentUrl.full), this.siteAPI.isExperimentOpen("fontsTrackingInViewer") && S.trackFontsIfNeeded(this.props.siteData, e)
            }
            this.reLayoutPending = !1, this.pendingReLayoutCompsMap = {}, this.refs.theme.initWaitForStylesReady(), d.performance.finish("reRender")
        },
        updateTitleAndMetaTags: function() {
            this.props.updateHeadMethod && this.props.updateHeadMethod(this.props.siteData, this.props.rootId)
        },
        componentWillUnmount: function() {
            this.dead = !0, this.siteAPI.onSiteUnmount()
        }
    })
}), define("core/siteRender/WixSiteHeadRenderer", ["lodash", "experiment"], function(e, t) {
    function i() {
        this.blankFavicons = null
    }

    function s(t) {
        return e.includes(t.rendererModel.premiumFeatures, "AdsFree")
    }

    function n(e, t) {
        return o(e.getDynamicPageSEOMetaData(t))
    }

    function o(t) {
        var i = [];
        return e.forEach(t, function(t, s) {
            e.startsWith(s, "og:") ? i.push('<meta property="' + s + '" content="' + t + '">') : i.push('<meta name="' + s + '" content="' + t + '">')
        }), i
    }

    function a(e, t) {
        return (t = e.getCurrentUrlPageId() || t) && "masterPage" !== t || (t = e.getMainPageId()), t
    }
    return i.prototype = {
        getFavicons: function(e) {
            return e.isPremiumUser && e.isPremiumUser() && s(e) ? this._getPremiumUserFavicon(e) : this._getDefaultWixFavicon()
        },
        createBlankFavicons: function() {
            return null === this.blankFavicons && (this.blankFavicons = this._createEmptyFaviconElements()), this.blankFavicons
        },
        getPageMetaTags: function(e, i) {
            var s = a(e, i);
            return t.isOpen("sv_dpages", e) && e.isDynamicPage(s) ? n(e, s) : this._getMetaTagsForPage(e, s)
        },
        getPageJsonldTag: function(t, i) {
            var s = a(t, i),
                n = t.getPageJsonld(s);
            return 0 === e.size(n) ? "" : ['<script type="application/ld+json">', JSON.stringify(n), "<\/script>"].join("")
        },
        getPageLinkTag: function(t, i) {
            var s = a(t, i),
                n = t.getPageLinkTag(s);
            return 0 === e.size(n) ? "" : '<link rel="amphtml" href="' + n + '">'
        },
        _getPremiumUserFavicon: function(e) {
            var t = e.getFavicon();
            if (t) {
                var i = this._getFaviconMimeType(t);
                return t = e.getMediaFullStaticUrl(t), this._createFaviconLinkElements(t, i)
            }
            return this._createEmptyFaviconElements()
        },
        _getDefaultWixFavicon: function() {
            var e = "http://www.wix.com/favicon.ico",
                t = this._getFaviconMimeType(e);
            return this._createFaviconLinkElements(e, t)
        },
        _createEmptyFaviconElements: function() {
            return this._createFaviconLinkElements(null, null)
        },
        _createFaviconLinkElements: function(e, t) {
            var i = [];
            return e && t && (i.push({
                rel: "shortcut icon",
                href: e,
                type: t
            }), i.push({
                rel: "apple-touch-icon",
                href: e,
                type: t
            })), i
        },
        _getStaticMediaUrl: function(e) {
            return e.serviceTopology.mediaRootUrl
        },
        _getFaviconMimeType: function(e) {
            var t = null;
            return e && (this._isExtension(e, "png") ? t = "image/png" : this._isExtension(e, "gif") ? t = "image/gif" : this._isExtension(e, "ico") || this._isExtension(e, "icon") ? t = "image/x-icon" : this._isExtension(e, "jpg") && (t = "image/jpg")), t
        },
        _isExtension: function(e, t) {
            return this._getExtension(e).toLowerCase() === t
        },
        _getExtension: function(e) {
            if (e) {
                var t = e.lastIndexOf(".");
                if (t >= 0) return e.substr(t + 1)
            }
            return ""
        },
        _getMetaTagsForPage: function(i, s) {
            var n = i.getPageSEOMetaData(s),
                o = [this._getDescriptionSEOMetaTag, this._getKeywordsSEOMetaTag, this._getOgMetaTag];
            return e.get(i, "publicModel.indexable") && o.push(this._getRobotsIndexMetaTag), t.isOpen("sv_twitterMetaTags", i) && o.push(this._getTwitterMetaTags), e.flatMap(o, function(e) {
                return e(n)
            })
        },
        _getRobotsIndexMetaTag: function(e) {
            if (e && e.robotIndex) return '<meta name="robots" content="' + e.robotIndex + '">'
        },
        _getDescriptionSEOMetaTag: function(e) {
            if (e && e.description) return ['<meta name="description" content="' + e.description + '">']
        },
        getGoogleTagManagerScript: function() {
            return "<script async>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-MDD5C4');<\/script>"
        },
        _getKeywordsSEOMetaTag: function(e) {
            if (e && e.keywords) return ['<meta name="keywords" content="' + e.keywords + '">']
        },
        _getOgMetaTag: function(t) {
            return e.map(e.get(t, "ogTags"), function(e) {
                return '<meta property="' + e.property + '" content="' + e.content + '">'
            })
        },
        _getTwitterMetaTags: function(t) {
            return e.map(e.get(t, "twitterTags"), function(e) {
                return '<meta name="' + e.name + '" content="' + e.content + '">'
            })
        }
    }, new i
}), define("core/core/site", ["react", "lodash", "zepto", "coreUtils", "utils", "core/siteRender/WixSiteReact", "core/siteRender/WixSiteHeadRenderer", "core/core/siteBI", "core/bi/events", "experiment"], function(e, t, i, s, n, o, a, r, c, p) {
    function l(e, i, s) {
        if ("undefined" != typeof window && t.get(window, "history.pushState") && s) try {
            window.history.pushState(null, i, e)
        } catch (e) {}
    }

    function d(e, i, s) {
        var o = e.getExternalBaseUrl() + i,
            a = n.wixUrlParser.parseUrl(e, o);
        L(n.wixUrlParser.getUrl(e, a), a.title, e), a.routerDefinition ? g(e, a, function(e) {
            s(t.assign(a, e))
        }) : (a.isStaticPageRedirect = !0, s(a))
    }

    function u(e, t, i, s) {
        if (!!e.documentServicesModel) h(e, t, i, s);
        else {
            var n = t.redirectUrl;
            F.isExternalUrl(n) ? window.location = n : F.isRelativeUrl(n) && q < 4 ? (q++, d(e, n, s)) : s(V)
        }
    }

    function h(e, i, s, n) {
        e.addDynamicPageData(i.pageId, i.pageData, s), e.addDynamicPageHeadData(i.pageId, i.pageHeadData), n({
            pageId: i.pageId,
            title: t.get(i.pageHeadData, "title", ""),
            errorInfo: i.errorInfo
        })
    }

    function g(e, t, i) {
        var s = t.routerDefinition,
            o = n.routersBackEndRequests.makeParamObjFromSiteData(e, s, t);
        n.routersBackEndRequests.getPage(o, function(t) {
            t.redirectUrl ? u(e, t, s, i) : h(e, t, s, i)
        }, function() {})
    }

    function f(e, i, s) {
        if ("undefined" != typeof window && t.get(window, "history.replaceState") && s) try {
            window.history.replaceState(null, i, e)
        } catch (e) {}
    }

    function m(e, t) {
        H[e] = H[e] || [], H[e].push(t)
    }

    function y(e, i) {
        t.forEach(H[e], function(e) {
            e.apply(null, i)
        })
    }

    function v(e, t) {
        var i = e.getPrimaryPageId() === t.pageId;
        return e.isPopupOpened() && i
    }

    function S(e, t) {
        var i = e.isPopupPage(t.pageId),
            s = v(e, t);
        return !i && !s
    }

    function A(e, t, i, s) {
        var o = e.isPopupPage(s.pageId),
            a = e.isUsingUrlFormat(n.siteConstants.URL_FORMATS.SLASH),
            r = v(e, s);
        return !o && i !== t && a && !r
    }

    function _(e) {
        if (!e.isInSSR() && window.performance && performance.getEntriesByType) try {
            var i = /(skins|require)\.min\.js$/,
                s = t(performance.getEntriesByType("resource")).toArray().filter(function(e) {
                    return i.test(e.name)
                }).map(function(e) {
                    var t = e.name.match(i),
                        s = e.responseEnd - (e.responseStart || e.startTime),
                        n = {
                            Name: t[1],
                            DnsTime: Math.round(e.domainLookupEnd - e.domainLookupStart),
                            ConnectTime: Math.round(e.connectEnd - e.connectStart),
                            Ttfb: Math.round(e.duration - s),
                            ResponseTime: Math.round(s)
                        },
                        o = e.transferSize || e.encodedBodySize;
                    return o && e.duration && (n.Kbps = Math.round(o / e.duration)), n
                }).map(function(e) {
                    var i = t.includes(e.Name, "require") ? "small" : "large";
                    return t.mapKeys(e, function(e, t) {
                        return i + t
                    })
                }).reduce(function(e, i) {
                    return t.assign(e, i)
                }, {});
            n.logger.reportBI(e, c.CDN_PERFORMANCE, s)
        } catch (e) {}
    }

    function P(e, t, i, s, n, o, a) {
        var r = e.props.siteData,
            c = e.siteAPI;
        r.getCurrentUrlPageId() !== s.pageId && c.reportBeatStart(s.pageId), (r.getPrimaryPageId() !== s.pageId && s.anchorData || s.anchorData && r.getCurrentUrlPageId() === s.pageId && s.routerDefinition) && c.getSiteAspect("actionsAspect").registerNextAnchorScroll(s.anchorData);
        var p = !0,
            d = r.currentUrl.full,
            u = function() {
                if (y(W.PAGE_LOADED, [c, s]), p) {
                    p = !1, 0 === i.indexOf("#") ? r.currentUrl.hash = i : r.currentUrl = F.parseUrl(i), A(r, d, i, s) && c.reportCurrentPageEvent(i);
                    var t = S(r, s);
                    r.setRootNavigationInfo(s, !o), e.setState({
                        currentUrlPageId: r.getCurrentUrlPageId(),
                        currentPopupId: r.getCurrentPopupId()
                    }), r.isViewerMode() && (a ? f(i, s.title, a) : l(i, s.title, n)), t && C(r, s.pageId)
                } else e.forceUpdate()
            };
        return t.loadPage(s, u), !0
    }

    function I(e, i, s) {
        var n = "wixSiteProperties";
        return p.isOpen("mobileNonOptimizedOverflow", e) && (n += " mobile-non-optimized-overflow"), G(t.assign({}, s, {
            className: "WixSite" === e.rendererModel.siteInfo.documentType ? n : "noop",
            siteData: e,
            viewerPrivateServices: i,
            rootId: "masterPage",
            navigateMethod: P,
            updateUrlIfNeededMethod: x,
            getDynamicPageRealPage: g,
            updateHeadMethod: T,
            getSiteContainer: E
        }))
    }

    function E() {
        return window
    }

    function T(e, t) {
        C(e, t), "WixSite" === e.rendererModel.siteInfo.documentType && k(O(e), a.getGoogleTagManagerScript())
    }

    function C(e, t) {
        var i = O(e);
        B(e), b(e, i), D(e, t, i), M(e, t, i), R(e, t, i)
    }

    function M(e, t, i) {
        N(i, 'script[type="application/ld+json"]');
        var s = a.getPageJsonldTag(e, t);
        s && k(i, s)
    }

    function D(e, t, i) {
        w(a.getPageMetaTags(e, t), i)
    }

    function R(e, i, s) {
        if (p.isOpen("sv_ampLinkTag", e) && t.get(e, "publicModel.hasBlogAmp")) {
            var n = a.getPageLinkTag(e, i);
            n && k(s, n)
        }
    }

    function b(e, i) {
        var s = ["[name=description]", "[name=keywords]", '[property="og:title"]', '[property="og:description"]', '[property="og:url"]', '[property="og:image"]', '[rel="amphtml"]'];
        if (t.get(e, "publicModel.indexable") && s.push("[name=robots]"), p.isOpen("sv_dpages", e)) {
            var n = e.getCurrDynamicPageMetaTags();
            t.forEach(n, function(e, t) {
                s.push('[name="' + t + '"]')
            }), e.resetCurrDynamicPageMetaTags()
        }
        p.isOpen("sv_twitterMetaTags", e) && (s = s.concat(['[name="twitter:card"]', '[name="twitter:title"]', '[name="twitter:description"]', '[name="twitter:image"]'])), s.forEach(function(e) {
            N(i, e)
        })
    }

    function w(e, i) {
        t.forEach(e, function(e) {
            k(i, e)
        })
    }

    function O(e) {
        return e.isInSSR() ? (e.headTagsForSSR = e.headTagsForSSR || [], e.headTagsForSSR) : window.document.head
    }

    function k(e, s) {
        t.isArray(e) ? t.isString(s) && e.push(s) : i(e).append(s)
    }

    function N(e, s) {
        e.remove ? i(s, e).remove() : t.pullAllWith(e, [s], function(e, i) {
            var s = i.match(/([^[]*?)(?=\])/);
            return s && s[0] && t.includes(e, s[0])
        })
    }

    function B(e) {
        e.isInSSR() || (window.document.title = e.getCurrentUrlPageTitle())
    }

    function L(e, t, i) {
        f(e, t, !0), i.currentUrl = F.parseUrl(e)
    }

    function x(e, t) {
        if (!p.isOpen("sv_dpages", e) || !n.errorPages.isErrorPage(t.pageId)) {
            var i = n.wixUrlParser.getUrl(e, t);
            !t.routerDefinition && e.isViewerMode() && i !== e.currentUrl.full && L(i, t.title, e)
        }
    }

    function U(e, t, i, o) {
        function a(a) {
            e.setRootNavigationInfo(a), n.logger.reportBeatEvent(e, 6, a.pageId), _(e), r.init(e);
            var c = function() {
                y(W.PAGE_LOADED_FIRST_RENDER, [e, i.wixCodeAppApi]);
                var r = n.wixUrlParser.parseUrl(e, e.currentUrl.full);
                r.pageId !== a.pageId && (r.pageId = a.pageId, r.title = a.title), s.errorPages.isErrorPage(r.pageId) && (s.errorPages.setIsFixingDisplayedMasterPage(), s.errorPages.updateErrorPageMasterData("masterPage", e.pagesData.masterPage)), e.setRootNavigationInfo(r), n.mobileViewportFixer.fixViewportTag(e), x(e, r), o(I(e, t, i))
            };
            t.siteDataAPI.loadPage(a, c)
        }
        var c = n.wixUrlParser.parseUrl(e, e.currentUrl.full);
        return p.isOpen("sv_dpages", e) && c.routerDefinition ? (q = 0, void g(e, c, function(e) {
            a(e)
        })) : (a(c), e)
    }
    var F = n.urlUtils,
        G = e.createFactory(o),
        W = {
            PAGE_LOADED_FIRST_RENDER: "page_loaded_first_render",
            PAGE_LOADED: "page_loaded"
        },
        H = {},
        V = {
            pageId: n.errorPages.IDS.INTERNAL_ERROR
        },
        q = 0;
    return n.sessionFreezer.freeze(H), {
        renderSite: U,
        WixSiteReact: o,
        hooks: {
            types: W,
            registerHook: m
        }
    }
}), define("core/siteRender/compRegistrar", ["santaProps", "compUtils"], function(e, t) {
    return {
        register: function(i, s, n) {
            return t.compFactory.register(i, s, n), e.propsSelectorsFactory.registerComponent(i, s), this
        },
        registerMobxObserver: function(e) {
            return t.compFactory.registerMobxObserver(e), this
        }
    }
}), define("core/core/pageRequests", ["lodash", "coreUtils", "loggingUtils", "dataFixer", "siteUtils", "experiment"], function(e, t, i, s, n, o) {
    function a(t, i) {
        return e.some(t.failedRequests, function(t) {
            var s = t.destination;
            return 2 === e.size(s) && "pagesData" === s[0] && s[1] === i
        })
    }

    function r(e, t) {
        i.logger.reportBI(e, i.bi.errors.ALL_PAGE_RETRIEVAL_ATTEMPTS_FAILED, {
            pageId: t
        })
    }

    function c(e, t) {
        return d(e, n.pagesUrlUtils.getMasterPageURLs(t), f, t)
    }

    function p(i, n) {
        return function(o) {
            var a = t.siteDataUtils.getRequestModel(i);
            return s.fix(o, e.map(n.pages, "pageId"), a, i.currentUrl, i.urlFormatModel, i.isViewerMode(), i.rendererModel)
        }
    }

    function l(e, t, i) {
        if (e.currentUrl && e.currentUrl.query.fakePage) {
            var s = e.currentUrl.query.fakePage;
            return {
                urls: [e.santaBase + "/static/fakePages/" + s + ".json"],
                destination: ["pagesData", i],
                transformFunc: p(e, t)
            }
        }
        var o = n.pagesUrlUtils.getPageURLs(t, i);
        return o || (i = t.mainPageId, o = n.pagesUrlUtils.getPageURLs(t, t.mainPageId)), d(e, o, i, t)
    }

    function d(s, n, a, r) {
        "undefined" != typeof document && "https:" === window.document.location.protocol && (n[0] = n[0].replace(m, y));
        var c = {
            urls: n,
            destination: ["pagesData", a],
            isValidResponse: function(t) {
                return e.isObject(t)
            },
            transformFunc: p(s, r),
            error: function(e) {
                if (s.isInSSR()) throw new Error("Failed to retrieve " + n[0] + ". Error: " + e);
                s.failedRequests.push(this)
            },
            onUrlRequestFailure: function(e, n) {
                s.onPageRequestFailed && s.onPageRequestFailed(e, n);
                var o = t.urlUtils.parseUrl(e);
                i.logger.reportBI(s, i.bi.errors.SINGLE_PAGE_RETRIEVAL_ATTEMPT_FAILED, {
                    pageId: a,
                    hostname: o.hostname,
                    url: e,
                    responseStatusCode: n
                })
            }
        };
        return o.isOpen("pageRequestTimeout", s) && e.merge(c, {
            maxTimeouts: 1,
            requestTimeout: 2e3,
            ontimeout: function() {}
        }), c
    }

    function u(i, s, n) {
        if (!i.publicModel) return [];
        var p = [],
            u = i.publicModel.pageList;
        a(i, f) ? r(i, f) : s.pagesData[f] || p.push(c(i, u));
        var m = e.isArray(n) ? n : [n];
        return e.forEach(m, function(e) {
            e.pageId && (o.isOpen("sv_dpages", i) && t.errorPages.isErrorPage(e.pageId) ? p.push(d(i, t.errorPages.getJSONS(i, e.pageId), e.pageId, u)) : a(i, e.pageId) ? r(i, e.pageId) : g(i, e) ? p.push(d(i, e.jsonUrls, e.pageId, u)) : h(i, e) || s.pagesData[e.pageId] || p.push(l(i, u, e.pageId)))
        }), p
    }

    function h(t, i) {
        var s = e.get(t, "rendererModel.passwordProtectedPages", []);
        return e.includes(s, i.pageId)
    }

    function g(t, i) {
        var s = e.find(t.publicModel.pageList.pages, {
            pageId: i.pageId
        });
        return !e.isEmpty(i.jsonUrls) && e.isEmpty(e.get(s, "urls"))
    }
    var f = "masterPage",
        m = /http:\/\/[a-z]+\.[a-z]+\.com\//,
        y = "//static.wixstatic.com/";
    return u
}), define("core/core/dataRequirementsChecker", ["utils", "lodash", "core/core/pageRequests"], function(e, t, i) {
    function s(e, i, n) {
        var o = n.styleId && e.getDataByQuery(n.styleId, i, e.dataTypes.THEME),
            a = [o ? o.skin : n.skin];
        return n.modes ? a.concat(t(n.modes.overrides).flatMap(t.partial(s, e, i)).compact().value()) : a
    }

    function n(e, t, i) {
        return {
            data: i.dataQuery ? e.getDataByQuery(i.dataQuery, t) : null,
            properties: i.propertyQuery ? e.getDataByQuery(i.propertyQuery, t, e.dataTypes.PROPERTIES) : null,
            style: i.styleId ? e.getDataByQuery(i.styleId, t, e.dataTypes.THEME) : null,
            skins: s(e, t, i),
            id: i.id,
            pageId: t
        }
    }

    function o(e, i, s, a, r) {
        var c = n(e, s, a);
        t.has(g, a.componentType) && (r[a.componentType] = r[a.componentType] || [], r[a.componentType].push(c));
        var p = h[a.componentType],
            l = p ? p(e, c, i) : [],
            u = d.getChildrenData(a, e.isMobileView());
        return t.reduce(u, function(t, n) {
            return t.concat(o(e, i, s, n, r))
        }, l)
    }

    function a(e, t, i) {
        if (!i.pageItemId) return [];
        var s = t.pagesData[u],
            n = s.data.document_data[i.pageItemId];
        if (!n || "PermaLink" !== n.type) return [];
        var o = s.data.document_data[n.dataItemRef.replace(/^#/, "")];
        if (!o) return [];
        var a = s.data.component_properties[n.dataItemRef.replace(/^#/, "")],
            r = h["Zoom:" + o.type];
        return r ? r(e, {
            data: o,
            properties: a
        }, i) : []
    }

    function r(e, i, s) {
        return t.flatMap(s, function(t, s) {
            return (0, g[s])(e, t, i)
        })
    }

    function c(e, i) {
        return t(f).map(function(t, s) {
            var n = e.getClientSpecMapEntryByAppDefinitionId(s);
            if (n) return t(e, n, i)
        }).compact().flatten().value()
    }

    function p(e, i, s) {
        var n = t.isArray(s) ? s : [s],
            p = {},
            l = o(e, n[0], u, i.pagesData[u].structure, p);
        return t.forEach(n, function(t) {
            l = l.concat(o(e, t, t.pageId, i.pagesData[t.pageId].structure, p), a(e, i, t), r(e, t, p), c(e, t))
        }), l
    }

    function l(e, i) {
        return t.every(e, function(e) {
            return !t.isEmpty(i.pagesData[e.pageId])
        })
    }
    var d = e.dataUtils,
        u = "masterPage",
        h = {},
        g = {},
        f = {};
    return e.sessionFreezer.freeze(h), e.sessionFreezer.freeze(g), e.sessionFreezer.freeze(f), {
        getNeededRequests: function(e, t, s) {
            e.santaBase = e.santaBase || e.serviceTopology.scriptsLocationMap.santa;
            var n = [s];
            return e.isPopupPage(s.pageId) && n.push(e.getExistingRootNavigationInfo(e.getPrimaryPageId())), l(n, t) ? p(e, t, n) : i(e, t, n)
        },
        registerCheckerForCompType: function(e, t) {
            h[e] = t
        },
        registerCheckerForAllCompsOfType: function(e, t) {
            g[e] = t
        },
        registerCheckerForAppDefId: function(e, t) {
            f[e] = t
        }
    }
}), define("core/core/Touchy", ["lodash"], function(e) {
    function t(e) {
        if (e.touches && e.touches.length) {
            var t = e.touches[0];
            return {
                x: t.pageX,
                y: t.pageY
            }
        }
    }

    function i() {
        this.data = {}
    }
    var s = {
        touched: !1,
        moved: !1,
        deltaCoords: {
            x: 0,
            y: 0
        },
        evObj: {}
    };
    Object.freeze(s);
    var n = ["onSwipeLeft", "onSwipeRight", "onSwipeUp", "onSwipeDown", "onTap"],
        o = {
            left: "onSwipeLeft",
            right: "onSwipeRight",
            up: "onSwipeUp",
            down: "onSwipeDown"
        };
    return i.prototype = {
        onTouchStart: function(i) {
            this.data = e.defaults({
                touched: !0,
                numOfTouches: i.touches.length,
                startCoords: t(i),
                startTime: Date.now(),
                evObj: e.clone(i)
            }, s)
        },
        onTouchMove: function(e) {
            var i = t(e);
            if (i) {
                this.data.startCoords || (this.data.startCoords = i);
                var s = this.data.startCoords.x - i.x,
                    n = this.data.startCoords.y - i.y;
                this.data.moved = !0, this.data.deltaCoords = {
                    x: s,
                    y: n
                }
            }
        },
        onTouchEnd: function(t) {
            var i, s;
            this.data.endTime = Date.now(), e.isEmpty(t) || (this.isValidSwipe() ? (i = this.getSwipeDirection(this.data.deltaCoords.x, this.data.deltaCoords.y), t[s = o[i]] && t[s](this.data.evObj)) : this.isValidTap() && t.onTap && t.onTap(this.data.evObj))
        },
        registerTouchEvents: function(t) {
            var i = e.pick(t, n);
            e.isEmpty(i) || (t.onTouchStart = this.onTouchStart.bind(this), t.onTouchMove = this.onTouchMove.bind(this), t.onTouchEnd = this.onTouchEnd.bind(this, i))
        },
        isValidSwipe: function() {
            return this.data.moved && 1 === this.data.numOfTouches && this.data.endTime - this.data.startTime < 500 && (Math.abs(this.data.deltaCoords.x) > 100 || Math.abs(this.data.deltaCoords.y) > 60)
        },
        isValidTap: function() {
            return this.data.touched && !this.data.moved && 1 === this.data.numOfTouches
        },
        getSwipeDirection: function(e, t) {
            return Math.abs(e) > Math.abs(t) ? e > 0 ? "left" : "right" : t > 0 ? "up" : "down"
        }
    }, i
}), define("core/components/fixedPositionRenderPlugin", ["lodash"], function(e) {
    return function(t, i, s, n) {
        if (t[""]) {
            var o = t[""].style;
            if (o && e.get(s, "layout.fixedPosition")) {
                var a = n.renderFixedPositionContainers ? 50 : 49;
                o.zIndex = Math.max(o.zIndex || 0, a)
            }
        }
    }
}), define("core/components/skinBasedComp", ["lodash", "santaProps", "skins", "react", "utils", "compUtils", "core/components/baseCompMixin", "core/core/Touchy", "core/components/fixedPositionRenderPlugin"], function(e, t, i, s, n, o, a, r, c) {
    function p() {
        var t;
        if (e.isFunction(this.getTransformedCssStates)) {
            var i = this.getTransformedCssStates();
            t = void 0 !== i ? i : this.state
        } else t = this.state;
        if (!t) return {};
        var s = {},
            n = [];
        return e.forOwn(t, function(e, t) {
            0 === t.lastIndexOf("$", 0) && n.push(e)
        }), e.isEmpty(n) && t.hasOwnProperty("cssState") && (n = e.values(t.cssState)), e.isEmpty(n) || (s["data-state"] = n.join(" ")), s
    }

    function l(e) {
        var t = e.props.skin,
            i = R[t];
        return !i && e.getDefaultSkinName && (t = e.getDefaultSkinName(), i = R[t]), i
    }

    function d(t) {
        e(t).filter(function(t) {
            return e.has(t, "onClick")
        }).forEach(function(t) {
            t.style = e.assign(t.style || {}, {
                cursor: "pointer"
            })
        })
    }

    function u(t) {
        if (this.props.structure && this.props.structure.modes) {
            var i = e.find(this.props.structure.modes.definitions, {
                type: n.siteConstants.COMP_MODES_TYPES.HOVER
            });
            if (i) {
                var s = this.props.structure.id;
                t[""].onMouseEnter = v(this.props.activateModeById, s, this.props.rootId, i.modeId), t[""].onMouseLeave = S(this.props.deactivateModeById, s, this.props.rootId, i.modeId)
            }
        }
    }

    function h(t, i) {
        var s = e.get(t, "modes.definitions");
        return e.filter(s, {
            type: i
        })
    }

    function g(e) {
        return h(e, "SCROLL")
    }

    function f(t) {
        return e.sortBy(h(t, "WIDTH"), "params.width")
    }

    function m() {
        var e = g(this.props.structure);
        e.length && this.props.windowScrollEventAspect.registerCompScrollModes(this.props.id, this.props.rootId, e)
    }

    function y() {
        var t = this.props.structure,
            i = f(t);
        if (i.length) {
            var s = t.id,
                n = t.layout.width,
                o = this.props.rootId,
                a = e.findLast(i, function(e) {
                    return e.params.width <= n
                });
            this.props.activateModeById(s, o, a.modeId)
        }
    }

    function v(e, t, i, s) {
        return function() {
            if (!this.props.isMobileView) return e(t, i, s)
        }
    }

    function S(e, t, i, s) {
        return function() {
            if (!this.props.isMobileView) return e(t, i, s)
        }
    }

    function A(t, i) {
        return e.get(this.props.compTheme, ["style", "properties", t], i)
    }

    function _() {
        var e = this.getComponentPreviewState();
        if (e) return {
            "data-preview": e
        }
    }

    function P(t) {
        var i = this.getSkinProperties();
        return e.isFunction(this.transformRefDataTemp) ? this.transformRefDataTemp(i) : e.isFunction(this.transformRefData) && this.transformRefData(i), this.props.transformSkinProperties && (i = this.props.transformSkinProperties(i)), i[""] || (i[""] = {}), this.props.isMobileDevice && d(i), u.call(this, i), this.props.isExperimentOpen("scrollModes") && m.call(this), this.props.isExperimentOpen("widthModes") && y.call(this), this.updateRootRefDataStyles(i[""]), e.assign(i[""], p.call(this), _.call(this)), t.react && 0 !== t.react.length || (i[""] = e.defaults(i[""], i.inlineContent)), i
    }

    function I(e, i) {
        var s = M.getPropTypesForChildComponent(e);
        return t.santaTypesUtils.resolveComponentProps(s, i)
    }

    function E(t, i, s, n) {
        n = n || {};
        var o = this.getSkinExports(),
            a = "string" == typeof s ? {
                skin: o[s].skin,
                styleId: this.props.styleId + s
            } : s,
            r = {
                siteData: this.props.siteData,
                siteAPI: this.props.siteAPI,
                compProp: e.omit(this.props.compProp, ["isHidden", "isCollapsed"]),
                loadedStyles: this.props.loadedStyles,
                compData: t,
                refInParent: e.get(t, "id", ""),
                skin: a.skin,
                styleId: a.styleId,
                pageId: this.props.pageId,
                rootId: this.props.rootId,
                rootNavigationInfo: this.props.rootNavigationInfo,
                currentUrlPageId: this.props.currentUrlPageId
            };
        if (!t && !n.id) throw new Error("Unable to set child comp id - no data item\\custom id were passed");
        if (r.id = n.id || this.props.id + t.id, !t && !n.ref) throw new Error("Unable to set child comp ref - no data item\\custom ref were passed");
        r.ref = n.ref || t.id, r.compDesign = this.props.compDesign, r.structure = e.assign({
            componentType: i,
            styleId: this.props.structure ? this.props.structure.styleId : "",
            skinPart: n.skinPart || r.ref
        }, n.structure);
        var c = I(i, r);
        return r = e.merge(c, r, e.omit(n, "structure")), e.omitBy(r, e.isUndefined)
    }

    function T(i, s, n, o) {
        o = o || {};
        var a = this.getSkinExports(),
            r = "string" == typeof n ? {
                skin: a[n].skin,
                styleId: this.props.styleId + n
            } : n,
            c = {
                rootId: this.props.rootId,
                rootNavigationInfo: this.props.rootNavigationInfo,
                compProp: e.omit(this.props.compProp, ["isHidden", "isCollapsed"]),
                compData: i,
                refInParent: e.get(i, "id", ""),
                skin: r.skin,
                styleId: r.styleId
            };
        if (!i && !o.id) throw new Error("Unable to set child comp id - no data item\\custom id were passed");
        if (c.id = o.id || this.props.id + i.id, !i && !o.ref) throw new Error("Unable to set child comp ref - no data item\\custom ref were passed");
        c.ref = o.ref || i.id, c.structure = e.assign({
            componentType: s,
            styleId: this.props.structure ? this.props.structure.styleId : "",
            skinPart: o.skinPart || c.ref
        }, o.structure);
        var p = {};
        if (t.propsSelectorsFactory.isSantaTypedComponentReactElement(this)) {
            var l = M.getPropTypesForChildComponent(s);
            p = e.pick(this.props, e.keys(l))
        } else p = I(s, e.assign(e.pick(this.props, ["siteAPI", "siteData", "loadedStyles"]), c));
        return e.assign(p, c, e.omit(o, "structure"))
    }
    var C = t.Types,
        M = t.propsSelectorsFactory,
        D = i.skinsRenderer,
        R = i.skins;
    return D.registerRenderPlugin(c), {
        mixins: [a.baseComp],
        propTypes: {
            isTouchDevice: C.Device.isTouchDevice,
            isMobileView: C.isMobileView,
            isMobileDevice: C.Device.isMobileDevice,
            isDebugMode: C.isDebugMode,
            structure: C.Component.structure,
            id: C.Component.id,
            refInParent: C.Component.refInParent,
            rootId: C.Component.rootId,
            rootNavigationInfo: C.Component.rootNavigationInfo,
            currentUrlPageId: C.Component.currentUrlPageId,
            styleId: C.Component.styleId,
            skin: C.Component.skin,
            style: C.Component.style,
            compProp: C.Component.compProp,
            compData: C.Component.compData,
            compActions: C.Component.compActions,
            compTheme: C.Component.theme,
            componentPreviewState: C.RenderFlags.componentPreviewState,
            renderFixedPositionContainers: C.RenderFlags.renderFixedPositionContainers,
            getActiveModes: C.Modes.getActiveModes,
            activateModeById: C.Modes.activateModeById,
            deactivateModeById: C.Modes.deactivateModeById,
            switchModesByIds: C.Modes.switchModesByIds,
            windowScrollEventAspect: C.SiteAspects.windowScrollEvent.isRequired,
            transformSkinProperties: s.PropTypes.func,
            isExperimentOpen: C.isExperimentOpen
        },
        renderHelper: function() {
            var t = l(this);
            if (!t) {
                var i = this.props.structure && this.props.structure.componentType || "";
                return n.log.error("Skin [" + this.props.skin + "] not found for comp [" + i + "]"), s.DOM.div()
            }
            var o = P.call(this, t);
            if (this.props.isTouchDevice) {
                var a = new r;
                e.forEach(o, function(e) {
                    a.registerTouchEvents(e)
                })
            }
            return D.renderSkinHTML.call(this, t.react, o, this.props.styleId, this.props.id, this.props.structure, this.props, this.state)
        },
        getComponentPreviewState: function() {
            return this.props.componentPreviewState
        },
        render: function() {
            try {
                return this.renderHelper()
            } catch (t) {
                if (this.props.isDebugMode) throw t;
                n.log.error("Cannot render component", this.constructor.displayName, this.props.id, t);
                var e = {
                    "": {
                        style: this.props.style,
                        "data-dead-comp": !0
                    }
                };
                return D.renderSkinHTML.call(this, R["skins.viewer.deadcomp.DeadCompPublicSkin"].react, e, "deadComp", this.props.id, this.props.structure, this.props, this.state)
            }
        },
        getSkinExports: function() {
            var e = l(this);
            return e && e.exports
        },
        classSet: function(t) {
            return n.classNames(e.reduce(t, function(e, t, i) {
                return e[this.styleId + "_" + i] = t, e
            }.bind(this.props), {}))
        },
        componentWillUpdate: function() {
            this.props.onComponentWillUpdate && this.props.onComponentWillUpdate()
        },
        componentWillUnmount: function() {
            this.props.windowScrollEventAspect && this.props.windowScrollEventAspect.clearCompScrollModes(this.props.id)
        },
        getStyleProperty: A,
        createChildComponent: function(e, i, s, n) {
            var a = o.compFactory.getCompClass(i, !0);
            return a ? a(t.propsSelectorsFactory.isSantaTypedComponentByName(i) ? T.call(this, e, i, s, n) : E.call(this, e, i, s, n)) : null
        }
    }
}), define("core/components/inputFocusMixin", ["lodash"], function(e) {
    return {
        INPUT_FOCUS_BEHAVIORS: {
            focus: {
                methodName: "requestFocus"
            },
            blur: {
                methodName: "requestBlur"
            }
        },
        requestFocus: function() {
            this.shouldApplyFocus = !0
        },
        requestBlur: function() {
            this.shouldApplyBlur = !0
        },
        componentDidUpdate: function() {
            this.shouldApplyFocus && (e.isFunction(this.focus) && this.focus(), this.shouldApplyFocus = !1), this.shouldApplyBlur && (e.isFunction(this.blur) && this.blur(), this.shouldApplyBlur = !1)
        }
    }
}), define("core/components/validatableMixin", ["lodash"], function(e) {
    function t(t) {
        return {
            shouldShowValidationIndication: e.get(t, "shouldShowValidationIndication", !1)
        }
    }
    return {
        validatable: {
            requestSetCustomValidity: function(e) {
                this.customValidityToSet = e
            },
            componentDidUpdate: function() {
                e.isString(this.customValidityToSet) && e.isFunction(this.setCustomValidity) && (this.setCustomValidity(this.customValidityToSet), this.customValidityToSet = null)
            },
            showValidityIndication: function() {
                this.setState({
                    shouldShowValidationIndication: !0
                })
            },
            hideValidityIndication: function() {
                this.setState({
                    shouldShowValidationIndication: !1
                })
            },
            shouldShowValidityIndication: function() {
                return this.state.shouldShowValidationIndication
            }
        },
        getPublicState: t,
        VALIDATABLE_BEHAVIORS: {
            setCustomValidity: {
                methodName: "requestSetCustomValidity",
                params: ["customValidity"]
            },
            updateValidityIndication: {
                methodName: "showValidityIndication"
            }
        }
    }
}), define("core/components/validatableWithSyncMixin", ["lodash"], function(e) {
    function t(t) {
        return {
            shouldShowValidationIndication: e.get(t, "shouldShowValidationIndication", !1)
        }
    }
    return {
        validatableWithSync: {
            getInitialState: function() {
                return {
                    validateData: {}
                }
            },
            isValid: function() {
                return e.get(this.state, ["validateData", "validity", "valid"], !0)
            },
            getValidity: function() {
                return e.get(this.state, ["validateData", "validity"])
            },
            syncValidationData: function(e) {
                this.setState({
                    validateData: e
                })
            },
            showValidityIndication: function() {
                this.setState({
                    shouldShowValidationIndication: !0
                })
            },
            hideValidityIndication: function() {
                this.setState({
                    shouldShowValidationIndication: !1
                })
            },
            shouldShowValidityIndication: function() {
                return this.state.shouldShowValidationIndication
            }
        },
        getPublicState: t,
        VALIDATABLE_WITH_SYNC_BEHAVIORS: {
            updateValidityIndication: {
                methodName: "showValidityIndication"
            },
            syncValidationData: {
                methodName: "syncValidationData",
                params: ["validateData"]
            }
        }
    }
}), define("core/components/runTimeCompData", ["lodash", "santaProps", "utils"], function(e, t) {
    return {
        propTypes: {
            id: t.Types.Component.id.isRequired,
            setRuntimeCompData: t.Types.DAL.setCompData.isRequired,
            setRuntimeCompProps: t.Types.DAL.setCompProps.isRequired
        },
        updateData: function(e) {
            this.props.setRuntimeCompData(this.props.id, e)
        },
        updateProps: function(e) {
            this.props.setRuntimeCompProps(this.props.id, e)
        }
    }
}), define("core/components/blockOuterScrollMixin", [], function() {
    return {
        blockOuterScroll: function(e) {
            var t = e.currentTarget,
                i = e.currentTarget.scrollHeight - e.currentTarget.offsetHeight,
                s = e.deltaY % 3 ? e.deltaY : 10 * e.deltaY;
            t.scrollTop + s <= 0 ? (t.scrollTop = 0, e.preventDefault()) : t.scrollTop + s >= i && (t.scrollTop = i, e.preventDefault()), e.stopPropagation()
        }
    }
}), define("core/components/optionInput", ["lodash", "core/components/skinBasedComp", "utils"], function(e, t, i) {
    return {
        mixins: [t],
        getInitialState: function() {
            return this.getCssState(this.props)
        },
        componentWillReceiveProps: function(e) {
            this.setState(this.getCssState(e))
        },
        getCssState: function(e) {
            return {
                $enabledState: e.compData.disabled ? "disabled" : "enabled",
                $selectState: e.selected ? "selected" : "unselected"
            }
        },
        onMouseEnter: function() {
            this.refs.toolTip.showToolTip({}, {
                source: this
            })
        },
        onMouseLeave: function() {
            this.refs.toolTip.closeToolTip()
        },
        createInfoTipChildComponent: function() {
            return this.createChildComponent({
                content: this.props.compData.description,
                id: "toolTip"
            }, "wysiwyg.common.components.InfoTip", {
                skin: "wixapps.integration.skins.ecommerce.options.InfoTipSkin",
                styleId: i.santaTypes.shortenStyleId("wixapps.integration.skins.ecommerce.options.InfoTipSkin")
            }, {
                ref: "toolTip",
                className: this.props.styleId + "tooltip"
            })
        }
    }
}), define("core/components/skinInfo", ["lodash", "skins", "santaProps"], function(e, t, i) {
    return {
        propTypes: {
            skin: i.Types.Component.skin,
            structure: i.Types.Component.structure,
            theme: i.Types.Component.theme,
            allTheme: i.Types.Theme.all,
            themeColor: i.Types.Theme.colors
        },
        getParams: function(t, i) {
            var s = {};
            return e.forEach(t, function(e) {
                s[e] = this.getParamFromDefaultSkin(e, i)
            }.bind(this)), s
        },
        getParamFromDefaultSkin: function(e, t) {
            return this.getParamFromSkin(e, t || this.props.skin)
        },
        getParamFromSkin: function(i, s) {
            var n = e.get(this.props.theme, "style.properties") || {},
                o = t.skins[s],
                a = n[i] || o.paramsDefaults && o.paramsDefaults[i];
            return e.isArray(a) && a.length > 1 && ((n = e.clone(n))[i] = this.getSumParamValue(i, s)), t.params.renderParam(i, o, n, this.props.themeColor)
        },
        getSumParamValue: function(i, s) {
            var n = this.getSkinExports(),
                o = t.skins[s].paramsDefaults,
                a = o && o[i];
            if (!a) {
                var r = n[i];
                return r ? Math.abs(parseInt(r, 10)) || 0 : 0
            }
            return Array.isArray(a) ? e.sumBy(a, function(e) {
                return Math.abs(parseInt(this.getParamFromSkin(e, s).value, 10))
            }.bind(this)) : Math.abs(parseInt(a, 10)) || 0
        },
        getFromExports: function(e) {
            var t = this.getSkinExports();
            return t && t[e] || 0
        },
        getStyleData: function(t, i) {
            i = i || this.props;
            var s = t || i.structure.styleId;
            s && (s = s.replace("#", ""));
            var n = i.allTheme[s];
            return e.get(n, "style.properties") || {}
        }
    }
}), define("core/core/data/apiSections/AnchorsDataAPI", ["lodash", "utils"], function(e, t) {
    function i(i, s, n, o) {
        var a = o === t.constants.VIEW_MODES.MOBILE,
            r = t.layoutAnchors.createPageAnchors(s, n, a),
            c = {
                PAGES_CONTAINER: [{
                    distance: 0,
                    locked: !0,
                    originalValue: 0,
                    fromComp: "PAGES_CONTAINER",
                    targetComponent: "masterPage",
                    type: "BOTTOM_PARENT"
                }],
                SITE_PAGES: [{
                    distance: 0,
                    locked: !0,
                    originalValue: 0,
                    fromComp: "SITE_PAGES",
                    targetComponent: "PAGES_CONTAINER",
                    type: "BOTTOM_PARENT"
                }]
            };
        e.set(i, ["anchorsMap", s.id, o], r), e.set(i, ["anchorsMap", "defaultMasterPage", o], r), e.set(i, ["anchorsMap", "landingPageMasterPage", o], c)
    }

    function s(e) {
        this.privatesKey = e, n.set(e, {
            siteData: e
        })
    }
    var n = new t.SiteDataPrivates;
    return s.prototype = {
        createPageAnchors: function(s, o) {
            var a = n.get(this.privatesKey).siteData,
                r = a.getPageData(s);
            if (r) {
                var c = r.structure,
                    p = a.getAllTheme(),
                    l = o ? t.constants.VIEW_MODES.MOBILE : a.getViewMode(),
                    d = l === t.constants.VIEW_MODES.MOBILE;
                if (c.id === t.siteConstants.MASTER_PAGE_ID) i(a, c, p, l);
                else {
                    var u = t.layoutAnchors.createPageAnchors(c, p, d);
                    e.set(a, ["anchorsMap", c.id, l], u)
                }
            }
        },
        removePageOriginalValues: function(i, s) {
            var o = n.get(this.privatesKey).siteData,
                a = o.getPageData(i).structure,
                r = s ? t.constants.VIEW_MODES.MOBILE : o.getViewMode();
            e.set(o, ["originalValuesMap", a.id, r], {})
        },
        createChildrenAnchors: function(i, s) {
            var o = n.get(this.privatesKey).siteData,
                a = o.getViewMode(),
                r = o.getAllTheme(),
                c = e.get(o, ["pagesData", s, "structure", "id"]),
                p = t.layoutAnchors.createChildrenAnchors(i, r, o.isMobileView(), o);
            e.assign(o.anchorsMap[c][a], p)
        }
    }, s
}), define("core/core/data/ViewerDisplayedJsonUpdater", ["lodash", "utils", "core/core/data/apiSections/AnchorsDataAPI"], function(e, t, i) {
    function s(e) {
        return e && e.length > 0 && "pagesData" === e[0]
    }

    function n(t) {
        return e.isEqual(t, ["pagesData"])
    }

    function o(e) {
        return "page" === this.pointers.getPointerType(e)
    }

    function a(i) {
        return i && e.includes(t.constants.DATA_TYPES, i.type)
    }

    function r(t, i) {
        var o = this.fullCache.getPath(t);
        if (!o) throw new Error("pointer path does not exist");
        if (n(o)) {
            var a = e.get(this.fullJson, o);
            c.call(this, a, i)
        } else if (s(o)) l.call(this, t, i);
        else {
            var r = e.get(this.fullJson, o);
            this.displayedJsonDAL.set(t, r)
        }
    }

    function c(t, i) {
        var s = this.pointers.page.getAllPagesPointer();
        this.displayedJsonDAL.set(s, {}), p.call(this, i, "masterPage"), e(t).omit("masterPage").keys().forEach(p.bind(this, i))
    }

    function p(e, t) {
        e[t] = e[t] || {};
        var i = this.pointers.page.getPagePointer(t) || this.pointers.page.getNewPagePointer(t);
        this.displayedJsonDAL.set(i, {}), l.call(this, i, e)
    }

    function l(t, i) {
        var n = this.fullCache.getPath(t);
        if (!n || this.displayedJsonDAL.isPathExist(e.initial(n))) {
            var o = e.take(n, 2),
                r = e.last(o),
                c = e.get(this.fullJson, n);
            if (s(n) && !a(t)) {
                var p = c.structure ? c.structure : c;
                i[r] = d.call(this, p, i[r], r);
                var l = h(c, i, r);
                u.call(this, t, l, o), this.pointers.page.isPointerPageType(t) && this.anchorsAPI.createPageAnchors(r)
            } else this.displayedJsonDAL.set(t, c)
        }
    }

    function d(i, s, n) {
        var o = t.modes.resolveCompActiveModesRecursive(i, s);
        e.assign(s, o);
        var a = this.pointers.general.getActiveModes(),
            r = this.pointers.getInnerPointer(a, n);
        return this.displayedJsonDAL.set(r, s), s
    }

    function u(t, i, s) {
        if (o.call(this, t))
            if (e.get(this.displayedJsonDAL.jsonData, s)) {
                var n = e.get(this.displayedJsonDAL.jsonData, s.concat(["structure", "mobileComponents"])),
                    a = this.pointers.general.getRenderFlag("componentViewMode");
                n && "editor" === this.displayedJsonDAL.get(a) && (i.structure.mobileComponents = n), this.displayedJsonDAL.merge(t, i)
            } else this.displayedJsonDAL.set(t, i);
        else i.structure && this.displayedJsonDAL.set(t, i.structure)
    }

    function h(e, i, s) {
        return t.siteRenderPrivateStuff.fullToDisplayedJson.getDisplayedJson(e, i, s)
    }

    function g(e, t, s, n) {
        t && (this.fullJson = e, this.displayedJsonDAL = t, this.fullCache = s, this.pointers = n, this.anchorsAPI = new i(t.jsonData))
    }
    return g.prototype = {
        updateDisplayedJsonByPointer: r,
        updateDisplayedJsonInPagesDataByPointer: l,
        updateDisplayedPagesData: c,
        updateDisplayedRoot: function(e, t, i) {
            var s = h(t, e, t.structure.id),
                n = t.structure.id || i,
                o = this.pointers.page.getPagePointer(n) || this.pointers.page.getNewPagePointer(n),
                a = this.fullCache.getPath(o);
            return u.call(this, o, s, a), s
        }
    }, g
}), define("core/core/data/apiSections/documentDataAPI", ["lodash", "utils"], function(e, t) {
    function i(t, i, s, n) {
        var o = t.cache.getBoundCacheInstance(!0),
            a = t.pointers.full.components.getPage(i, n),
            r = a && t.pointers.full.components.getComponent(s, a),
            c = r && o.getPath(r);
        return c ? e.get(t.fullPagesData, c) : null
    }

    function s(e, s, n) {
        var o = i(e, s, n, e.siteData.getViewMode());
        return t.dataUtils.getAllCompsInStructure(o, e.siteData.isMobileView())
    }

    function n(t, i, s) {
        var n = t.cache.getBoundCacheInstance(!0).getPath(t.pointers.getInnerPointer(i, s));
        return n ? e.get(t.fullPagesData, n) : null
    }

    function o(t, i) {
        var s = t.cache.getBoundCacheInstance(!0).getPath(i);
        return s ? e.get(t.fullPagesData, s) : null
    }

    function a(e) {
        return e.fullPagesData.pagesData
    }
    return function(t) {
        var i = {
            getAllCompsUnderRoot: e.partial(s, t),
            getFullStructureProperty: e.partial(n, t),
            getFullDataItem: e.partial(o, t)
        };
        return t.siteData.isInSSR() && (i.getFullPagesData = e.partial(a, t)), i
    }
}), define("core/core/data/runtimeDalMobxHelper", ["lodash", "mobx"], function(e, t) {
    function i() {
        return t.observable.map({})
    }

    function s(t, s) {
        return e.reduce(s, function(e, t) {
            return e.has(t) || e.set(t, i()), e.get(t)
        }, t)
    }

    function n(i, s) {
        return e.reduce(s, function(e, i) {
            if (e) return t.isObservableMap(e) && e.has(i) ? e.get(i) : e[i]
        }, i)
    }

    function o(i, s, o) {
        var a = t.toJS(n(i, s));
        return e.isUndefined(a) ? o : a
    }

    function a(t, i, n) {
        s(t[e.head(i)], e.slice(i, 1, i.length - 1)).set(e.last(i), e.cloneDeep(n))
    }

    function r(i, s) {
        var o = n(i, e.dropRight(s));
        if (o) {
            var a = e.last(s);
            t.isObservableMap(o) && o.delete(a)
        }
    }

    function c(t, i) {
        e.forEach(i, e.partial(r, t))
    }

    function p(s, n) {
        e.forEach(n, function(e) {
            t.isObservableMap(s[e]) ? s[e].clear() : s[e] = i()
        })
    }
    return {
        initStoreMaps: t.action(p),
        getByPath: o,
        setByPath: t.action(a),
        removeByPath: t.action(r),
        removeAllByPaths: t.action(c)
    }
}), define("core/core/data/PointersRuntimeCache", ["lodash", "utils"], function(e, t) {
    function i(e) {
        return this._pointers.full.components.getPageOfComponent(e).id
    }

    function s(t, i) {
        this._roots = i, this._viewMode = t, this._compPointers = e(i).flatMap(function(e) {
            var i = this._pointers.full.components.getPage(e, t);
            return i ? [i].concat(this._pointers.full.components.getChildrenRecursively(i)) : []
        }.bind(this)).keyBy("id").value()
    }

    function n(e, t, i) {
        this._compPointers = {}, this._pointers = e, this._displayedDal = t, this._documentAPI = i, this._roots = [], this._viewMode = null
    }
    var o = t.constants.COMP_DATA_QUERY_KEYS;
    return n.prototype = {
        reset: function() {
            this._compPointers = {}
        },
        isEmpty: function() {
            return e.isEmpty(this._compPointers)
        },
        getAllCompIds: function(t, i) {
            return e.isEqual(this._roots, i) && this._viewMode === t || s.call(this, t, i), e.keys(this._compPointers)
        },
        getCompPointer: function(e, t, i) {
            var n = this._compPointers[e];
            return n && this._displayedDal.isExist(n) ? n : (s.call(this, t, i), this._compPointers[e])
        },
        getCompDataId: function(e, t) {
            if (!e) return null;
            var i = this._pointers.getInnerPointer(e, o[t]);
            return this._displayedDal.get(i)
        },
        getCompDataItemPointer: function(e, t, s) {
            if (!e) return null;
            var n, a;
            s ? n = this._documentAPI.getFullStructureProperty(e, o[t]) : (a = this._pointers.getInnerPointer(e, o[t]), n = this._displayedDal.get(a));
            var r = null;
            return n && (r = this._pointers.data.getItem(t, n.replace("#", ""), i.call(this, e))), r && this._displayedDal.isExist(r) ? r : null
        }
    }, n
}), define("core/core/data/RuntimeToDisplayed", ["lodash", "utils"], function(e, t) {
    function i(e) {
        return this._pointers.full.components.getPageOfComponent(e).id
    }

    function s(t, s, n, o) {
        var a = e.uniqueId("_runtime_"),
            r = this._pointers.getInnerPointer(t, h[s]);
        this._displayedDal.set(r, "#" + a);
        var c = this._pointers.data.getItem(s, a, i.call(this, t));
        return o ? this._displayedDal.set(c, n) : this._displayedDal.set(c, e.assign({
            id: a
        }, n)), c
    }

    function n(e, t, i) {
        if ("type" === i && !e) {
            if (t) return !0;
            throw new Error("data items have to be passed with a type")
        }
        return "id" === i
    }

    function o(t, i, s) {
        if (i.type) return i;
        var n = null;
        if (s && s.type) n = e.assign({}, i, {
            type: s.type
        });
        else {
            if (t !== d.prop) throw new Error("data items have to be passed with a type");
            n = e.assign({}, i, {
                type: "DefaultProperties"
            })
        }
        return n
    }

    function a(i, s, a) {
        var r = this._pointers.data.getPageIdOfData(a),
            c = u[s],
            p = this._siteData.getDataByQuery(a.id, r, c),
            l = o(s, i, p),
            d = t.objectUtils.cloneAndConditionalMergeOfFields(l, p, n),
            h = this._dataResolver.getFlatMapOfNestedItem(d, c);
        return this._dataResolver.removeItemsFromCache(r, u[s], e.keys(h)), this._displayedDal.merge(a, h[a.id]), delete h[a.id], e.forOwn(h, function(e, t) {
            var i = this._pointers.data.getItem(s, t, r);
            this._pointers.data.validatePath(i), this._displayedDal.set(i, e)
        }.bind(this)), a
    }

    function r(e, t, i) {
        var n = this._compPointersCache.getCompDataItemPointer(i, e);
        return n || (n = s.call(this, i, e)), a.call(this, t, e, n)
    }

    function c(e, t) {
        var i = d.prop,
            n = this._compPointersCache.getCompDataItemPointer(t, i);
        n || (n = s.call(this, t, i, {}, !0));
        var a = this._pointers.data.getPageIdOfData(n),
            r = u[i],
            c = o(i, e, this._siteData.getDataByQuery(n.id, a, r));
        return this._dataResolver.removeItemsFromCache(a, u[i], [n.id]), this._displayedDal.merge(n, c), n
    }

    function p(e, t, i, s, n) {
        this._pointers = i, this._displayedDal = t, this._siteData = e, this._dataResolver = e.dataResolver, this._compPointersCache = s, this._documentAPI = n
    }

    function l(t) {
        var i = null;
        return i = e.isPlainObject(t) ? t : this._compPointersCache.getCompPointer(t, this._siteData.getViewMode(), this._siteData.getAllPossiblyRenderedRoots()), i && this._displayedDal.isExist(i) ? i : null
    }
    var d = t.constants.DATA_TYPES,
        u = t.constants.PAGE_DATA_DATA_TYPES,
        h = t.constants.COMP_DATA_QUERY_KEYS,
        g = {
            props: "props",
            data: "data",
            design: "design",
            layout: "layout",
            actionsBehaviors: "actionsBehaviors"
        },
        f = {};
    return f[g.data] = e.partial(r, d.data), f[g.design] = e.partial(r, d.design), f[g.props] = c, f[g.actionsBehaviors] = function(t, i) {
        var n = d.behaviors,
            o = this._compPointersCache.getCompDataItemPointer(i, n);
        o || (o = s.call(this, i, n, {
            type: "ObsoleteBehaviorsList"
        }));
        var a = this._documentAPI.getFullDataItem(o),
            r = a && a.items || [],
            c = (e.isString(r) ? JSON.parse(r) : r).concat(t),
            p = this._pointers.getInnerPointer(o, "items");
        this._displayedDal.set(p, JSON.stringify(c));
        var l = this._pointers.data.getPageIdOfData(o);
        return this._dataResolver.removeItemsFromCache(l, u[n], [o.id]), p
    }, f[g.layout] = function(e, t) {
        var i = this._pointers.getInnerPointer(t, "layout");
        return this._displayedDal.merge(i, e), i
    }, Object.freeze(f), p.prototype = {
        updateDataItem: function(e, t, i) {
            var s = l.call(this, e);
            return s ? f[t].call(this, i, s) : null
        },
        updateActionsAndBehaviorsItems: function(e, t) {
            var i = l.call(this, e);
            return i ? f[g.actionsBehaviors].call(this, t, i) : null
        },
        updateCompLayout: function(e, t) {
            var i = l.call(this, e);
            return i ? f[g.layout].call(this, t, i) : null
        },
        updateAll: function(t) {
            var i = this,
                s = e.map(t, function(t, s) {
                    var n = t.overrides,
                        o = l.call(i, s);
                    return o ? (e.forOwn(n, function(e, t) {
                        f[t].call(i, e, o)
                    }), o) : null
                });
            return e.compact(s)
        },
        OVERRIDE_TYPES: g
    }, p
}), define("core/core/data/RuntimeDal", ["lodash", "utils", "core/core/data/runtimeDalMobxHelper", "core/core/data/PointersRuntimeCache", "core/core/data/RuntimeToDisplayed"], function(e, t, i, s, n) {
    function o(e) {
        return B.concat([e])
    }

    function a(e) {
        return o(e).concat("state")
    }

    function r(e) {
        return o(e).concat("overrides")
    }

    function c(e) {
        return r(e).concat("props")
    }

    function p(e) {
        return r(e).concat("data")
    }

    function l(e) {
        return r(e).concat("design")
    }

    function d(e) {
        return r(e).concat("layout")
    }

    function u(e) {
        return r(e).concat("actionsBehaviors")
    }

    function h(e) {
        return ["runtime", "popups", e]
    }

    function g(e) {
        return h(e).concat("opened")
    }

    function f(e) {
        return h(e).concat("context")
    }

    function m(t, i) {
        return e.isEqual(i, e.pick(t, e.keys(i)))
    }

    function y(t, i, o, a) {
        this._siteData = t, this._siteDataApi = i, this._pointers = a, this._displayedDal = o, this._changeListeners = [], this.snapshotId = 0, this._roots = [], this._pointersCache = new s(a, o, i.document), this._runtimeToDisplayed = new n(t, o, a, this._pointersCache, i.document), this._siteDataApi && this._siteDataApi.registerDisplayedJsonUpdateCallback(this._pointersCache.reset.bind(this._pointersCache)), this._displayedDal && !this._displayedDal.isPathExist(B) && v.call(this), e.bindAll(this, ["registerChangeListener", "getCompStructure", "setCompState", "removeCompState", "getCompState", "getCompType", "getCompLayout", "updateCompLayout", "getCompDesign", "setCompDesign", "getCompData", "setCompData", "getCompConnections", "getCompProps", "setCompProps", "getActionsAndBehaviors", "addActionsAndBehaviors", "removeActionsAndBehaviors", "getCompName", "getBoundingClientRect", "getPageId", "getParentId", "isDisplayed", "hasBeenPopupOpened", "markPopupAsBeenOpened", "getDynamicPageData", "setPopupContext", "getPopupContext"])
    }

    function v() {
        e.get(this._siteData, "runtime") || e.set(this._siteData, "runtime", {}), i.initStoreMaps(this._siteData.runtime, ["components", "popups"]), this._pointersCache.reset()
    }

    function S(t, i) {
        return e.get(t, e.head(i))
    }

    function A(t) {
        return e.drop(t)
    }

    function _(e, t, s) {
        var n = S(e, t),
            o = A(t);
        return i.getByPath(n, o, s)
    }

    function P(e, t, s) {
        var n = S(e, t),
            o = A(t);
        i.setByPath(n, o, s)
    }

    function I(t, i, s, n) {
        var o = b.call(this, i);
        if (!o) return null;
        var a = D.call(this, o),
            r = this._pointersCache.getCompDataId(o, n),
            c = this._siteData.getDataByQuery(r, a, k[n]),
            p = _(this._siteData, s, {}),
            l = e.assign({}, p, t);
        if (this._runtimeToDisplayed.updateDataItem(o, n, l), P(this._siteData, s, l), !m(c, t)) {
            var d = {
                type: N[n],
                value: t
            };
            E.call(this, i, d)
        }
        return ++this.snapshotId
    }

    function E(t, i) {
        e.forEach(this._changeListeners, function(e) {
            e(t, i)
        })
    }

    function T(e, t, i) {
        var s = b.call(this, e);
        return s ? this._pointersCache.getCompDataItemPointer(s, t, i) : null
    }

    function C(e, i) {
        var s = this._pointers.data.getPageIdOfData(e);
        return t.objectUtils.cloneDeep(this._siteData.getDataByQuery(e.id, s, k[i]))
    }

    function M(e) {
        var t = b.call(this, e);
        if (!t) return null;
        var i = this._siteDataApi.document.getFullStructureProperty(t, "connectionQuery");
        if (!i) return null;
        var s = O.connections,
            n = D.call(this, t),
            o = this._pointers.data.getItem(s, i.replace("#", ""), n),
            a = this._displayedDal.get(o);
        return this._siteData.resolveData(a, n, k[s]).items
    }

    function D(e) {
        return this._pointers.full.components.getPageOfComponent(e).id
    }

    function R() {
        var t = this._siteData.getAllPossiblyRenderedRoots(); {
            if (!this._pointersCache.isEmpty()) {
                var s = this._pointersCache.getAllCompIds(this._siteData.getViewMode(), t),
                    n = !1;
                if (!e.isEqual(t, this._roots)) {
                    var a = e.get(this._siteData, B).keys(),
                        r = e(a).difference(s).map(o).value(),
                        c = e.map(r, function(t) {
                            return e.drop(t, 2)
                        }),
                        p = e.get(this._siteData, e.take(e.head(r), 2));
                    e.isEmpty(c) || (i.removeAllByPaths(p, c), n = !0)
                }
                return this._roots = t, n
            }
            this._roots = t
        }
    }

    function b(e) {
        return this._pointersCache.getCompPointer(e, this._siteData.getViewMode(), this._siteData.getAllPossiblyRenderedRoots())
    }
    var w = ["height", "width"],
        O = t.constants.DATA_TYPES,
        k = t.constants.PAGE_DATA_DATA_TYPES,
        N = {
            data: "dataChange",
            props: "propsChange",
            design: "designChange"
        },
        B = ["runtime", "components"];
    return e.assign(y.prototype, {
        registerChangeListener: function(e) {
            this._changeListeners.push(e)
        },
        getCompStructure: function(e) {
            var t = b.call(this, e);
            return t && this._displayedDal.get(t)
        },
        setCompState: function(t, s) {
            var n = this.getCompState(t),
                o = a(t),
                r = S(this._siteData, o),
                c = A(o);
            if (i.setByPath(r, c, e.assign({}, n, s)), !m(n, s)) {
                var p = {
                    type: "stateChange",
                    value: this.getCompState(t)
                };
                E.call(this, t, p)
            }
            return ++this.snapshotId
        },
        removeCompState: function(e) {
            var t = a(e),
                s = S(this._siteData, t),
                n = A(t);
            i.removeByPath(s, n)
        },
        getCompState: function(e) {
            return _(this._siteData, a(e))
        },
        getCompType: function(e) {
            var t = b.call(this, e);
            return this._siteDataApi.document.getFullStructureProperty(t, "componentType")
        },
        getCompLayout: function(e) {
            _(this._siteData, d(e));
            var t = b.call(this, e);
            if (t) {
                var i = this._pointers.getInnerPointer(t, "layout");
                return this._displayedDal.get(i)
            }
        },
        updateCompLayout: function(t, i) {
            var s = this.getCompLayout(t),
                n = d(t),
                o = _(this._siteData, n, {}),
                a = e.assign({}, o, i);
            if (this._runtimeToDisplayed.updateCompLayout(t, a), P(this._siteData, n, a), !m(s, i)) {
                var r = {
                    type: "layoutChange",
                    value: i
                };
                E.call(this, t, r)
            }
            return ++this.snapshotId
        },
        getCompDesign: function(e) {
            _(this._siteData, l(e));
            var t = T.call(this, e, O.design);
            return t && C.call(this, t, O.design)
        },
        setCompDesign: function(e, t) {
            return I.call(this, t, e, l(e), O.design)
        },
        getCompData: function(e) {
            _(this._siteData, p(e));
            var t = T.call(this, e, O.data);
            return t && C.call(this, t, O.data)
        },
        getCompFullData: function(e) {
            var t = T.call(this, e, O.data, !0);
            return t && C.call(this, t, O.data)
        },
        setCompData: function(e, t) {
            return I.call(this, t, e, p(e), O.data)
        },
        getCompConnections: function(e) {
            return M.call(this, e) || []
        },
        getCompProps: function(e) {
            _(this._siteData, c(e));
            var t = T.call(this, e, O.prop);
            return t && C.call(this, t, O.prop)
        },
        setCompProps: function(e, t) {
            return I.call(this, t, e, c(e), O.prop)
        },
        getActionsAndBehaviors: function(e) {
            _(this._siteData, u(e));
            var t = T.call(this, e, O.behaviors),
                i = t && C.call(this, t, O.behaviors);
            return i && i.items || []
        },
        addActionsAndBehaviors: function(e, t) {
            var i = u(e),
                s = _(this._siteData, i, []).concat(t);
            return this._runtimeToDisplayed.updateActionsAndBehaviorsItems(e, s), P(this._siteData, i, s), ++this.snapshotId
        },
        removeActionsAndBehaviors: function(t, i) {
            var s = u(t),
                n = _(this._siteData, s, []);
            return e.remove(n, i), this._runtimeToDisplayed.updateActionsAndBehaviorsItems(t, n), P(this._siteData, s, n), ++this.snapshotId
        },
        getCompName: function(t) {
            var i = this.getCompConnections(t),
                s = "WixCodeConnectionItem" === e.get(i, [0, "type"]) && i[0];
            return s ? s.role : t
        },
        getBoundingClientRect: function(t) {
            var i = this._siteData.measureMap;
            return i ? e.transform(w, function(e, s) {
                e[s] = i[s][t]
            }, {}) : e.pick(this.getCompLayout(t), w)
        },
        getPageId: function(e) {
            var t = b.call(this, e);
            return t ? D.call(this, t) : null
        },
        getParentId: function(e) {
            var t = b.call(this, e),
                i = t && this._pointers.full.components.getParent(t);
            return i && i.id
        },
        isDisplayed: function(e) {
            var t = b.call(this, e);
            return !!t && this._displayedDal.isExist(t)
        },
        hasBeenPopupOpened: function(e) {
            return _(this._siteData, g(e), !1)
        },
        markPopupAsBeenOpened: function(e) {
            var t = g(e);
            P(this._siteData, t, !0)
        },
        getDynamicPageData: function() {
            return this._siteData.getDynamicPageData()
        },
        setPopupContext: function(e, t) {
            var i = f(e);
            P(this._siteData, i, t)
        },
        getPopupContext: function(e) {
            return _(this._siteData, f(e))
        }
    }), {
        createRuntimeDal: function(e, t, i, s) {
            var n = new y(e, t, i, s);
            return {
                runtimeDal: n,
                resetRuntime: v.bind(n),
                runtimeToDisplayed: n._runtimeToDisplayed,
                getAllCompsData: function() {
                    return _(n._siteData, B, {})
                },
                resetNonDisplayedPages: R.bind(n)
            }
        }
    }
}), define("core/core/data/apiSections/OriginalValuesAPI", ["lodash", "utils"], function(e, t) {
    function i(e) {
        this.privatesKey = e, s.set(e, {
            siteData: e
        })
    }
    var s = new t.SiteDataPrivates;
    return i.prototype = {
        createPageOriginalValuesMap: function(i, n) {
            var o = s.get(this.privatesKey).siteData,
                a = o.getPageData(i).structure,
                r = o.getAllTheme(),
                c = n ? t.constants.VIEW_MODES.MOBILE : o.getViewMode(),
                p = c === t.constants.VIEW_MODES.MOBILE,
                l = t.originalValuesMapGenerator.createOriginalValuesMap(a, r, p);
            e.set(o, ["originalValuesMap", a.id, c], l)
        },
        removePageOriginalValues: function(i, n) {
            var o = s.get(this.privatesKey).siteData,
                a = o.getPageData(i).structure,
                r = n ? t.constants.VIEW_MODES.MOBILE : o.getViewMode();
            e.set(o, ["originalValuesMap", a.id, r], {})
        }
    }, i
}), define("core/core/data/ActionQueue", ["lodash", "mobx"], function(e, t) {
    function i() {
        this.queue = [], this.duringFlushQueue = [], this.isDuringFlush = !1
    }

    function s(i, s, o) {
        i.then(function(i) {
            t.action(function() {
                var t = e.slice(s, o + 1);
                n(i ? e.concat(i, t) : t)
            })()
        })
    }

    function n(t) {
        e.forEach(t, function(t, i, n) {
            var o = t();
            if (e.get(o, "then")) return s(o, n, i), !1
        })
    }

    function o(e) {
        t.action(function() {
            try {
                n(e)
            } catch (e) {
                return
            }
        })()
    }
    return i.prototype.addItem = function(e) {
        this.queue.push(e)
    }, i.prototype.flush = function() {
        if (this.isDuringFlush) e.isEmpty(this.queue) || (this.duringFlushQueue = this.queue);
        else {
            this.isDuringFlush = !0;
            var t = this.queue;
            this.queue = [], o(t), this.isDuringFlush = !1, e.isEmpty(this.duringFlushQueue) || (o(this.duringFlushQueue), this.duringFlushQueue = [])
        }
    }, i
}), define("core/core/data/apiSections/ModesApplicationAPI", ["utils", "lodash", "coreUtils"], function(e, t, i) {
    function s(e, t, i) {
        var s = n(e),
            o = e.pointers.components.getPage(i, s);
        return e.pointers.components.getComponent(t, o)
    }

    function n(e) {
        return e.siteData.isMobileView() ? r.VIEW_MODES.MOBILE : r.VIEW_MODES.DESKTOP
    }

    function o(e, t, i, s, n) {
        this.privatesKey = e, c.set(e, {
            siteData: e,
            createDisplayedPage: t,
            createDisplayedNode: i,
            pointers: s,
            displayedDal: n
        })
    }

    function a(e, s, n, o, a) {
        var r = e.pointers.componentStructure.getModesDefinitions(n),
            c = e.displayedDal.get(r),
            p = a && t.find(c, {
                modeId: a
            }),
            l = o && t.find(c, {
                modeId: o
            }),
            d = t.filter(c, {
                type: i.siteConstants.COMP_MODES_TYPES.SCROLL
            }),
            u = t.filter(c, {
                type: i.siteConstants.COMP_MODES_TYPES.WIDTH
            }),
            h = t.find(c, {
                type: i.siteConstants.COMP_MODES_TYPES.DEFAULT
            }),
            g = t.find(c, {
                type: i.siteConstants.COMP_MODES_TYPES.HOVER
            });
        e.siteData.activeModes[s] = e.siteData.activeModes[s] || {};
        var f = e.siteData.activeModes[s];
        if (p) switch (f[a] = !0, p.type) {
            case i.siteConstants.COMP_MODES_TYPES.SCROLL:
                t.forEach(d, function(e) {
                    e.modeId !== p.modeId && (f[e.modeId] = !1)
                });
                break;
            case i.siteConstants.COMP_MODES_TYPES.WIDTH:
                t.forEach(u, function(e) {
                    e.modeId !== p.modeId && (f[e.modeId] = !1)
                });
                break;
            case i.siteConstants.COMP_MODES_TYPES.DEFAULT:
                f[g.modeId] = !1;
                break;
            case i.siteConstants.COMP_MODES_TYPES.HOVER:
                h && (f[h.modeId] = !1)
        }
        if (l) switch (f[o] = !1, l.type) {
            case i.siteConstants.COMP_MODES_TYPES.SCROLL:
                p && p.type === i.siteConstants.COMP_MODES_TYPES.SCROLL || (f[t.head(d).modeId] = !0);
                break;
            case i.siteConstants.COMP_MODES_TYPES.WIDTH:
                p && p.type === i.siteConstants.COMP_MODES_TYPES.WIDTH || (f[t.head(u).modeId] = !0);
                break;
            case i.siteConstants.COMP_MODES_TYPES.DEFAULT:
                f[g.modeId] = !0;
                break;
            case i.siteConstants.COMP_MODES_TYPES.HOVER:
                h && (f[h.modeId] = !0)
        }
    }
    var r = e.constants,
        c = new e.SiteDataPrivates;
    return o.prototype = {
        resetAllActiveModes: function() {
            var e = c.get(this.privatesKey),
                i = t.keys(e.siteData.activeModes);
            t.forEach(i, function(i) {
                t.isEmpty(e.siteData.activeModes[i]) || (e.siteData.activeModes[i] = {}, e.createDisplayedPage(i))
            })
        },
        deactivateModesInPage: function(e) {
            var i = c.get(this.privatesKey),
                s = this.getActiveModes()[e];
            return !t.isEmpty(s) && (i.siteData.activeModes[e] = {}, i.createDisplayedPage(e))
        },
        getActiveModes: function() {
            var e = c.get(this.privatesKey);
            return t.reduce(e.siteData.activeModes, function(e, i, s) {
                var n = t.omitBy(i, function(e) {
                    return !e
                });
                return t.isEmpty(n) || (e[s] = n), e
            }, {})
        },
        getPageActiveModes: function(e) {
            var i = c.get(this.privatesKey);
            return t.omitBy(i.siteData.activeModes[e], function(e) {
                return !e
            })
        },
        activateModeById: function(e, t, i) {
            var n = s(c.get(this.privatesKey), e, t);
            return this.activateMode(n, i)
        },
        activateMode: function(e, t) {
            var i = c.get(this.privatesKey),
                s = i.pointers.full.components.getPageOfComponent(e);
            if (s && s.id) {
                var n = this.getActiveModes()[s.id];
                return (!n || !n[t]) && (i.siteData.activeModes[s.id] = i.siteData.activeModes[s.id] || {}, a(i, s.id, e, null, t), i.createDisplayedNode(e), !0)
            }
            return !1
        },
        deactivateModeById: function(e, t, i) {
            var n = s(c.get(this.privatesKey), e, t);
            return this.deactivateMode(n, i)
        },
        deactivateMode: function(e, t) {
            var i = c.get(this.privatesKey),
                s = i.pointers.full.components.getPageOfComponent(e);
            if (s && s.id) {
                var n = this.getActiveModes()[s.id];
                return !(!n || !n[t]) && (i.siteData.activeModes[s.id] = i.siteData.activeModes[s.id] || {}, a(i, s.id, e, t), i.createDisplayedNode(e), !0)
            }
            return !1
        },
        switchModesByIds: function(e, t, i, n) {
            var o = s(c.get(this.privatesKey), e, t);
            return this.switchModes(o, i, n)
        },
        switchModes: function(e, t, i) {
            var s = c.get(this.privatesKey);
            if (t === i) return !1;
            var n = s.pointers.full.components.getPageOfComponent(e);
            s.siteData.activeModes[n.id] = s.siteData.activeModes[n.id] || {};
            var o = this.getActiveModes()[n.id],
                r = !1;
            return o[i] && !o[t] || (r = !0), r && (a(s, n.id, e, t, i), s.createDisplayedNode(e)), r
        }
    }, o
}), define("core/core/SiteDataAPI", ["utils", "coreUtils", "lodash", "core/core/dataRequirementsChecker", "core/core/data/ViewerDisplayedJsonUpdater", "core/core/data/apiSections/documentDataAPI", "core/core/data/RuntimeDal", "core/core/data/apiSections/AnchorsDataAPI", "core/core/data/apiSections/OriginalValuesAPI", "core/core/data/ActionQueue", "core/core/data/apiSections/ModesApplicationAPI"], function(e, t, i, s, n, o, a, r, c, p, l) {
    function d(e, s) {
        var n = {
                pagesData: e.pagesData
            },
            o = new t.pointers.PointersCache(e, e, n),
            a = u(e, g(e, o), o, n, s);
        return T.set(e, a), i.forEach(e.getAllPossiblyRenderedRoots(), function(e) {
            a.siteDataAPI.createDisplayedPage(e)
        }), i.clone(a)
    }

    function u(e, t, s, n, o) {
        var a = {};
        return a.fileChangeCallback = i.noop, a.displayedDal = t.dal, a.pointers = t.pointers, a.cache = s, a.displayedJsonUpdater = h(t, n, s), a.fullPagesData = n, a.siteData = e, a.siteData.pagesData = i.clone(n.pagesData), a.siteDataAPI = new E(a, o), a
    }

    function h(e, t, i) {
        var s = i.getBoundCacheInstance(!0),
            o = e.dal,
            a = e.pointers;
        return new n(t, o, s, a)
    }

    function g(e, i) {
        return {
            dal: new t.DisplayedJsonDal(e, i.getBoundCacheInstance(!1)),
            pointers: new t.pointers.DataAccessPointers(i)
        }
    }

    function f(e, t, n, o, a, r, c) {
        if (i.size(t.failedRequests) && t.isInSSR()) a(r);
        else {
            c && a(r);
            var p = s.getNeededRequests(t, n, o),
                l = i.filter(p, function(e) {
                    return "pagesData" === i.head(e.destination) && 2 === e.destination.length
                });
            r = (r = r || []).concat(i.map(l, "destination[1]")), 0 !== p.length || c ? e.loadBatch(p, f.bind(void 0, e, t, n, o, a, r)) : (t.wixBiSession["dataLoaded" + M++] = i.now(), a(r))
        }
    }

    function m(e, t, s, n) {
        v.call(this, e, t, s, n), "pagesData" !== i.head(s) && e.dataLoadedCallback && e.dataLoadedCallback(s, n)
    }

    function y(e, t) {
        "masterPage" === e || t.siteData.pagesData.masterPage ? "masterPage" === e ? (this.createDisplayedPage(e), i.forEach(this.pagesPendingForMasterPage, this.createDisplayedPage.bind(this)), this.pagesPendingForMasterPage = []) : this.createDisplayedPage(e) : this.pagesPendingForMasterPage.push(e)
    }

    function v(e, t, s, n) {
        if (S(s)) {
            i.set(t, s, n);
            var o = s[1];
            y.call(this, o, e)
        } else A(s) ? i.set(e.siteData, s, n) : e.displayedDal.setByPath(s, n)
    }

    function S(e) {
        return "pagesData" === i.head(e) && i.size(e) > 1
    }

    function A(e) {
        var t = e[0];
        return !!C[t]
    }

    function _(e) {
        var t = T.get(this.siteData).pointers.components.getPageOfComponent(e);
        i.forEach(this._displayedJsonUpdateCallbacks, function(i) {
            i(t.id, e.id)
        })
    }

    function P(t, s) {
        if (s) {
            var n = t.fullPagesData.pagesData[s],
                o = t.siteData.activeModes,
                a = t.siteData.isMobileView(),
                r = i.clone(o[s]),
                c = e.modes.resolveCompActiveModesRecursive(n.structure, r, a, n.data.component_properties);
            return t.siteData.activeModes[s] = c, !i.isEqual(r, c)
        }
    }

    function I(e) {
        var t = e.fullPagesData,
            s = e.displayedDal,
            n = e.siteData;
        return function(e) {
            return S(e) ? i.get(t, e) : A(e) ? i.get(n, e) : s.getByPath(e)
        }
    }

    function E(t, s) {
        t.dataLoadedCallback = null, this.siteData = t.siteData, this.store = new e.Store(I(t), s), this.store.registerDataLoadedCallback(i.bind(m, this, t, t.fullPagesData)), this.siteData.setStore(this.store), this._displayedJsonUpdateCallbacks = [], this.pagesPendingForMasterPage = [], this.actionQueue = new p, this.document = o(t);
        var n = a.createRuntimeDal(t.siteData, this, t.displayedDal, t.pointers);
        t.runtimeToDisplayed = n.runtimeToDisplayed, t.resetRuntimeData = n.resetRuntime, t.resetRuntimeNonDisplayedPages = n.resetNonDisplayedPages, t.getRuntimeCompsData = n.getAllCompsData, this.runtime = n.runtimeDal, this.anchors = new r(this.siteData), this.originalValues = new c(this.siteData), this.modes = new l(this.siteData, this.createDisplayedPage.bind(this), this.createDisplayedNode.bind(this), t.pointers, t.displayedDal)
    }
    var T = new e.SiteDataPrivates,
        C = i.keyBy(["wixapps"]),
        M = 0;
    return E.prototype = {
        registerDataLoadedCallback: function(e) {
            T.get(this.siteData).dataLoadedCallback = e
        },
        registerFileChangeCallback: function(e) {
            T.get(this.siteData).fileChangeCallback = e
        },
        notifyFileChanged: function() {
            T.get(this.siteData).fileChangeCallback()
        },
        refreshRenderedRootsData: function(e) {
            var t = T.get(this.siteData),
                i = this.siteData.getFocusedRootId(),
                s = this.siteData.getExistingRootNavigationInfo(i);
            f(this.store, t.siteData, t.fullPagesData, s, e)
        },
        registerDisplayedJsonUpdateCallback: function(e) {
            this._displayedJsonUpdateCallbacks.push(e)
        },
        loadPage: function(e, t) {
            function s(e) {
                if (n.dataLoadedCallback) {
                    var t = n.fullPagesData.pagesData[e];
                    n.dataLoadedCallback(["pagesData", e], t)
                }
            }
            var n = T.get(this.siteData);
            f(this.store, n.siteData, n.fullPagesData, e, function(n) {
                e.pageId && !i.includes(n, e.pageId) && this.createDisplayedPage(e.pageId), i.forEach(n, s.bind(this)), t()
            }.bind(this), [])
        },
        unloadNonVisiblePage: function(e) {
            var t = T.get(this.siteData).resetRuntimeNonDisplayedPages(),
                i = this.modes.deactivateModesInPage(e);
            return !i && t && (this.createDisplayedPage("masterPage"), i || this.createDisplayedPage(e)), i || t
        },
        createDisplayedPage: function(e) {
            var t = T.get(this.siteData),
                i = this.siteData.activeModes,
                s = t.fullPagesData.pagesData[e];
            if (!s) return !1;
            P(t, e);
            var n = t.displayedJsonUpdater.updateDisplayedRoot(i, s, e);
            return this.anchors.createPageAnchors(n.structure.id), t.runtimeToDisplayed.updateAll(t.getRuntimeCompsData()), !0
        },
        createDisplayedNode: function(e) {
            var t = T.get(this.siteData),
                i = t.pointers.components.getPageOfComponent(e),
                s = t.fullPagesData.pagesData[i.id].structure;
            P(t, i.id), t.displayedJsonUpdater.updateDisplayedJsonByPointer(e, this.siteData.activeModes), this.anchors.createPageAnchors(s.id), t.cache.resetValidations(), t.runtimeToDisplayed.updateAll(t.getRuntimeCompsData()), _.call(this, e)
        },
        resetRuntimeData: function() {
            T.get(this.siteData).resetRuntimeData();
            var e = this.siteData.getAllPossiblyRenderedRoots();
            i.forEach(e, this.createDisplayedPage.bind(this)), this.siteData.clearCache(), this.siteData.observableUpdateIndex++
        },
        getActionQueue: function() {
            return this.actionQueue
        },
        setRenderRealtimeConfigItem: function(e, t) {
            var i = T.get(this.siteData),
                s = i.pointers.general.getRenderRealtimeConfigItem(e);
            return i.displayedDal.set(s, t)
        }
    }, {
        createSiteDataAPIAndDal: d
    }
}), define("core/components/util/galleryPagingCalculations", ["lodash", "coreUtils"], function(e, t) {
    var i = t.matrix.calculations;
    return {
        getNumberOfDisplayedRows: function(e, t, s, n) {
            return e || n && n < t * s ? t : i.getAvailableRowsNumber(t, s, n)
        },
        getItemsPerPage: function(e, t, i) {
            return e * this.getNumberOfDisplayedRows(null, t, e, i)
        },
        getTotalPageCount: function(e, t, i) {
            var s = this.getItemsPerPage(e, t, i),
                n = Math.floor(i / s);
            return i % s > 0 && n++, n
        },
        getNextPageItemIndex: function(e, t, i, s) {
            var n = e + this.getItemsPerPage(t, i, s);
            return n >= s && (n = 0), n
        },
        getPrevPageItemIndex: function(e, t, i, s) {
            var n = this.getItemsPerPage(t, i, s),
                o = e - n;
            return o < 0 && (o = (this.getTotalPageCount(t, i, s) - 1) * n), o
        },
        getCounterText: function(e, t, i, s) {
            var n = Math.floor(e / this.getItemsPerPage(t, i, s)),
                o = this.getTotalPageCount(t, i, s);
            return o || (o = 1), String(n + 1) + "/" + String(o)
        },
        getPageItems: function(e, t, i, s) {
            return this.getPageItemsByStartIndex(e, t, this.getItemsPerPage(i, s, e.length))
        },
        getPageItemsByStartIndex: function(e, t, i) {
            var s = [];
            if (i < e.length) {
                for (var n = this.getLastItemIndex(e, t, i), o = t; o <= n; o++) s.push(e[o]);
                return s
            }
            return e
        },
        getLastItemIndex: function(e, t, i) {
            return Math.min(e.length - 1, t + i - 1)
        }
    }
}), define("core/components/util/boxSlideShowCommon", ["lodash"], function(e) {
    function t(e) {
        return e.componentType
    }

    function i(e) {
        return e.props.structure.componentType
    }
    var s = "wysiwyg.viewer.components.BoxSlideShowSlide",
        n = "wysiwyg.viewer.components.StripContainerSlideShowSlide";
    return {
        getNextSlideIndex: function(e, t) {
            var i = t + 1;
            return i >= e.length && (i = 0), i
        },
        getPrevSlideIndex: function(e, t) {
            var i = t - 1;
            return i < 0 && (i = e.length - 1), i
        },
        getSlidesFromChildrenByStructure: function(i) {
            return e.filter(i, function(e) {
                return t(e) === s || t(e) === n
            })
        },
        getSlidesFromChildrenByProps: function(t) {
            return e.filter(t, function(e) {
                return i(e) === s || i(e) === n
            })
        },
        getShownOnAllSlidesFromChildrenByStructure: function(i) {
            return e.reject(i, function(e) {
                return t(e) === s || t(e) === n
            })
        },
        getShownOnAllSlidesFromChildrenByProps: function(t) {
            return e.reject(t, function(e) {
                return i(e) === s || i(e) === n
            })
        },
        isBoxOrStripSlideShowComponent: function(e) {
            return "wysiwyg.viewer.components.BoxSlideShow" === e || "wysiwyg.viewer.components.StripContainerSlideShow" === e
        },
        isBoxOrStripSlideShowSlideComponent: function(e) {
            return e === s || e === n
        },
        getMatchingChildSlideType: function(e) {
            if (!this.isBoxOrStripSlideShowComponent(e)) throw new Error("invalid comp type, not a box or strip slide show component");
            return "wysiwyg.viewer.components.BoxSlideShow" === e ? s : n
        }
    }
}), define("core/components/mediaZoomWrapperMixin", ["react", "lodash", "core/components/skinBasedComp", "santaProps"], function(e, t, i, s) {
    return {
        mixins: [i],
        propTypes: {
            closeFunction: e.PropTypes.func,
            compData: s.Types.Component.compData.isRequired,
            windowKeyboardEvent: s.Types.SiteAspects.windowKeyboardEvent.isRequired,
            windowTouchEvents: s.Types.SiteAspects.windowTouchEvents.isRequired
        },
        componentWillMount: function() {
            var e = this.props.windowKeyboardEvent;
            e.registerToEscapeKey(this), this.props.windowTouchEvents.registerToWindowTouchEvent("touchMove", this);
            var t = this.getPrevAndNextState();
            t.next && e.registerToArrowRightKey(this), t.prev && e.registerToArrowLeftKey(this)
        },
        getSkinProperties: function() {
            var e = this.getChildZoomComponentType(),
                i = "wysiwyg.viewer.components.MobileMediaZoom" === e,
                s = this.getChildZoomExtraProps();
            return {
                "": {
                    children: this.createChildComponent(this.props.compData, e, "mediaZoom", t.assign({
                        ref: this.props.compData.id,
                        actualNavigateToItemFunc: this.actualNavigateToItem,
                        getBoxDimensionsFunc: this.getBoxDimensions,
                        getChildCompFunc: this.getChildComp,
                        getPrevAndNextStateFunc: this.getPrevAndNextState,
                        isDataChangedFunc: this.isDataChanged,
                        closeFunction: this.props.closeFunction,
                        enableInnerScrolling: this.enableInnerScrolling || !1
                    }, s || {})),
                    style: {
                        width: "100%",
                        height: "100%",
                        position: i ? "static" : "absolute"
                    }
                }
            }
        },
        closeMediaZoom: function() {
            this.refs[this.props.compData.id].closeMediaZoom()
        },
        onEscapeKey: function() {
            this.closeMediaZoom()
        },
        onArrowLeftKey: function() {
            this.refs[this.props.compData.id].clickOnPreviousButton()
        },
        onArrowRightKey: function() {
            this.refs[this.props.compData.id].clickOnNextButton()
        },
        onWindowTouchMove: function(e) {
            this.enableInnerScrolling || (e.preventDefault(), e.stopPropagation())
        }
    }
}), define("core/components/galleryImageExpandedActionMixin", ["lodash", "react", "siteUtils", "loggingUtils", "santaProps"], function(e, t, i, s, n) {
    function o(e, t) {
        return {
            item: e,
            timeStamp: s.performance.now(),
            imageIndex: t,
            name: "imageExpanded"
        }
    }
    return {
        propTypes: {
            compData: n.Types.Component.compData.isRequired,
            id: n.Types.Component.id.isRequired,
            pageId: n.Types.Component.pageId.isRequired,
            handleAction: n.Types.Behaviors.handleAction.isRequired,
            galleryCompId: t.PropTypes.string,
            imageIndex: t.PropTypes.number
        },
        handleImageExpandedAction: function() {
            var t = this.props.pageId,
                s = e.get(this.props, "compData"),
                n = e.get(this.props, "imageIndex"),
                a = this.props.galleryCompId;
            if (a) {
                var r = this.props.handleAction,
                    c = [{
                        name: i.constants.ACTION_TYPES.ITEM_CLICKED,
                        pageId: t,
                        sourceId: a,
                        type: "comp"
                    }, {
                        name: i.constants.ACTION_TYPES.IMAGE_EXPANDED,
                        pageId: t,
                        sourceId: a,
                        type: "comp"
                    }, {
                        name: i.constants.ACTION_TYPES.IMAGE_CHANGED,
                        pageId: t,
                        sourceId: a,
                        type: "comp"
                    }];
                e.forEach(c, function(e) {
                    r(e, o(s, n))
                })
            }
        }
    }
}), define("core/components/util/matrixAnimationManipulation", ["lodash"], function(e) {
    var t = {
        getDefultAnimationValues: function(e, t, i, s) {
            return {
                sourceNodesArrSorted: [e],
                destNodesArrSorted: [t],
                stagger: 0,
                timingFunctionIndex: i,
                transName: s,
                sporadicallyRandom: !1
            }
        },
        getUpdatedTimingFunctionIndex: function(e, t) {
            return t > e.length - 1 && (t = 0), t
        },
        getCrossFadePossibleTransitionByName: function(e) {
            switch (e) {
                case "crossFadeHorizWave":
                    return this.sortMatrixByRows;
                case "crossFadeVertWave":
                    return this.sortMatrixByCols;
                case "seq_crossFade_Diagonal":
                    return this.convertMatrixToDiagonal
            }
        },
        convertArrayToMatrix: function(t, i, s) {
            var n = 0,
                o = new Array(i);
            return e.times(i, function(i) {
                o[i] || (o[i] = []), e.times(s, function(e) {
                    n < t.length ? (o[i][e] = t[n], n++) : o[i][e] = -1
                })
            }), o
        },
        sortMatrixByRows: function(e) {
            return [e]
        },
        sortMatrixByCols: function(t, i, s) {
            var n = this.convertArrayToMatrix(t, i, s),
                o = [],
                a = 0;
            return e.times(s, function(t) {
                e.times(i, function(e) {
                    -1 !== n[e][t] && (o[a] = n[e][t], a++)
                })
            }), [o]
        },
        reverseMatrix: function(e) {
            return e.reverse()
        },
        convertMatrixToDiagonal: function(t, i, s) {
            var n = this.convertArrayToMatrix(t, i, s),
                o = [],
                a = 0;
            return e.times(i + s, function(t) {
                var r = Math.max(0, t - i),
                    c = Math.min(s - r, t, i);
                e.times(c, function(e) {
                    var s = n[Math.min(i, t) - e - 1][r + e]; - 1 !== s && (o[a] = s, a++)
                })
            }), [o]
        },
        convertMatrixToReverseDiagonal: function(e, t, i) {
            var s = this.convertMatrixToDiagonal(e, t, i);
            return this.reverseMatrix(s)
        },
        getMatrixByRows: function(t, i, s) {
            var n = 0,
                o = new Array(i);
            return e.times(i, function(i) {
                o[i] || (o[i] = []), e.times(s, function(e) {
                    n < t.length && (o[i][e] = t[n], n++)
                })
            }), o
        },
        getMatrixByRowsReverse: function(e, t, i) {
            var s = this.getMatrixByRows(e, t, i);
            return this.reverseMatrix(s)
        },
        getMatrixByColsReverse: function(e, t, i) {
            var s = this.getMatrixByCols(e, t, i);
            return this.reverseMatrix(s)
        },
        getMatrixByCols: function(t, i, s) {
            var n = this.getMatrixByRows(t, i, s),
                o = new Array(s);
            return e.times(s, function(t) {
                o[t] || (o[t] = []), e.times(i, function(e) {
                    n[e][t] && (o[t][e] = n[e][t])
                })
            }), o
        }
    };
    return {
        getSortedArrayAndStagger: function(e, i, s, n, o, a) {
            switch (e) {
                case "none":
                    return {
                        sourceNodesArrSorted: [i],
                        destNodesArrSorted: [s],
                        stagger: 0,
                        transName: "NoTransition"
                    };
                case "seq_shrink_All":
                case "seq_crossFade_All":
                    var r = [t.sortMatrixByRows, t.sortMatrixByCols, t.reverseMatrix, t.convertMatrixToDiagonal, t.convertMatrixToReverseDiagonal, t.sortMatrixByRows],
                        c = r[a = t.getUpdatedTimingFunctionIndex(r, a)];
                    return {
                        sourceNodesArrSorted: c.call(t, i, n, o),
                        destNodesArrSorted: c.call(t, s, n, o),
                        stagger: a === r.length - 1 || i.length !== s.length ? 0 : .1,
                        timingFunctionIndex: a,
                        transName: "seq_shrink_All" === e ? "Shrink" : "CrossFade"
                    };
                case "swipe_horiz_All":
                    var p = [t.getMatrixByRows, t.getMatrixByRowsReverse],
                        l = p[a = t.getUpdatedTimingFunctionIndex(p, a)];
                    return {
                        sourceNodesArrSorted: l.call(t, i, n, o),
                        destNodesArrSorted: l.call(t, s, n, o),
                        stagger: .1,
                        timingFunctionIndex: a,
                        transName: "SlideHorizontal",
                        sporadicallyRandom: n > 1
                    };
                case "swipe_vert_All":
                    var d = [t.getMatrixByCols, t.getMatrixByColsReverse],
                        u = d[a = t.getUpdatedTimingFunctionIndex(d, a)];
                    return {
                        sourceNodesArrSorted: u.call(t, i, n, o),
                        destNodesArrSorted: u.call(t, s, n, o),
                        stagger: .1,
                        timingFunctionIndex: a,
                        transName: "SlideVertical",
                        sporadicallyRandom: o > 1
                    };
                case "seq_random":
                    var h = ["seq_shrink_All", "seq_crossFade_All", "swipe_horiz_All", "swipe_vert_All"],
                        g = h[Math.floor(Math.random() * h.length)];
                    return this.getSortedArrayAndStagger(g, i, s, n, o, a);
                case "horizSwipeAllAtOnce":
                    return t.getDefultAnimationValues(i, s, a, "SlideHorizontal");
                case "vertSwipeAllAtOnce":
                    return t.getDefultAnimationValues(i, s, a, "SlideVertical");
                case "crossFadeAllAtOnce":
                    return t.getDefultAnimationValues(i, s, a, "CrossFade");
                case "crossFadeHorizWave":
                case "crossFadeVertWave":
                case "seq_crossFade_Diagonal":
                    var f = t.getCrossFadePossibleTransitionByName(e);
                    return {
                        sourceNodesArrSorted: f.call(t, i, n, o),
                        destNodesArrSorted: f.call(t, s, n, o),
                        stagger: .1,
                        timingFunctionIndex: a,
                        transName: "CrossFade"
                    };
                case "seq_swipe_alternate":
                    var m = [t.getMatrixByRows, t.getMatrixByCols];
                    return a = t.getUpdatedTimingFunctionIndex(m, a), {
                        sourceNodesArrSorted: i,
                        destNodesArrSorted: s,
                        stagger: .1,
                        timingFunctionIndex: a,
                        transName: 0 === a ? "SlideHorizontal" : "SlideVertical"
                    }
            }
        }
    }
}), define("core/components/uniquePageIdMixin", ["lodash", "santaProps", "utils"], function(e, t, i) {
    function s(t) {
        return e.some(t.data.document_data, {
            appPartName: i.blogAppPartNames.SINGLE_POST
        })
    }
    var n = t.Types;
    return {
        propTypes: {
            rootId: n.Component.rootId.isRequired,
            externalBaseUrl: n.PublicModel.externalBaseUrl.isRequired,
            rootPageData: t.Types.rootPageData.isRequired,
            getPageUrl: n.getPageUrl.isRequired,
            getUniquePageId: n.getUniquePageId.isRequired
        },
        getUniquePageId: function() {
            if ("masterPage" === this.props.rootId) return this.props.externalBaseUrl;
            var e = this.props.rootId;
            return s(this.props.rootPageData) ? this.props.getUniquePageId(e) : this.props.getPageUrl()
        }
    }
}), define("core/activities/activity", ["utils"], function(e) {
    var t = function(e) {
            return e.currentUrl.full
        },
        i = function() {
            return e.guidUtils.getUniqueId()
        },
        s = function(e, t) {
            this._activityInfo = e, this._fields = t
        };
    return s.prototype = {
        getParams: function() {
            return {
                hs: this._activityInfo.hubSecurityToken,
                "activity-id": i(),
                "metasite-id": this._activityInfo.metaSiteId,
                svSession: this._activityInfo.svSession,
                version: "1.0.0"
            }
        },
        getPayload: function() {
            return {
                activityDetails: {
                    additionalInfoUrl: null,
                    summary: ""
                },
                activityInfo: "activityInfo",
                activityLocationUrl: t(this._activityInfo),
                activityType: "activityType",
                contactUpdate: {},
                createdAt: (new Date).toISOString()
            }
        }
    }, s
}), define("core/activities/tpaActivity", ["lodash", "core/activities/activity"], function(e, t) {
    var i = function(e, i) {
        t.call(this, e, i)
    };
    return i.prototype = new t, i.prototype.getParams = function(i) {
        var s = t.prototype.getParams.call(this, i),
            n = {
                "application-id": this._fields.appDefinitionId,
                instance: this._fields.instance
            };
        return n = e.assign(s, n)
    }, i.prototype.getPayload = function(i) {
        var s = t.prototype.getPayload.call(this, i),
            n = {
                contactUpdate: this._fields.contactUpdate,
                activityInfo: this._fields.info,
                activityType: this._fields.type,
                activityDetails: this._fields.details
            };
        return n = e.assign(s, n)
    }, i
}), define("core/activities/contactFormActivity", ["lodash", "core/activities/activity", "experiment"], function(e, t, i) {
    var s = function(t) {
            var i = "";
            return i += t.subject ? "<strong>" + t.subject + "</strong>" : "", t.message && (i += t.subject ? "<br>" : "", i += t.message), {
                additionalInfoUrl: null,
                summary: e.isEmpty(i) ? "No message was received" : i
            }
        },
        n = {
            name: {
                first: "",
                last: ""
            },
            emails: [{
                tag: "main",
                email: ""
            }],
            phones: [{
                tag: "main",
                phone: ""
            }],
            addresses: [{
                tag: "main",
                address: ""
            }]
        };
    Object.freeze(n);
    var o = {
            name: "name",
            email: "emails",
            phone: "phones",
            address: "addresses"
        },
        a = function(t, i) {
            return e(t).keys().map(function(e) {
                return {
                    name: i[e],
                    value: t[e]
                }
            }).value()
        },
        r = function(e, t) {
            if (i.isOpen("contactFormActivity")) return {
                subject: e.subject,
                content: {
                    message: e.message,
                    media: []
                },
                additionalFields: a(e, t)
            };
            var s = {
                fields: []
            };
            return Object.keys(e).forEach(function(t) {
                s.fields.push({
                    name: t,
                    value: e[t]
                })
            }), s
        },
        c = function(t) {
            var i = e.omitBy(t, function(e) {
                    return !e
                }),
                s = e.map(i, function(e, t) {
                    return o[t]
                }),
                a = e.pick(n, s);
            return l(a, i), p(a, i), e.forEach(i, function(t, i) {
                var s = a[o[i]];
                e.isArray(s) && (e.head(s)[i] = t)
            }), a
        },
        p = function(e, t) {
            t.phone || (t.phone = ""), t.phone = t.phone.substring(0, 29)
        },
        l = function(e, t) {
            t.name || (t.name = "");
            var i = t.name.split(" ");
            e.name && (e.name.first = i[0], e.name.last = i[1])
        },
        d = function(e, i, s) {
            t.call(this, e, i), this._fieldLabels = s
        };
    return d.prototype = new t, d.prototype.getParams = function(i) {
        var s = t.prototype.getParams.call(this, i),
            n = {
                "component-name": "ContactForm"
            };
        return n = e.assign(s, n)
    }, d.prototype.getPayload = function(n) {
        var o = t.prototype.getPayload.call(this, n),
            a = {
                contactUpdate: c(this._fields),
                activityInfo: r(this._fields, this._fieldLabels),
                activityDetails: s(this._fields),
                activityType: i.isOpen("contactFormActivity") ? "form/contact-form" : "contact/contact-form"
            };
        return a = e.assign(o, a)
    }, d
}), define("core/activities/dynamicContactFormActivity", ["lodash", "core/activities/activity"], function(e, t) {
    function i(e, t) {
        var i = e.filter(function(e) {
            return e.name === t
        });
        return i.length > 0 ? i[0].value : ""
    }
    var s = function(t) {
            var s = i(t, "subject"),
                n = i(t, "message"),
                o = "";
            return o += s ? "<strong>" + s + "</strong>" : "", n && (o += s ? "<br>" : "", o += n), {
                additionalInfoUrl: null,
                summary: e.isEmpty(o) ? "No message was received" : o
            }
        },
        n = function(t) {
            var i = {};
            return i.fields = e.cloneDeep(t), i
        },
        o = function(e) {
            function t(t) {
                return e.filter(function(e) {
                    return e.name === t
                })
            }
            var i;
            return i = [{
                type: "email",
                contactField: "emails"
            }, {
                type: "phone",
                contactField: "phones"
            }, {
                type: "address",
                contactField: "addresses"
            }].map(function(e) {
                return e.fields = t(e.type), e
            }).reduce(function(e, t) {
                return e[t.contactField] = t.fields.reduce(function(e, i) {
                    if (i.value) {
                        var s = {
                            tag: i.label
                        };
                        s[t.type] = "phone" === i.name ? a(i.value) : i.value, e.push(s)
                    }
                    return e
                }, []), e
            }, {}), i.name = r(e), i
        },
        a = function(e) {
            return e.substring(0, 29)
        },
        r = function(t) {
            var i = e.filter(t, {
                name: "name"
            });
            if (i.length > 0) {
                var s = i[0].value;
                return s ? s.indexOf(" ") > 0 ? {
                    first: s.substr(0, s.indexOf(" ")),
                    last: s.substr(s.indexOf(" ") + 1)
                } : {
                    first: s
                } : ""
            }
            return ""
        },
        c = function(e, i) {
            t.call(this, e, i)
        };
    return c.prototype = new t, c.prototype.getParams = function(i) {
        var s = t.prototype.getParams.call(this, i),
            n = {
                "component-name": "ContactForm"
            };
        return n = e.assign(s, n)
    }, c.prototype.getPayload = function(i) {
        var a = t.prototype.getPayload.call(this, i),
            r = {
                contactUpdate: o(this._fields),
                activityInfo: n(this._fields),
                activityDetails: s(this._fields),
                activityType: "contact/contact-form"
            };
        return r = e.assign(a, r)
    }, c
}), define("core/activities/subscribeFormActivity", ["lodash", "core/activities/activity"], function(e, t) {
    var i = function(t) {
            var i = {
                fields: []
            };
            return Object.keys(t).forEach(function(e) {
                i.fields.push({
                    name: e,
                    value: t[e]
                })
            }), i.email = t.email, (t.first || t.last) && (i.name = e.pickBy({
                first: t.first,
                last: t.last
            })), t.phone && (i.phone = t.phone), i
        },
        s = function(e) {
            return {
                name: {
                    first: e.first || "",
                    last: e.last || ""
                },
                emails: [{
                    tag: "main",
                    email: e.email || ""
                }],
                phones: e.phone ? [{
                    tag: "main",
                    phone: e.phone || ""
                }] : [],
                emailSubscriptionPolicy: "RECURRING"
            }
        },
        n = function(e, i) {
            t.call(this, e, i)
        };
    return n.prototype = new t, n.prototype.getParams = function(i) {
        var s = t.prototype.getParams.call(this, i),
            n = {
                "component-name": "subscribeForm"
            };
        return n = e.assign(s, n)
    }, n.prototype.getPayload = function(n) {
        var o = t.prototype.getPayload.call(this, n),
            a = {
                contactUpdate: s(this._fields),
                activityInfo: i(this._fields),
                activityType: "contact/subscription-form"
            };
        return a = e.assign(o, a)
    }, n
}), define("core/activities/activityTypes", ["core/activities/tpaActivity", "core/activities/contactFormActivity", "core/activities/dynamicContactFormActivity", "core/activities/subscribeFormActivity"], function(e, t, i, s) {
    return {
        TPAActivity: e,
        ContactFormActivity: t,
        DynamicContactFormActivity: i,
        SubscribeFormActivity: s
    }
}), define("core/activities/activityService", ["utils"], function(e) {
    function t(t, o, a) {
        var r = "?" + i.toQueryString(t.getParams()),
            c = e.urlUtils.origin() + n + r;
        s.ajax({
            type: "POST",
            url: c,
            data: t.getPayload(),
            dataType: "json",
            contentType: "application/json",
            success: o,
            error: a
        })
    }
    var i = e.urlUtils,
        s = e.ajaxLibrary,
        n = "/_api/app-integration-bus-web/v1/activities";
    return {
        reportActivity: t
    }
}), define("core/components/transitionGroup", ["lodash", "react"], function(e, t) {
    function i(e) {
        var i = {},
            s = 0;
        return t.Children.forEach(e, function(e) {
            i[e.key || "" + s++] = e
        }), i
    }
    return t.createClass({
        displayName: "ReactTransitionGroup",
        propTypes: {
            component: t.PropTypes.any,
            childFactory: t.PropTypes.func
        },
        getDefaultProps: function() {
            return {
                component: "span",
                childFactory: e.identity
            }
        },
        getInitialState: function() {
            return {
                children: i(this.props.children)
            }
        },
        componentWillMount: function() {
            this.currentlyTransitioningKeys = {}, this.keysToEnter = [], this.keysToLeave = []
        },
        componentDidMount: function() {
            var e = this.state.children;
            for (var t in e) e[t] && this.performAppear(t)
        },
        componentWillReceiveProps: function(t) {
            var s = i(t.children),
                n = this.state.children;
            this.setState({
                children: e.assign({}, n, s)
            });
            var o;
            for (o in s) !s[o] || n && n.hasOwnProperty(o) || this.currentlyTransitioningKeys[o] || this.keysToEnter.push(o);
            for (o in n) !n[o] || s && s.hasOwnProperty(o) || this.currentlyTransitioningKeys[o] || this.keysToLeave.push(o)
        },
        componentDidUpdate: function() {
            var e = this.keysToEnter;
            this.keysToEnter = [], e.forEach(this.performEnter);
            var t = this.keysToLeave;
            this.keysToLeave = [], t.forEach(this.performLeave)
        },
        performAppear: function(e) {
            this.currentlyTransitioningKeys[e] = !0;
            var t = this.refs[e];
            t.componentWillAppear ? t.componentWillAppear(this._handleDoneAppearing.bind(this, e)) : this._handleDoneAppearing(e)
        },
        _handleDoneAppearing: function(e) {
            var t = this.refs[e];
            t.componentDidAppear && t.componentDidAppear(), delete this.currentlyTransitioningKeys[e];
            var s = i(this.props.children);
            s && s.hasOwnProperty(e) || this.performLeave(e)
        },
        performEnter: function(e) {
            this.currentlyTransitioningKeys[e] = !0;
            var t = this.refs[e];
            t.componentWillEnter ? t.componentWillEnter(this._handleDoneEntering.bind(this, e)) : this._handleDoneEntering(e)
        },
        _handleDoneEntering: function(e) {
            var t = this.refs[e];
            t.componentDidEnter && t.componentDidEnter(), delete this.currentlyTransitioningKeys[e];
            var s = i(this.props.children);
            s && s.hasOwnProperty(e) || this.performLeave(e)
        },
        performLeave: function(e) {
            this.currentlyTransitioningKeys[e] = !0;
            var t = this.refs[e];
            t.componentWillLeave ? t.componentWillLeave(this._handleDoneLeaving.bind(this, e)) : this._handleDoneLeaving(e)
        },
        _handleDoneLeaving: function(t) {
            var s = this.refs[t];
            s.componentDidLeave && s.componentDidLeave(), delete this.currentlyTransitioningKeys[t];
            var n = i(this.props.children);
            n && n.hasOwnProperty(t) ? this.performEnter(t) : this.setState(function(i) {
                var s = e.assign({}, i.children);
                return delete s[t], {
                    children: s
                }
            })
        },
        render: function() {
            var e = [];
            for (var i in this.state.children)
                if (this.state.children[i]) {
                    var s = this.state.children[i];
                    e.push(t.cloneElement(this.props.childFactory(s), {
                        ref: i,
                        key: i
                    }))
                }
            return t.createElement(this.props.component, this.props, e)
        }
    })
}), define("core/components/wixTransitionItem", ["lodash", "react", "core/components/animatableMixin"], function(e, t, i) {
    return t.createClass({
        displayName: "wixTransitionItem",
        mixins: [i],
        render: function() {
            return this.props.children
        },
        componentWillEnter: function(e) {
            this.props.onWillEnter(this.props.refInParent, e)
        },
        componentWillLeave: function(e) {
            this.props.onWillLeave(this.props.refInParent, e)
        }
    })
}), define("core/components/wixTransitionGroup", ["lodash", "react", "reactDOM", "zepto", "core/components/transitionGroup", "core/components/wixTransitionItem", "core/components/animationsMixin"], function(e, t, i, s, n, o, a) {
    function r(t, n) {
        e(t).map(i.findDOMNode).map(s).forEach(function(e) {
            e.attr("data-leaving", !!n || null)
        })
    }
    var c = t.createFactory(n);
    return t.createClass({
        displayName: "wixTransitionGroup",
        mixins: [a],
        getDefaultProps: function() {
            return {
                transition: "CrossFade",
                transitionDuration: 2,
                reverse: !1,
                transitionCallback: e.noop
            }
        },
        getInitialState: function() {
            return this.leavingChildren = {}, this.enteringChildren = {}, {}
        },
        render: function() {
            return c(e.assign({
                childFactory: this.childWrapper,
                component: "div",
                ref: "group"
            }, e.omit(this.props, "transition")))
        },
        childWrapper: function(e) {
            return t.createElement(o, {
                onWillEnter: this.onWillEnter,
                onWillLeave: this.onWillLeave,
                refInParent: e.props.refInParent,
                ref: e.props.refInParent,
                key: e.props.refInParent
            }, e)
        },
        getInnerRefs: function(t) {
            return e.map(t, function(e) {
                return this.refs.group.refs[e]
            }.bind(this))
        },
        flush: function() {
            if (!e.isEmpty(this.enteringChildren) && e.size(this.leavingChildren) === e.size(this.enteringChildren)) {
                var t = this.getInnerRefs(e.keys(this.leavingChildren)),
                    i = this.getInnerRefs(e.keys(this.enteringChildren));
                r(t, !0), r(i, !1);
                var s = e.values(this.enteringChildren).concat(e.values(this.leavingChildren));
                this.leavingChildren = {}, this.enteringChildren = {};
                var n = e.isFunction(this.props.getTransitionParams) ? this.props.getTransitionParams() : {};
                this.transition(t, i, this.props.transition, this.props.transitionDuration, 0, e.assign({
                    reverse: this.props.reverse
                }, n), {
                    onComplete: function() {
                        this.props.transitionCallback(function() {
                            e.forEach(s, function(e) {
                                e()
                            })
                        })
                    }.bind(this)
                })
            }
        },
        onWillEnter: function(e, t) {
            this.enteringChildren[e] = t, this.flush()
        },
        onWillLeave: function(e, t) {
            this.leavingChildren[e] = t, this.flush()
        }
    })
}), define("core/components/behaviorHandlers/behaviorHandlersFactory", ["lodash", "utils"], function(e, t) {
    function i(i) {
        return e.has(a, i) ? a[i] : (t.log.warn("there is no behavior handler for type " + i), c)
    }

    function s(e, t) {
        a[e] = t
    }

    function n(e, t) {
        r[e] = t
    }

    function o(t) {
        return r[t] || e.identity
    }
    var a = {},
        r = {};
    t.sessionFreezer.freeze(a), t.sessionFreezer.freeze(r);
    var c = {
        handle: e.noop
    };
    return {
        getHandler: i,
        registerHandler: s,
        registerBehaviorPreprocessor: n,
        getBehaviorPreprocessor: o
    }
}), define("core/components/siteAspects/behaviorsService", ["core/components/behaviorHandlers/behaviorHandlersFactory"], function(e) {
    function t(t, i, s, n) {
        s = s || {}, e.getHandler(n).handle(i, t, s)
    }
    return {
        handleBehaviors: t
    }
}), define("core/components/fullScreenOverlay/fullScreenOverlay", ["lodash", "react"], function(e, t) {
    return t.createClass({
        displayName: "fullScreenOverlay",
        propTypes: {
            siteWidth: t.PropTypes.number.isRequired,
            siteScrollingBlocker: t.PropTypes.object.isRequired,
            forceBackground: t.PropTypes.func.isRequired,
            disableForcedBackground: t.PropTypes.func.isRequired,
            isMobileDevice: t.PropTypes.bool.isRequired,
            overlayBackgroundOpacity: t.PropTypes.string
        },
        statics: {
            createOverlay: function(i, s) {
                var n = t.createFactory(this);
                return i[""] = e.assign({}, i[""], {
                    wrap: [n, s]
                }), i
            }
        },
        getOverlayBackground: function() {
            return "rgba(0, 0, 0, " + (this.props.overlayBackgroundOpacity || 1) + ")"
        },
        componentDidMount: function() {
            this.props.siteScrollingBlocker.setSiteScrollingBlocked(this, !0), this.props.isMobileDevice && this.props.forceBackground(this.getOverlayBackground())
        },
        componentWillUnmount: function() {
            this.props.siteScrollingBlocker.setSiteScrollingBlocked(this, !1), this.props.isMobileDevice && this.props.disableForcedBackground()
        },
        render: function() {
            return t.createElement("div", null, t.createElement("div", {
                className: "fullScreenOverlay",
                key: "fullScreenOverlay"
            }, t.createElement("div", {
                className: "fullScreenOverlayContent",
                style: {
                    width: this.props.siteWidth,
                    background: this.getOverlayBackground()
                },
                key: "fullScreenOverlayContent"
            }, this.props.children)))
        }
    })
}), define("core/components/compStateMixin", ["lodash", "santaProps"], function(e, t) {
    function i(e) {
        var t = {
            props: this.props.compProp,
            data: this.props.compData
        };
        return e.call(this, this.state, t)
    }

    function s(e) {
        return {
            statics: {
                publicState: e
            },
            propTypes: {
                setCompState: t.Types.DAL.setCompState.isRequired,
                removeCompState: t.Types.DAL.removeCompState.isRequired,
                id: t.Types.Component.id.isRequired
            },
            componentWillUnmount: function() {
                this.props.removeCompState(this.props.id)
            },
            componentDidMount: function() {
                this.props.setCompState(this.props.id, i.call(this, e))
            },
            componentDidUpdate: function() {
                this.props.setCompState(this.props.id, i.call(this, e))
            }
        }
    }
    return s
}), define("core/components/siteAspects/animationsService", [], function() {
    function e(e) {
        return e.getSiteAspect("animationsAspect")
    }

    function t(t, i, s, n, o) {
        var a = e(t);
        return a ? a.playAnimations(i, s, n, o) : o && o()
    }

    function i(t, i) {
        var s = e(t);
        s && s.hideElementsByAnimationType(i)
    }

    function s(t, i) {
        var s = e(t);
        s && s.revertHideElementsByAnimations(i)
    }

    function n(t, i, s) {
        var n = e(t);
        n && n.stopAndClearAnimations(i, s)
    }
    return {
        playAnimations: t,
        hideElementsByAnimationType: i,
        revertHideElementsByAnimations: s,
        stopAndClearAnimations: n
    }
}), define("core/components/siteAspects/BehaviorsAspect", ["lodash", "core/components/behaviorHandlers/behaviorHandlersFactory", "core/components/siteAspects/behaviorsService"], function(e, t, i) {
    function s(i) {
        var s = t.getHandler(i.type);
        return s.getUniqueIdentifier ? s.getUniqueIdentifier(i) : e(i).at(y).map(function(t) {
            return e.isPlainObject(t) ? e.values(t) : t
        }).join()
    }

    function n(t) {
        return e.at(t, m).join(",")
    }

    function o(e) {
        return e.type + ":" + e.sourceId
    }

    function a(t, i, s, n) {
        var o = e(t).map(s).keyBy(n).value(),
            a = e.keys(o),
            r = e.keys(i),
            c = e.intersection(a, r);
        return {
            map: o,
            added: e.difference(a, c),
            removed: e.difference(r, c)
        }
    }

    function r(i, o) {
        var r = a(i, this._registeredBehaviors[o] || {}, "behavior", s);
        this._behaviorsAdded[o] = r.added.concat(this._behaviorsAdded[o] || []), this._behaviorsRemoved[o] = r.removed.concat(this._behaviorsRemoved[o] || []), e(this._registeredBehaviors[o]).pick(r.removed).forEach(function(i) {
            var s = t.getHandler(i.type);
            e.has(s, "cancelPreCondition") && s.cancelPreCondition(i, this._aspectSiteAPI)
        }.bind(this)), this._registeredBehaviors[o] = r.map;
        var c = a(i, this._registeredActions[o] || {}, "action", n);
        this._actionsRemoved[o] = this._actionsRemoved[o] || {}, e.assign(this._actionsRemoved[o], e.pick(this._registeredActions[o], c.removed)), this._registeredActions[o] = c.map, this._actionsAdded[o] = c.added.concat(this._actionsAdded[o] || []), this._actionsToBehaviorsMap[o] = e(i).groupBy(function(e) {
            return n(e.action)
        }).mapValues(function(t) {
            return e(t).map("behavior").map(s).value()
        }).value(), this._behaviorsToActionsMap[o] = e(i).groupBy(function(e) {
            return s(e.behavior)
        }).mapValues(function(t) {
            return e(t).map("action").map(n).value()
        }).value()
    }

    function c(t, i, s) {
        var n = e(t).pick(i).map(function(t, i) {
            return !0 === s ? t : e.pick(t, s[i])
        }).values().value();
        return e.assign.apply(e, [{}].concat(n))
    }

    function p(e) {
        return this._aspectSiteAPI.getSiteAspect("actionsAspect").needToRunPreConditions(e)
    }

    function l(t, i) {
        return e.filter(t, function(e) {
            var t = s(e);
            return (!e.playOnce || !i[t]) && (i[t] = !0, !0)
        })
    }

    function d(t, i, s) {
        return e(i).chain().pick(t).map(function(t) {
            return e.flatten(e.values(t))
        }).find(function(t) {
            return e(t).map("behavior").some(s)
        }).find(function(t) {
            return e.isEqual(t.behavior, s)
        }).get("action").value()
    }

    function u(s, n, o) {
        var a = this._aspectSiteAPI.getSiteAPI(),
            r = a.getAllRenderedRootIds(),
            c = e.map(s, function(e) {
                var i = d(r, this._rawBehaviorsForActions, e);
                return t.getBehaviorPreprocessor(o)(e, i, a)
            }.bind(this));
        i.handleBehaviors(a, c, n, o)
    }

    function h(t) {
        return e(t).map("action").groupBy(o).value()
    }

    function g(i, s, n) {
        var o = i.getSiteAspect("actionsAspect");
        return e(s).reject(function(e) {
            return o.isActionDisabled(e.action.name)
        }).filter(function(s) {
            var n = t.getHandler(e.get(s, "behavior.type", "animation"));
            return e.isUndefined(n.isEnabled) || n.isEnabled(s.behavior, i.getSiteAPI())
        }).map(function(t) {
            return e.defaultsDeep(t, {
                behavior: {
                    type: "animation",
                    pageId: n
                },
                action: {
                    pageId: n
                }
            })
        }).value()
    }

    function f(t) {
        this._aspectSiteAPI = t, this._registeredActions = {}, this._registeredBehaviors = {}, this._ranOnce = {}, this._rawBehaviorsForActions = {}, this._behaviorsAdded = {}, this._behaviorsRemoved = {}, this._actionsAdded = {}, this._actionsRemoved = {}, this._actionsToBehaviorsMap = {}, this._behaviorsToActionsMap = {}, this._behaviorsWaitingToFlush = {}, e.set(t.getSiteData(), v, {}), e.bindAll(this, ["handleActions", "handleAction", "setBehaviorsForActions", "getActions", "getCompActions", "convertBehaviors", "_handleDidLayout", "_handleRootsChanged", "_handleRootsAddedDidLayout", "resetBehaviorsRegistration", "registerBehavior", "extractBehaviors", "handleBehavior"]), this._aspectSiteAPI.registerToDidLayout(this._handleDidLayout), this._aspectSiteAPI.registerToAddedRenderedRootsDidLayout(this._handleRootsAddedDidLayout), this._aspectSiteAPI.registerToRenderedRootsChange(this._handleRootsChanged)
    }
    var m = ["sourceId", "type", "name"],
        y = ["targetId", "type", "name", "part"],
        v = ["behaviors", "registeredActionsByTypeSource"];
    return f.prototype = {
        handleActions: function(t, i) {
            e.forEach(this._actionsToBehaviorsMap, function(s, o) {
                e(s).pick(e.map(t, n)).values().flatten().map(e.get.bind(e, this._registeredBehaviors[o])).groupBy("type").forEach(function(s, n) {
                    s = l(s, this._ranOnce), i = e.defaults({}, i, {
                        action: "action"
                    }), t = t || [{
                        name: "action"
                    }], i.action = t[0].name, u.call(this, s, i, n)
                }.bind(this))
            }.bind(this))
        },
        handleAction: function(e, t) {
            this.handleActions([e], t)
        },
        setBehaviorsForActions: function(t, i, s) {
            var n = g(this._aspectSiteAPI, t, i);
            e.set(this._aspectSiteAPI.getSiteData(), v.concat([i, s]), h(t)), e.set(this._rawBehaviorsForActions, [i, s], n)
        },
        getActions: function(t, i) {
            var s = e.get(this._aspectSiteAPI.getSiteData(), v, {});
            return e(s).map(i).flatMap(t + ":" + i).compact().uniq().mapKeys(function(e) {
                return e.name
            }).value()
        },
        getCompActions: function(t, i, s, n) {
            var o = h(g(this._aspectSiteAPI, n, s));
            return e(e.get(o, [t + ":" + i])).compact().uniq().mapKeys(function(e) {
                return e.name
            }).value()
        },
        convertBehaviors: function(t, i) {
            return e.map(t, function(t) {
                if (t.behavior && t.action) return t;
                var s = {
                        name: t.action,
                        sourceId: t.sourceId || i,
                        type: "comp"
                    },
                    n = e.omit(t, ["action", "sourceId", "pageId", "duration", "delay"]);
                return n.targetId = n.targetId || i, e.assign(n.params, e.pick(t, ["duration", "delay"])), {
                    action: s,
                    behavior: n
                }
            })
        },
        _handleDidLayout: function() {
            var i = this._aspectSiteAPI.getAllRenderedRootIds();
            e.forEach(i, function(t) {
                var i = e.flatten(e.values(this._rawBehaviorsForActions[t])),
                    s = this._aspectSiteAPI.getSiteData().measureMap.top;
                i = e.filter(i, function(t) {
                    var i = t.action.sourceId,
                        n = t.action.type,
                        o = t.behavior.type,
                        a = t.behavior.targetId,
                        r = "comp" !== n || e.isNumber(s[i]),
                        c = "widget" === o || "site" === o || e.isNumber(s[a]);
                    return r && c
                }), r.call(this, i, t)
            }.bind(this));
            var s = c(this._registeredActions, i, this._actionsAdded),
                n = e(this._actionsRemoved).pick(i).values().reduce(e.assign, {}),
                o = e(this._registeredActions).pick(i).values().reduce(e.assign, {}),
                a = c(this._registeredBehaviors, i, this._behaviorsAdded);
            e.forEach(a, function(s, n) {
                var a = e(this._behaviorsToActionsMap).pick(i).values().map(n).compact().flatten().map(e.get.bind(e, o)).every(p.bind(this));
                if ((!s.playOnce || !this._ranOnce[n]) && a) {
                    var r = t.getHandler(s.type);
                    e.has(r, "handlePreCondition") && r.handlePreCondition(s, this._aspectSiteAPI)
                }
            }.bind(this)), e.forEach(i, function(e) {
                this._actionsAdded[e] = [], this._actionsRemoved[e] = {}, this._behaviorsAdded[e] = [], this._behaviorsRemoved[e] = []
            }.bind(this)), e.isEmpty(n) || this._aspectSiteAPI.getSiteAspect("actionsAspect").actionsRemoved(n), e.isEmpty(s) || this._aspectSiteAPI.getSiteAspect("actionsAspect").actionsAddedLayouted(s)
        },
        _handleRootsChanged: function(t, i) {
            var s = c(this._registeredActions, i, !0);
            e.forEach(i, function(t) {
                this._rawBehaviorsForActions[t] = [], this._registeredActions[t] = {}, this._registeredBehaviors[t] = {}, this._behaviorsAdded[t] = [], this._behaviorsRemoved[t] = [], this._actionsAdded[t] = [], this._actionsRemoved[t] = {}, this._actionsToBehaviorsMap[t] = {}, this._behaviorsToActionsMap[t] = {}, e.set(this._aspectSiteAPI.getSiteData(), v.concat(t), {})
            }.bind(this)), this._aspectSiteAPI.getSiteAspect("actionsAspect").actionsRemoved(s)
        },
        _handleRootsAddedDidLayout: function() {},
        resetBehaviorsRegistration: function() {
            this._ranOnce = {}
        },
        registerBehavior: function(t, i) {
            var s = e.get(this._behaviorsWaitingToFlush, t.targetId, []);
            e.set(this._behaviorsWaitingToFlush, [t.targetId, s.length], {
                name: t.name,
                params: t.params,
                callback: i
            })
        },
        extractBehaviors: function(e) {
            return this._behaviorsWaitingToFlush[e] || []
        },
        clearBehaviorsAfterFlush: function(e) {
            delete this._behaviorsWaitingToFlush[e]
        },
        handleBehavior: function(e, t) {
            u.call(this, [e], t, e.type)
        }
    }, f
}), define("core/components/siteAspects/animationsAspect", ["lodash", "reactDOM"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this.animationsPackage = this._siteData.animations, this._liveSequenceIdsByGroup = {}
    }

    function s(t) {
        for (var i = t.targetId || t.sourceId; e.isArray(i);) i = i[0];
        return this._aspectSiteAPI.getRootOfComponentId(i) || t.pageId
    }

    function n(i, n) {
        e.forEach(i, function(e) {
            var i = this.animationsPackage.getProperties(e.name);
            if (i && i.hideOnStart) {
                var o = s.call(this, e),
                    a = this._aspectSiteAPI.getComponentByPageAndCompId(o, e.targetId || e.sourceId),
                    r = a ? t.findDOMNode(a) : null;
                r && (r.style.visibility = n)
            }
        }.bind(this))
    }
    return i.prototype.previewAnimation = function(e, t, i, s) {
        var n, o, a;
        if (n = this._aspectSiteAPI.getPageById(t)) return o = n.sequence(), a = {
            props: "clip,opacity,transform,transform-origin",
            immediateRender: !1
        }, o.add(e, i.name, i.duration, i.delay, i.params), o.add(e, "BaseClear", 0, 0, a), s && o.onCompleteAll(s), o.execute()
    }, i.prototype.addAnimationToSequence = function(e, t, i) {
        var n, o = t[s.call(this, e)];
        return o.add(e.targetId, e.name, e.params.duration, e.params.delay, e.params, 0), i && (n = "clip,opacity,transform", o.add(e.targetId, "BaseClear", 0, 0, {
            props: n,
            immediateRender: !1
        })), e.targetId
    }, i.prototype.playAnimations = function(t, i, n, o) {
        var a = {},
            r = {},
            c = [];
        e.forEach(i, function(t) {
            var i = s.call(this, t),
                o = this._aspectSiteAPI.getPageById(i),
                c = this._aspectSiteAPI.getPageComponents(i),
                p = t.targetId || t.sourceId;
            e.isString(p) && !c[p] || (r[i] || (r[i] = o.sequence(), a[i] = []), this.addAnimationToSequence(t, r, n), a[i].push(p))
        }.bind(this));
        var p = 1,
            l = function(i) {
                p--, this._liveSequenceIdsByGroup[t] = e.reject(this._liveSequenceIdsByGroup[t], {
                    sequenceId: i
                }), 0 === p && o()
            }.bind(this);
        return e.forEach(r, function(t, i) {
            t.hasAnimations() && (p++, t.onCompleteAll(l.bind(this, t.getId())), a[i] = e.compact(a[i]), c.push({
                parentId: i,
                sequenceId: t.getId()
            }), t.execute())
        }.bind(this)), l(), this._liveSequenceIdsByGroup[t] = this._liveSequenceIdsByGroup[t].concat(c), a
    }, i.prototype.hideElementsByAnimationType = function(e) {
        n.call(this, e, "hidden")
    }, i.prototype.revertHideElementsByAnimations = function(e) {
        n.call(this, e, "")
    }, i.prototype.previewTransition = function(e, t, i, s, n) {
        var o;
        if (o = "masterPage" === i ? this._aspectSiteAPI.getMasterPage() : this._aspectSiteAPI.getCurrentPage()) {
            var a = o.sequence(),
                r = {
                    props: "clip,opacity,transform,transform-origin",
                    immediateRender: !1
                };
            return a.add({
                sourceRefs: e,
                destRefs: t
            }, s.name, s.duration, s.delay, s.params), a.add(e.concat(t), "BaseClear", 0, 0, r), n && a.onCompleteAll(n), a.execute()
        }
    }, i.prototype.stopPreviewAnimation = function(t) {
        var i = this._aspectSiteAPI.getAllRenderedRoots();
        e.forEach(i, function(e) {
            e.stopSequence(t, 1)
        })
    }, i.prototype.stopAndClearAllAnimations = function() {
        e(this._liveSequenceIdsByGroup).keys().forEach(this.stopAndClearAnimations.bind(this))
    }, i.prototype.stopAndClearAnimations = function(t, i) {
        e.forEach(this._liveSequenceIdsByGroup[t], function(e) {
            var t = this._aspectSiteAPI.getPageById(e.parentId);
            t && t.stopSequence(e.sequenceId, i)
        }.bind(this)), this._liveSequenceIdsByGroup[t] = []
    }, i
}), define("core/components/designDataChangeHandlers/designDataChangeBgBehaviorsHandler", ["lodash", "utils"], function(e, t) {
    function i(e, t) {
        return e.getComponentById(t).refs.balata
    }

    function s(i, s, n, o) {
        var a = {
            name: s.name,
            type: s.type,
            targetId: [
                [i, t.balataConsts.BALATA, s.part]
            ],
            params: e.clone(s.params) || {}
        };
        return e.isEmpty(n) || e.assign(a.params, n, e.pick(o, e.keys(n))), a
    }

    function n(t, i) {
        var s = e(i).map("part").uniq().value(),
            n = e.transform(i, function(t, i) {
                var s = e.get(d, [i.name, "defaults", "params"]);
                t[i.part] = e.assign({}, t[i.part], s)
            }, {});
        return e.transform(s, function(i, s) {
            var o = e.get(t, ["background", l[s]]);
            i[s] = e.merge({}, n[s], e.pick(o, e.keys(n[s])))
        }, {})
    }

    function o(e, t) {
        e.getSiteAspect("animationsAspect").stopAndClearAnimations(t)
    }

    function a(t, i, n, o) {
        var a = t.getSiteAspect("behaviorsAspect");
        e.forEach(o, function(t) {
            var o = e.get(n, ["background", l[t.part]], {}),
                r = e.get(d, [t.name, "defaults", "params"]);
            a.handleBehavior(s(i, t, r, o), {
                group: i
            })
        })
    }

    function r(t, i) {
        var s = [];
        return e.forEach(e.filter(t.dataChangeBehaviors, {
            trigger: "out"
        }), function(e) {
            s.push(e)
        }), e.forEach(e.filter(i.dataChangeBehaviors, {
            trigger: "in"
        }), function(t) {
            e.find(s, e.pick(t, ["type", "part", "name"])) || s.push(t)
        }), s
    }

    function c(e, t, s, c) {
        var p = i(e, t),
            l = s || {},
            d = r(s, c);
        o(e, t), a(e, t, c, d), p.setState({
            transforms: n(l, d)
        })
    }

    function p(t, i, s, n) {
        e.isEmpty(e.get(s, "dataChangeBehaviors")) && e.isEmpty(e.get(n, "dataChangeBehaviors")) || c(t, i, s, n)
    }
    var l = t.balataConsts,
        d = {
            FadeIn: {
                type: "animation",
                defaults: {
                    params: {}
                }
            },
            FadeOut: {
                type: "animation",
                defaults: {
                    params: {}
                }
            },
            Scale: {
                type: "animation",
                defaults: {
                    params: {
                        scale: 1
                    }
                }
            }
        };
    return Object.freeze(d), {
        handle: p
    }
}), define("core/components/siteAspects/DesignDataChangeAspect", ["lodash", "core/components/designDataChangeHandlers/designDataChangeBgBehaviorsHandler"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._registeredHandlers = {}, this.registerHandler("designDataChangeBgBehaviorsHandler", t.handle)
    }
    return i.prototype = {
        registerHandler: function(e, t) {
            this._registeredHandlers[e] = t
        },
        unregisterHandler: function(t) {
            this._registeredHandlers = e.omit(this._registeredHandlers, t)
        },
        notify: function(e, t, i) {
            this.propagate(e, t, i)
        },
        propagate: function(t, i, s) {
            e.forEach(this._registeredHandlers, function(e) {
                e(this._aspectSiteAPI, t, i, s)
            }.bind(this))
        }
    }, i
}), define("core/components/siteAspects/parentFrameAspect", ["core/core/siteAspectsRegistry", "lodash"], function(e, t) {
    function i() {
        var e = this.aspectSiteApi.getSiteAPI().getSiteData().measureMap,
            i = t.get(e, "height.masterPage", 0);
        if (i && i !== this.storedHeight) {
            this.storedHeight = i;
            var s;
            window.parent.postMessage ? s = window.parent : window.parent.document.postMessage && (s = window.parent.document), s && void 0 !== s && s.postMessage(i, "*")
        }
    }

    function s(e) {
        this.aspectSiteApi = e, this.storedHeight = 0, e.registerToDidLayout(i.bind(this))
    }
    return e.registerSiteAspect("parentFrame", s), s
}), define("core/components/siteAspects/vkPostMessageAspect", ["core/core/siteAspectsRegistry", "lodash"], function(e, t) {
    function i(e) {
        var t;
        try {
            t = JSON.parse(e.data)
        } catch (e) {
            return
        }
        s.call(this, t.id, t)
    }

    function s(e, i) {
        t.forEach(this._registeredCompIds, function(t) {
            if (e === t) {
                var s = this._siteAPI.getComponentById(t);
                if (!s) return void delete this._registeredCompIds[t];
                s.onVKPostMessage && s.onVKPostMessage(i)
            }
        }.bind(this))
    }
    var n = function(e) {
        e.registerToMessage(i.bind(this)), this._siteAPI = e, this._registeredCompIds = {}, t.bindAll(this, ["getData", "registerToPostMessage", "unRegisterToPostMessage"])
    };
    n.prototype = {
        getData: function() {
            return {}
        },
        registerToPostMessage: function(e) {
            this._registeredCompIds[e.props.id] = e.props.id
        },
        unRegisterToPostMessage: function(e) {
            delete this._registeredCompIds[e.props.id]
        }
    }, e.registerSiteAspect("vkPostMessage", n)
}), define("core/core/pageItemRegistry", ["utils"], function(e) {
    var t = {
        Image: function(e, t, i) {
            var s = {
                id: "imageZoomComp",
                key: "imageZoomComp",
                dataQuery: "#" + e.id,
                skin: "wysiwyg.skins.ImageZoomSkin",
                componentType: "wysiwyg.components.imageZoom"
            };
            return t && (s.propertyQuery = t), i.isMobileView() ? (s.skin = "wysiwyg.viewer.skins.TouchMediaZoomSlideshow", s.componentType = "wysiwyg.viewer.components.TouchMediaZoomSlideshow") : (i.isMobileDevice() || i.isTabletDevice()) && (s.skin = "wysiwyg.skins.NonOptimizedImageZoomSkin"), s
        },
        PermaLink: function(e, t, i) {
            var s = {
                id: "appPartZoomComp",
                key: "appPartZoomComp",
                dataQuery: "#" + e.id,
                skin: "wysiwyg.skins.AppPartZoomSkin",
                componentType: "wixapps.integration.components.AppPartZoom"
            };
            return t && (s.propertyQuery = t), i.isMobileView() && (s.skin = "wysiwyg.skins.MobileAppPartZoomSkin"), s
        }
    };
    return {
        registerPageItem: function(i, s) {
            t[i] ? e.log.error("page item already registered " + i) : t[i] = s
        },
        getCompStructure: function(e, i, s, n) {
            return t[e] ? t[e](i, s, n) : null
        },
        clear: function() {
            t = {}
        }
    }
}), define("core/core/pageItemAspect", ["lodash", "core/core/pageItemRegistry", "core/core/siteAspectsRegistry"], function(e, t, i) {
    function s(t) {
        var i = {};
        if (t) {
            var s = t.split(" ");
            return e.forEach(s, function(e) {
                var t = e.split(":");
                t[0] && t[1] && (i[t[0]] = t[1])
            }), e.isEmpty(i) ? t : i
        }
    }

    function n(t) {
        var i = {},
            n = t.getFocusedRootId(),
            o = s(t.getExistingRootNavigationInfo(n).pageItemAdditionalData);
        if (e.isPlainObject(o)) {
            var a = t.getDataByQuery(o.galleryId) || o.galleryId;
            a && (i.pageItemAdditionalData = a), o.galleryCompId && (i.galleryCompId = o.galleryCompId)
        } else i.pageItemAdditionalData = o;
        return i
    }

    function o(i) {
        var n = i.getExistingRootNavigationInfo(i.getFocusedRootId()),
            o = i.getDataByQuery(n.pageItemId);
        if (!o) return null;
        var a = s(n.pageItemAdditionalData),
            r = e.get(a, "propertyQuery"),
            c = t.getCompStructure(o.type, o, r, i);
        return c || null
    }

    function a(e) {
        var t = e.getSiteData(),
            i = o(t);
        return i ? [{
            structure: i,
            pageId: t.getFocusedRootId(),
            props: n(t)
        }] : null
    }

    function r() {}
    r.prototype = {
        getComponentsToRender: a
    }, i.registerSiteAspect("pageItem", r)
}), define("core/core/nonPageItemZoomAspect", ["lodash", "core/core/pageItemRegistry", "core/core/siteAspectsRegistry"], function(e, t, i) {
    function s(t) {
        this._aspectSiteAPI = t, e.bindAll(this, ["zoom", "unzoom"])
    }
    return s.prototype = {
        zoom: function(e, t) {
            if (!e || "Image" !== e.type || !t) throw "nonPageItemZoom should be used only with (imageData, galleryData)";
            this._aspectSiteAPI.setAspectGlobalData("nonPageItemZoom", {
                image: e,
                galleryData: t
            }), this._aspectSiteAPI.forceUpdate()
        },
        unzoom: function() {
            this._aspectSiteAPI.removeAspectGlobalData("nonPageItemZoom"), this._aspectSiteAPI.forceUpdate()
        },
        getComponentsToRender: function(e) {
            var i = e.getAspectGlobalData("nonPageItemZoom");
            if (i) {
                var s = e.getSiteData(),
                    n = t.getCompStructure("Image", i.image, null, s);
                return n.compData = i.image, delete n.dataQuery, [{
                    structure: n,
                    props: {
                        compData: i.image,
                        closeFunction: this.unzoom,
                        pageItemAdditionalData: i.galleryData
                    }
                }]
            }
            return null
        }
    }, i.registerSiteAspect("nonPageItemZoom", s), s
}), define("core/components/siteAspects/externalScriptLoaderAspect/externalScriptRegistry", ["lodash", "utils"], function(e, t) {
    function i(e) {
        var i = {
            en: "en_US",
            es: "es_ES",
            pt: "pt_BR",
            ru: "ru_RU",
            fr: "fr_FR",
            de: "de_DE",
            ja: "ja_JP",
            ko: "ko_KR",
            it: "it_IT",
            pl: "pl_PL",
            tr: "tr_TR",
            nl: "nl_NL",
            sv: "sv_SE",
            da: "da_DK",
            no: "nn_NO"
        };
        return i[t.wixUserApi.getLanguage(e.cookie, e.currentUrl)] || i.en
    }

    function s(e, s) {
        return "FACEBOOK" === e ? {
            NAME: "FacebookSDK",
            SRC: a({
                lang: i(s),
                sdkVersion: n,
                appId: o
            })
        } : "GOOGLE" === e ? {
            NAME: "GoogleApi",
            SRC: "//apis.google.com/js/plusone.js",
            actionBefore: function() {
                window.___gcfg = {
                    lang: t.wixUserApi.getLanguage(s.cookie, s.currentUrl)
                }
            }
        } : void 0
    }
    var n = "v2.4",
        o = "304553036307597",
        a = e.template("//connect.facebook.net/<%= lang %>/sdk.js#xfbml=1&appId=<%= appId %>&version=<%= sdkVersion %>");
    return {
        getScriptDescription: s
    }
}), define("core/components/siteAspects/externalScriptLoaderAspect", ["lodash", "core/core/siteAspectsRegistry", "core/components/siteAspects/externalScriptLoaderAspect/externalScriptRegistry"], function(e, t, i) {
    function s(e) {
        this.siteAPI = e
    }
    var n = "externalScriptLoaderAspect";
    return s.prototype = {
        loadScript: function(t, s, o) {
            var a = e.get(this.siteAPI.getAspectGlobalData(n), [t]),
                r = !a;
            if (r) {
                var c = i.getScriptDescription(t, o);
                if (!c) return;
                a = {
                    script: c,
                    callbacks: []
                }
            }
            s && a.callbacks.push({
                callback: s,
                context: o
            }), r && e.isFunction(a.script.actionBefore) && a.script.actionBefore(), (s || r) && this.siteAPI.updateAspectGlobalData(n, e.fromPairs([
                [t, a]
            ])), r && this.siteAPI.forceUpdate()
        },
        unsubscribe: function(t, i) {
            var s = e.get(this.siteAPI.getAspectGlobalData(n), [t]);
            s && (e.pull(s.callbacks, i), this.siteAPI.updateAspectGlobalData(n, e.fromPairs([
                [t, s]
            ])))
        }
    }, t.registerSiteAspect("externalScriptLoader", s), s
}), define("core/core/SiteMembersAPI", ["utils", "lodash"], function(e, t) {
    function i(e) {
        var i = t.get(e, "sessionToken") || t.get(e, ["smSession", "sessionToken"]) || "";
        return t.get(i.match(/^JWS\.(.+)/), 0)
    }

    function s(e, s, n) {
        if (t.get(n, "errorCode")) s(n.errorCode);
        else {
            var o = i(n.payload);
            o ? a(o, e, s, n.payload) : e(n)
        }
    }

    function n(t, i, s) {
        var n = "?" + e.urlUtils.toQueryString({
            collectionId: p,
            metaSiteId: d
        });
        r({
            type: "POST",
            url: l + f.handleOauthToken + n,
            data: t
        }, i, s)
    }

    function o(e, i, s, n, o, a) {
        var u = t.merge(i || {}, {
            collectionId: p,
            metaSiteId: d
        });
        a && t.merge(u, {
            svSession: a,
            appUrl: c
        }), r({
            type: s,
            url: l + e,
            data: u,
            asForm: !0
        }, n, o)
    }

    function a(e, i, s, n) {
        r({
            type: "POST",
            url: u,
            data: {
                token: e
            },
            asForm: !0
        }, function(e) {
            var s = t.merge({}, e, {
                httpOnlySession: !0,
                payload: n
            });
            i(s)
        }, s)
    }

    function r(t, i, n) {
        e.ajaxLibrary.ajax({
            type: t.type,
            url: t.url,
            data: t.data,
            asForm: t.asForm,
            dataType: "json",
            jsonp: !1,
            success: function(e) {
                s(i, n, e)
            },
            error: n
        })
    }
    var c, p, l, d, u, h, g = {
            POST: "POST",
            GET: "GET"
        },
        f = {
            login: "/api/member/login",
            register: "/api/member/register",
            apply: "/api/member/apply",
            sendForgotPasswordMail: "/api/member/sendForgotPasswordMail",
            resetMemberPassword: "/api/member/changePasswordWithMailToken",
            getMemberDetails: "/api/member",
            handleOauthToken: "/api/social/token/handle",
            verify: "/_api/wix-sm/verify",
            logout: "/_api/wix-sm/logout"
        },
        m = {};
    return m.initializeData = function(e) {
        d = e.getMetaSiteId();
        var t = e.getClientSpecMapEntriesByType("sitemembers")[0];
        p = t && t.smcollectionId, l = e.serviceTopology.siteMembersUrl, u = "//" + e.currentUrl.host + f.verify + "/" + d + "/" + e.siteId, h = "//" + e.currentUrl.host + f.logout + "/" + d, c = e.currentUrl.full
    }, m.login = function(e, t, i, s) {
        o(f.login, e, g.POST, t, i, s)
    }, m.register = function(e, t, i, s) {
        o(f.register, e, g.POST, t, i, s)
    }, m.apply = function(e, t, i, s) {
        o(f.apply, e, g.POST, t, i, s)
    }, m.sendForgotPasswordMail = function(e, t, i) {
        o(f.sendForgotPasswordMail, {
            email: e.email,
            returnUrl: e.homePageUrl,
            lang: e.lang
        }, g.POST, t, i)
    }, m.resetMemberPassword = function(e, t, i) {
        o(f.resetMemberPassword, e, g.POST, t, i)
    }, m.getMemberDetails = function(e, t, i) {
        o(f.getMemberDetails + "/" + e, null, g.GET, t, i)
    }, m.handleOauthToken = function(e, t, i) {
        n(i, e, t)
    }, m.logout = function(e, t) {
        r({
            type: "POST",
            url: h,
            asForm: !0
        }, e, t)
    }, m
}), define("core/util/translations/siteMembersTranslations", [], {
    de: {
        SMResetPass_Reset_Succ: "Sie haben Ihr Passwort erfolgreich zurückgesetzt.",
        SMResetPassMail_confirmation_title: "Bitte prüfen Sie Ihren Posteingang.",
        SMResetPassMail_confirmation_msg: "Wir haben Ihnen eine E-Mail mit einem Link geschickt, mit dem Sie Ihr Passwort zurücksetzen können.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Ihr Passwort wurde geändert.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Sie sind der Besitzer dieser Website und bei Wix.com angemeldet. Bitte melden Sie sich bei Wix.com ab, um die Mitgliederanmeldung zu testen.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Bitte überprüfen Sie Ihren Posteingang",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Beim Abmelden ist etwas schiefgelaufen. Bitte versuchen Sie es noch einmal.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Abmelden nicht erfolgreich",
        SMApply_Success1: "Vielen Dank! Ihre Anfrage zur Mitgliederanmeldung wurde versandt und wartet auf Bestätigung.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Wir haben Ihnen einen Link per E-Mail geschickt, mit dem Sie Ihr Passwort zurücksetzen können.",
        SMApply_Success2: "Der Administrator der Website wird Sie per E-Mail informieren ( {0} ), sobald Ihre Anfrage bestätigt wurde. ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Fortfahren",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Fehler beim Abmelden"
    },
    en: {
        SMApply_Success2: "The site administrator will notify you via email ({0}) once your request has been approved",
        SMApply_Success1: "Success! Your member login request has been sent and is awaiting approval.",
        SMContainer_OK: "OK",
        SMResetPassMail_confirmation_title: "Please check your email",
        SMResetPassMail_confirmation_msg: "We’ve sent you an email with a link that will allow you to reset your password",
        SMResetPass_Reset_Succ: "You’ve successfully reset your password.",
        SMResetPass_Continue: "Continue",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Something went wrong with that logout. Please give it another go.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Logout Unsuccessful",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "You are the owner of this website, and are logged in on Wix.com. Please log out of Wix.com to test the Site Members feature.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Logout failure",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Please Check Your Email",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "We’ve emailed you a link to reset your password.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Your password has been changed."
    },
    es: {
        SMResetPass_Reset_Succ: "¡Has restablecido tu contraseña exitosamente!",
        SMResetPassMail_confirmation_title: "Por favor revisa tu correo",
        SMResetPassMail_confirmation_msg: "Te hemos enviado un email con un enlace que te permitirá restablecer tu contraseña.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Tu contraseña ha cambiado.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Tú eres el dueño de esta página web e iniciaste sesión con Wix.com. Por favor cierra tu sesión en Wix.com para que puedas probar la función Miembros del Sitio.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Por favor revisa tu correo",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Algo falló en el cierre de sesión. Por favor inténtalo de nuevo.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "No se pudo cerrar sesión",
        SMApply_Success1: "¡Enhorabuena! Tu solicitud de login de miembros fue enviada y su aprobación está pendiente.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Te hemos enviado un email con un enlace para restablecer tu contraseña.",
        SMApply_Success2: "El administrador de la página web te notificará a través de un email ({0}) una vez que tu solicitud sea aprobada. ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continuar",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "El cierre de sesión falló"
    },
    fr: {
        SMResetPass_Reset_Succ: "Vous avez réinitialisé votre mot de passe avec succès",
        SMResetPassMail_confirmation_title: "Veuillez consulter votre boîte e-mail",
        SMResetPassMail_confirmation_msg: "Un email avec un lien pour réinitialiser votre mot de passe vous a été envoyé",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Votre mot de passe a été modifié.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Vous êtes le propriétaire de ce site internet et vous êtes connecté à Wix.com. Veuillez vous déconnecter de Wix.com afin de tester la fonctionnalité Membres du Site.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Veuillez vérifier dans votre boîte e-mail",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Un problème est survenu lors de la déconnexion. Veuillez réessayer.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Échec Déconnexion",
        SMApply_Success1: "Bravo ! Votre demande de connexion membre a été envoyée et est actuellement en attente d'approbation.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Nous vous avons envoyé un lien pour réinitialiser votre mot de passe.",
        SMApply_Success2: "L'administrateur du site vous informera par email ({0}) lorsque votre demande aura été approuvée. ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continuer",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Échec déconnexion"
    },
    it: {
        SMResetPass_Reset_Succ: "Hai ripristinato con successo la tua password.",
        SMResetPassMail_confirmation_title: "Ti preghiamo di controllare la tua email",
        SMResetPassMail_confirmation_msg: "Ti abbiamo inviato un'email con un link che ti permetterà di ripristinare la tua password",
        siteMembersTranslations_Reset_Password_Sucess_Title: "La tua password è stata cambiata.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Sei il proprietario di questo sito web e hai effettuato l'accesso a Wix.com. Esci da Wix.com per testare la funzionalità Membri del Sito.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Controlla la tua Mail",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Qualcosa è andato storto durante il logout. Ti preghiamo di riprovare.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Logout Non Riuscito",
        SMApply_Success1: "Successo! La tua richiesta di login membro è stata inviata ed è in attesa di approvazione.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Ti abbiamo inviato una mail con il link per reimpostare la tua password.",
        SMApply_Success2: "L'amministratore del sito ti notificherà via email( {0} ) una volta che la tua richiesta è stata accettata ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continua",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Fallimento Logout"
    },
    ja: {
        SMResetPass_Reset_Succ: "パスワードがリセットされました！",
        SMResetPassMail_confirmation_title: "新着メールをご確認ください",
        SMResetPassMail_confirmation_msg: "メールのリンクをクリックしてパスワードをリセットしてください。",
        siteMembersTranslations_Reset_Password_Sucess_Title: "パスワードが変更されました",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "あなたはサイト所有者として Wix.com にログインしています。サイト会員機能をテストするには、Wix.com からログアウトしてください。",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "メールをご確認ください",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "ログアウトできませんでした。もう一度お試しください。",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "ログアウトできませんでした",
        SMApply_Success1: "会員登録の申請を送信しました。",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "パスワード再設定用のリンクをお送りしました。",
        SMApply_Success2: "会員登録の承認後、サイト管理者から「{0}」に通知メールが送信されます。 ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "続行",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "ログアウトできませんでした"
    },
    ko: {
        SMResetPass_Reset_Succ: "비밀번호가 성공적으로 변경되었습니다.",
        SMResetPassMail_confirmation_title: "이메일을 확인해 주세요.",
        SMResetPassMail_confirmation_msg: "비밀번호 재설정 링크가 이메일로 발송되었습니다.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "비밀번호 재설정 완료!",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "사용자님은 이 사이트 소유자이며 Wix.com에 로그인되어 있습니다. 사이트 회원 기능을 테스트하려면 Wix.com에서 로그아웃해 주세요.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "이메일을 확인하세요!",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "로그아웃에 문제가 발생했습니다. 다시 시도해 주세요.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "로그아웃에 실패했습니다.",
        SMApply_Success1: "성공적으로 회원가입 요청이 이루어졌습니다! 현재 회원가입 승인을 기다리고  있습니다.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "비밀번호 재설정 링크를 이메일로 발송했습니다.",
        SMApply_Success2: "회원가입이 승인되면 이메일로 알려드립니다.",
        SMContainer_OK: "확인",
        SMResetPass_Continue: "계속",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "로그아웃 실패"
    },
    pl: {
        SMResetPass_Reset_Succ: "Zresetowanie hasła powiodło się.",
        SMResetPassMail_confirmation_title: "Sprawdź swój email",
        SMResetPassMail_confirmation_msg: "Wysłaliśmy email z linkiem, który umożliwi Ci zresetowanie hasła.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Twoje hasło zostało zmienione.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Jesteś właścicielem tej witryny i jesteś obecnie zalogowany na Wix.com. Wyloguj się z Wix.com, aby przetestować funkcję Login Członka.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Sprawdź Swój Email",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Coś poszło nie tak przy próbie wylogowania. Spróbuj jeszcze raz.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Wylogowanie Nie Powiodło Się",
        SMApply_Success1: "Gratulujemy! Twoja prośba o członkostwo została wysłana i czeka na zatwierdzenie.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Wysłaliśmy email z linkiem, który umożliwi ci zresetowanie hasła.",
        SMApply_Success2: "Administrator powiadomi Cię w emailu,( {0} ) gdy twoja prośba zostanie zatwierdzona. ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Kontynuuj",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Wylogowanie nie powiodło się"
    },
    ru: {
        SMResetPass_Reset_Succ: "Вы успешно сменили пароль.",
        SMResetPassMail_confirmation_title: "Пожалуйста, проверьте ваш email",
        SMResetPassMail_confirmation_msg: "Мы отправили вам ссылку для смены пароля.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Пароль успешно изменен.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Чтобы протестировать эту функцию, пожалуйста, выйдите из аккаунта Wix.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Пожалуйста, проверьте ваш email",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Что-то не срослось. Пожалуйста, попробуйте еще раз.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Не получилось выйти",
        SMApply_Success1: "Отлично! Ваш запрос регистрации отправлен на подтверждение.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Отправили вам ссылку для смены пароля.",
        SMApply_Success2: "Как только ваш запрос будет подтвержден, администратор сайта отправит вам письмо на {0} ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Продолжить",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Не удалось выйти"
    },
    nl: {
        SMResetPass_Reset_Succ: "U hebt uw wachtwoord opnieuw ingesteld.",
        SMResetPassMail_confirmation_title: "Controleer uw e-mailberichten",
        SMResetPassMail_confirmation_msg: "We hebben u een e-mailbericht gestuurd met een link waarmee u uw wachtwoord opnieuw kunt instellen",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Uw wachtwoord is gewijzigd.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "U bent de eigenaar van deze website en u bent al ingelogd op Wix.com. Log uit om de functies voor leden van uw website te testen.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Controleer uw e-mailberichten",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Er ging iets fout bij het uitloggen. Probeer het opnieuw.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Uitloggen mislukt",
        SMApply_Success1: "Uw verzoek om toegang is verzonden en wacht op goedkeuring.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "We hebben u een e-mailbericht gestuurd met een link waarmee u uw wachtwoord opnieuw kunt instellen.",
        SMApply_Success2: "De administrator van de website zal u een e-mailbericht ( {0} ) sturen zodra uw verzoek is goedgekeurd ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Doorgaan",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Uitloggen mislukt"
    },
    tr: {
        SMResetPass_Reset_Succ: "Şifrenizi yeniden ayarlama başarılı.",
        SMResetPassMail_confirmation_title: "Lütfen e-postanızı kontrol edin",
        SMResetPassMail_confirmation_msg: "Size şifrenizi sıfırlamanızı sağlayacak bir bağlantı içeren bir e-posta gönderdik.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Şifreniz değiştirildi.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Bu web sitesinin sahibisiniz ve Wix.com'daki oturumuz açık. Lütfen Site Üyelik özelliğini test etmek için Wix.com oturumunuzu kapatın.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Lütfen E-Postanızı Kontrol Edin",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Bu oturum kapatma işlemiyle ilgili bir hata oluştu. Lütfen daha sonra deneyin.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Oturum Kapatma Başarısız",
        SMApply_Success1: "Başarılı! Üye girişi talebiniz gönderildi ve onay bekliyor.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Sifrenizi yenilemeniz için size bir e-posta gönderdik.",
        SMApply_Success2: "Talebiniz onaylandığında site yöneticisi size e-posta( {0} ) yoluyla bildirecektir ",
        SMContainer_OK: "TAMAM",
        SMResetPass_Continue: "Devam",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Oturum Kapatma Hatası"
    },
    sv: {
        SMResetPass_Reset_Succ: "Du har återställt ditt lösenord.",
        SMResetPassMail_confirmation_title: "Kontrollera din e-post",
        SMResetPassMail_confirmation_msg: "Vi har skickat ett mejl med en länk som gör att du kan återställa ditt lösenord",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Ditt lösenord har ändrats.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Du äger den här hemsidan och är inloggad på Wix.com. Logga ut från Wix.com för att testa funktionen sidmedlemmar.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Vänligen kontrollera din e-post",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Något gick fel vid utloggningen. Försök igen.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Kunde inte logga ut",
        SMApply_Success1: "Klart! Din begäran om medlemsinloggning har skickats och väntar på godkännande.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Vi har skickat ett mejl med en länk som gör att du kan återställa ditt lösenord.",
        SMApply_Success2: "Sidans administratör meddelar dig via e-post ({0}) så fort din begäran har godkänts  ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Fortsätt",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Kunde inte logga ut"
    },
    pt: {
        SMResetPass_Reset_Succ: "Você redefiniu sua senha com sucesso.",
        SMResetPassMail_confirmation_title: "Por favor, verifique seu email",
        SMResetPassMail_confirmation_msg: "Enviamos um e-mail com um link que lhe permitirá redefinir sua senha",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Sua senha foi alterada.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Você é o proprietário deste site, e fez login em Wix.com. Por favor, faça logout do Wix.com para testar o recurso de Membros do Site.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Por favor, verifique seu email.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Algo deu errado com este logout. Por favor, tente novamente.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Falha no Logout",
        SMApply_Success1: "Seu pedido de login foi enviado com sucesso e aguarda aprovação.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Enviamos um email com o link para redefinir sua senha. ",
        SMApply_Success2: "O administrador do site irá enviar-lhe uma notificação via email( {0} ) assim que o pedido for aprovado ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continuar",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Falha no logout"
    },
    no: {
        SMResetPass_Reset_Succ: "Du har nå tilbakestillt passordet.",
        SMResetPassMail_confirmation_title: "Vennligst sjekk e-posten din",
        SMResetPassMail_confirmation_msg: "Vi har sendt deg en e-post med en link som vil tillate deg å nullstille passordet ditt",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Passordet ditt har blitt endret.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Du er eier av dette nettstedet, og er logget inn på Wix.com. Logg ut av Wix.com for å teste nettstedets medlemmer-funksjonen.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Vennligst sjekk e-posten din",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Noe gikk galt ved utlogging. Gi det et nytt forsøk.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Mislykket utlogging",
        SMApply_Success1: "Supert! Din forespørsel om medlemsinnlogging er sendt og venter på godkjenning.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Vi har sendt deg en link for å tilbakestille passordet ditt.",
        SMApply_Success2: "Nettstedets administrator vil varsle deg via e-post( {0} ) med en gang forespørselen din har blitt godkjent ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Fortsett",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Feil ved utlogging"
    },
    da: {
        SMResetPass_Reset_Succ: "Du har med succes nulstillet din adgangskode.",
        SMResetPassMail_confirmation_title: "Tjek venligst dine e-mails",
        SMResetPassMail_confirmation_msg: "Vi har sendt dig en e-mail med et link, som giver dig mulighed for at nulstille din adgangskode",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Din adgangskode er blevet ændret.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Du er ejeren af denne hjemmeside, og er logget ind på Wix.com. Venligst log ud af Wix.com for at teste funktionen for hjemmesidemedlemmer.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Kontroller venligst din e-mail",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Noget gik galt ved dit log ud. Prøv venligst igen.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Log ud mislykkedes",
        SMApply_Success1: "Succes! Din anmodning om medlemslogin er sendt og afventer godkendelse.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Vi har sendt en link til dig via e-mail for at nulstille adgangskoden.",
        SMApply_Success2: "Hjemmesideadministratoren vil give dig besked via e-mail( {0} ) når din anmodning er blevet godkendt.",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Næste",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Fejl ved log ud"
    },
    hi: {
        SMResetPass_Reset_Succ: "You’ve successfully reset your password.",
        SMResetPassMail_confirmation_title: "कृपया अपनी ई-मेल देखें",
        SMResetPassMail_confirmation_msg: "हमने आपको ई-मेल से एक लिंक भेजी है जिसके द्वारा आप अपना पासवर्ड दुबारा सेट कर सकेंगे",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Your password has been changed.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "You are the owner of this website, and are logged in on Wix.com. Please log out of Wix.com to test the Site Members feature.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Please Check Your Email",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Something went wrong with that logout. Please give it another go.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Logout Unsuccessful",
        SMApply_Success1: "Success! Your member login request has been sent and is awaiting approval.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "We’ve emailed you a link to reset your password.",
        SMApply_Success2: "The site administrator will notify you via email( {0} ) once your request has been approved ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continue",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Logout failure"
    },
    zh: {
        SMResetPass_Reset_Succ: "You’ve successfully reset your password.",
        SMResetPassMail_confirmation_title: "请查看您的电子邮件",
        SMResetPassMail_confirmation_msg: "我们已向您发送一封包含链接的电子邮件，供您重置密码。",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Your password has been changed.",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "You are the owner of this website, and are logged in on Wix.com. Please log out of Wix.com to test the Site Members feature.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Please Check Your Email",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Something went wrong with that logout. Please give it another go.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Logout Unsuccessful",
        SMApply_Success1: "Success! Your member login request has been sent and is awaiting approval.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "We’ve emailed you a link to reset your password.",
        SMApply_Success2: "The site administrator will notify you via email( {0} ) once your request has been approved ",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Continue",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Logout failure"
    },
    cs: {
        SMResetPass_Reset_Succ: "Úspěšně jste obnovili své heslo.",
        SMResetPassMail_confirmation_title: "Zkontrolujte si prosím e-mail",
        SMResetPassMail_confirmation_msg: "Zaslali jsme vám e-mail s odkazem, který Vám umožní obnovit heslo.",
        siteMembersTranslations_Reset_Password_Sucess_Title: "Vaše heslo bylo změněno",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE: "Jste vlastníkem této stránky a jste přihlášeni na Wix.com. Abyste mohli otestovat funkce webu z pohledu členů, odhlaste se prosím z Wix.com.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE: "Zkontrolujte si prosím e-mail",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_IN_PROGRESS: "Odhlášení se nezdařilo. Zkuste to prosím znovu.",
        SITEMEMBERMANGAGER_LOGOUT_MESSAGES_TITLE: "Neúspěšné odhlášení",
        SMApply_Success1: "Povedlo se! Váš požadavek přihlásit se jako uživatel byl odeslán a čeká na schválení.",
        siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT: "Na váš e-mail jsme zaslali odkaz pro obnovení hesla.",
        SMApply_Success2: "Správce webu vás bude informovat prostřednictvím e-mailu ({0}), jakmile bude vaše žádost schválena",
        SMContainer_OK: "OK",
        SMResetPass_Continue: "Pokračovat",
        SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE: "Neúspěšné odhlášení"
    }
}), define("core/siteRender/SiteMembersAspect", ["lodash", "utils", "core/core/siteAspectsRegistry", "core/core/SiteMembersAPI", "core/bi/events", "core/util/translations/siteMembersTranslations", "experiment", "color"], function(e, t, i, s, n, o, a, r) {
    function c(e, t, i) {
        return {
            componentType: e,
            type: "Component",
            id: t,
            key: t,
            skin: i
        }
    }

    function p() {
        return c("wysiwyg.viewer.components.dialogs.CreditsDialog", "creditsDialog", "wysiwyg.viewer.skins.dialogs.creditsDialogSkin")
    }

    function l(e) {
        return c("wysiwyg.viewer.components.dialogs.NotificationDialog", "notificationDialog", m(Ee.Notification, e))
    }

    function d(e) {
        return c("wysiwyg.viewer.components.dialogs.siteMemberDialogs.MemberLoginDialog", "memberLoginDialog", m(Ee.Login, e))
    }

    function u(e) {
        return c("wysiwyg.viewer.components.dialogs.siteMemberDialogs.SignUpDialog", "signUpDialog", m(Ee.SignUp, e))
    }

    function h(e) {
        return c("wysiwyg.viewer.components.dialogs.siteMemberDialogs.RequestPasswordResetDialog", "requestResetPasswordDialog", m(Ee.ResetPasswordEmail, e))
    }

    function g(e) {
        return c("wysiwyg.viewer.components.dialogs.siteMemberDialogs.ResetPasswordDialog", "resetPasswordDialog", m(Ee.ResetPasswordNewPassword, e))
    }

    function f(e) {
        return c("wysiwyg.viewer.components.dialogs.EnterPasswordDialog", "enterPasswordDialog", m(Ee.PasswordProtected, e))
    }

    function m(e, t) {
        var i = y(t) && t.isMobileView() && e.socialMobileThemeStyled && e.socialMobileFixedStyle;
        return !a.isOpen("fallbackStyleDialogs", t) || v(t) ? i ? e.socialMobileThemeStyled : e.themeStyled : i ? e.socialMobileFixedStyle : e.fixedStyle
    }

    function y(t) {
        var i = e.get(t.getDataByQuery("masterPage"), ["smSettings"], {});
        return !(!i.socialLoginGoogleEnabled && !i.socialLoginFacebookEnabled)
    }

    function v(e) {
        var t = e.getColorsMap(),
            i = t[Te.BACKGROUND],
            s = t[Te.PRIMARY];
        if (i && s) {
            var n = new r(i).luminosity(),
                o = new r(s).luminosity();
            return (Math.max(n, o) + .05) / (Math.min(n, o) + .05) >= Ce.AA_large
        }
        return !1
    }

    function S(t, i) {
        if (e.isBoolean(i)) return i ? _e.Login : _e.SignUp;
        var s = t.getDataByQuery("masterPage");
        return e.get(s, ["smSettings", "smFirstDialogLogin"], !1) ? _e.Login : _e.SignUp
    }

    function A(e) {
        var t = {};
        return t.language = this.aspectState.read("languageToDisplay"), t.onCloseDialogCallback = G.bind(this), t.notClosable = this.aspectState.read("notClosable"), e.call(this, t), t
    }

    function _(e) {
        e.onSubmitCallback = w.bind(this);
        var t = this.aspectState.read("languageToDisplay");
        e.onTokenMessage = O.bind(this), e.onSwitchDialogLinkClick = R.bind(this, _e.SignUp, void 0, t), e.onForgetYourPasswordClick = function() {
            re.call(this, n.SITE_MEMBER_CLICKED_FORGOT_PASSWORD), R.call(this, _e.ResetPasswordEmail, void 0, t)
        }.bind(this), e.needLoginMessage = this.aspectState.read("showDialogMessage")
    }

    function P(e) {
        e.onSubmitCallback = k.bind(this);
        var t = this.aspectState.read("languageToDisplay");
        e.onTokenMessage = O.bind(this), e.onSwitchDialogLinkClick = R.bind(this, _e.Login, void 0, t), e.needLoginMessage = this.aspectState.read("showDialogMessage")
    }

    function I(e) {
        e.onSubmitCallback = N.bind(this)
    }

    function E() {
        var t = {},
            i = e.get(this.siteData.currentUrl.query, "lang", Re);
        return t.language = i, t.onSubmitCallback = L.bind(this, i), t.notClosable = this.aspectState.read("notClosable"), t
    }

    function T(e) {
        var t = e.language;
        switch (this.aspectState.read("notificationToDisplay")) {
            case _e.SignUp:
                var i = be[this.siteData.siteId].siteMember.details.email;
                e.title = "", e.description = de(t, "SMApply_Success1") + " " + de(t, "SMApply_Success2").replace("{0}", i), e.buttonText = de(t, "SMContainer_OK");
                break;
            case _e.ResetPasswordEmail:
                e.title = de(t, "siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TITLE"), e.description = de(t, "siteMembersTranslations_RESET_PASSWORD_CHECKEMAIL_TEXT"), e.buttonText = de(t, "SMContainer_OK");
                break;
            case _e.ResetPasswordNewPassword:
                e.title = de(t, "siteMembersTranslations_Reset_Password_Sucess_Title"), e.description = "", e.buttonText = de(t, "SMContainer_OK"), e.onButtonClick = ne.bind(this, _e.Login, "resetPasswordSuccessNotification");
                break;
            case "siteowner":
                e.title = de(t, "SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_TITLE"), e.description = de(t, "SITEMEMBERMANGAGER_OWNER_LOGOUT_ACTION_MESSAGE"), e.buttonText = de(t, "SMContainer_OK")
        }
    }

    function C(e) {
        e.onSubmitCallback = he.bind(this, this.aspectState.read("nextPageInfo"))
    }

    function M(e) {
        return Se.SHA256.b64_sha256(e)
    }

    function D(e, t) {
        var i = e.cookieName || Me.SM_SESSION,
            s = e.sessionToken,
            n = e.rememberMe ? e.expirationDate : 0;
        Ae.setCookie(i, s, n, t.currentUrl.hostname, t.getMainPagePath(), !1)
    }

    function R(t, i, s, n) {
        this.aspectState.update(e.merge({}, {
            dialogToDisplay: t
        }, s ? {
            languageToDisplay: s
        } : {}, e.isFunction(i) ? {
            dialogProcessSuccessCallback: i
        } : {}, e.isFunction(n) ? {
            onCancelCallback: n
        } : {})), this.aspectSiteApi.forceUpdate()
    }

    function b(t, i) {
        this.aspectState.update(e.merge({}, {
            notificationToDisplay: t,
            dialogToDisplay: _e.Notification
        }, i ? {
            languageToDisplay: i
        } : {})), this.aspectSiteApi.forceUpdate()
    }

    function w(e, t) {
        this.aspectState.delete("dialogToDisplay");
        var i = Ae.getCookie(Me.SV_SESSION);
        re.call(this, n.SITE_MEMBER_SUBMIT_BUTTON, {
            context: t.props.id
        }), ye.call(this, e), s.login(e, V.bind(this, t), function(e) {
            t.endLoader(), t.setErrorMessageByCode(e)
        }, i), t.startLoader()
    }

    function O(e, t, i, n) {
        this.aspectState.delete("dialogToDisplay");
        var o = Ae.getCookie(Me.SV_SESSION),
            a = K.bind(this, n, i, t),
            r = z.bind(this, n, i, t),
            c = {
                svSession: o,
                token: e,
                provider: t,
                visitorId: this.aspectSiteApi.getSiteAPI().getBiVisitorId(),
                mode: n.props.id,
                lang: n.props.language
            };
        ye.call(this, c), s.handleOauthToken(a, r, c), n.startLoader()
    }

    function k(t, i) {
        var o = this.siteData.getClientSpecMap(),
            a = e.find(o, {
                type: "sitemembers"
            }).collectionType,
            r = Ae.getCookie(Me.SV_SESSION);
        "Open" === a ? (ye.call(this, t), s.register(t, j.bind(this, i), function(e) {
            i.endLoader(), i.setErrorMessageByCode(e)
        }, r), i.startLoader()) : "ApplyForMembership" === a && s.apply(t, J.bind(this, i.props.language), i.setErrorMessageByCode, r), re.call(this, n.SITE_MEMBER_SUBMIT_BUTTON, {
            context: i.props.id
        })
    }

    function N(e, t) {
        var i = this.siteData.currentUrl.full;
        re.call(this, n.SITE_MEMBER_SUBMIT_BUTTON, {
            context: t.props.id
        }), s.sendForgotPasswordMail({
            email: e.email,
            homePageUrl: i,
            lang: t.props.language
        }, function() {
            var e = this.aspectState.read("invokeResetPasswordDialogCb"),
                i = this.aspectState.read("dialogProcessSuccessCallback");
            e && (i(), this.aspectState.update({
                dialogProcessSuccessCallback: null
            }), this.aspectState.delete("invokeResetPasswordDialogCb")), b.call(this, Ie.ResetPasswordEmail, t.props.language)
        }.bind(this), t.setErrorMessageByCode, _e.ResetPasswordEmail)
    }

    function B(e) {
        delete this.siteData.currentUrl.query.forgotPasswordToken, b.call(this, Ie.ResetPasswordNewPassword, e)
    }

    function L(e, t, i) {
        re.call(this, n.SITE_MEMBER_SUBMIT_BUTTON, {
            context: i.props.id
        }), s.resetMemberPassword(t, B.bind(this, e), i.setErrorMessageByCode)
    }

    function x(t, i) {
        return e.includes(t.rendererModel.passwordProtectedPages, i)
    }

    function U(e, t, i) {
        var s = e.getDataByQuery(t.pageId) && e.getDataByQuery(t.pageId).pageSecurity;
        if (!s) return {
            isAllowed: !0,
            defaultDialog: _e.ResetPasswordNewPassword
        };
        if (!ee(e, t.pageId)) {
            if (s.passwordDigest) return {
                isAllowed: !1,
                defaultDialog: _e.PasswordProtected,
                pageSecurity: s
            };
            if (x(e, t.pageId)) return {
                isAllowed: !1,
                defaultDialog: _e.PasswordProtected,
                pageSecurity: s
            }
        }
        return s.requireLogin && !i ? {
            isAllowed: !1,
            defaultDialog: S(e),
            pageSecurity: s
        } : {
            isAllowed: !0,
            defaultDialog: null
        }
    }

    function F(t) {
        return e.has(this.siteData.currentUrl.query, "forgotPasswordToken") ? {
            isAllowed: U(this.siteData, t, this.isLoggedIn()).isAllowed,
            defaultDialog: _e.ResetPasswordNewPassword
        } : U(this.siteData, t, this.isLoggedIn())
    }

    function G(t, i, s, o) {
        s && re.call(this, n.SITE_MEMBER_EXIT_DIALOG, {
            context: t.props.id
        });
        var r = be[this.siteData.siteId].siteMember,
            c = this.aspectState.read("onCancelCallback");
        e.isFunction(c) && !r.details && c(), this.aspectState.update({
            dialogToDisplay: null,
            onCancelCallback: null,
            dialogProcessSuccessCallback: null,
            initiator: null
        }), this.aspectState.delete("invokeResetPasswordDialogCb"), t.performCloseDialog(function() {
            this.aspectState.update({
                showDialogMessage: !1
            });
            var e = o || this.aspectState.read("nextPageInfo");
            t.endLoader(), i ? e ? (a.isOpen("sv_dpages", this.siteData) && e.routerDefinition && (e.isRefetchingPageAfterLogin = !0, delete e.pageId), this.aspectSiteApi.navigateToPage(e)) : this.aspectSiteApi.forceUpdate() : e && e.pageId === this.siteData.getCurrentUrlPageId() ? (W.call(this), this.aspectSiteApi.navigateToPage({
                pageId: this.siteData.getMainPageId()
            })) : this.aspectSiteApi.forceUpdate()
        }.bind(this))
    }

    function W() {
        this.aspectState.update({
            stopShowDialog: !0
        })
    }

    function H() {
        this.aspectState.update({
            stopShowDialog: !1
        })
    }

    function V(e, t) {
        Y.call(this, e, t, n.SITE_MEMBER_LOGIN_SUCCESS)
    }

    function q(e, t) {
        e.postMessage({
            src: "wix-social-login",
            type: t,
            action: "revoke"
        }, "*")
    }

    function K(e, t, i, s) {
        var n = s.payload,
            o = n.siteMemberDto,
            a = n.smSession;
        s.httpOnlySession ? Y.call(this, e, s) : a ? Y.call(this, e, {
            payload: a
        }) : J.call(this, e.props.language, {
            payload: o
        }), q(t, i)
    }

    function z(e, t, i, s) {
        e.endLoader(), e.setOuathErrorMessageByCode(s), q(t, i)
    }

    function j(e, t) {
        Y.call(this, e, t)
    }

    function Q(t, i, s) {
        t.endLoader();
        var n = be[this.siteData.siteId].siteMember;
        n.details = i.payload.siteMemberDto;
        var o = this.aspectState.read("dialogProcessSuccessCallback");
        e.isFunction(o) && (o(n.details), this.aspectState.update({
            dialogProcessSuccessCallback: null
        }));
        var a;
        i.payload.pages && (this.siteData.setPagesJsonFileName(i.payload.pages), a = this.aspectState.read("nextPageInfo")), G.call(this, t, !0, a), s && this.aspectSiteApi.reportBI(s, {
            userName: n.details.attribute && n.details.attribute.name || n.details.email
        })
    }

    function Y(e, t, i) {
        var s;
        t.httpOnlySession ? s = {
            urlParams: {
                petri_ovr: "specs.UseSignedTokensSpec:Enabled"
            }
        } : D(t.payload, this.siteData), Z.call(this, Q.bind(this, e, t, i), s)
    }

    function J(t, i) {
        var s = be[this.siteData.siteId].siteMember;
        s.details = i.payload;
        var n = this.aspectState.read("dialogProcessSuccessCallback");
        e.isFunction(n) && (n(s.details), this.aspectState.update({
            dialogProcessSuccessCallback: null
        })), b.call(this, Ie.SignUp, t)
    }

    function Z(e, t) {
        this.aspectSiteApi.getSiteAspect("dynamicClientSpecMap").reloadClientSpecMap(e, t)
    }

    function X(e, t, i) {
        return {
            showDialogMessage: !0,
            nextPageInfo: e,
            dialogToDisplay: t,
            languageToDisplay: i && i.dialogLanguage || Re,
            passwordDigest: i && i.passwordDigest || void 0,
            notClosable: e.pageId === this.siteData.getCurrentUrlPageId() && e.pageId === this.siteData.getMainPageId()
        }
    }

    function $(e) {
        be[e.siteId] = {
            approvedPasswordPages: [],
            siteMember: {
                details: null
            }
        }
    }

    function ee(t, i) {
        return e.includes(be[t.siteId].approvedPasswordPages, i)
    }

    function te(e) {
        be[this.siteData.siteId].approvedPasswordPages.push(e)
    }

    function ie(e, i, s, n) {
        var o = this.siteData.serviceTopology.protectedPageResolverUrl,
            a = {
                password: e,
                metaSiteId: this.siteData.getMetaSiteId(),
                siteId: this.siteData.siteId,
                pageId: i.pageId
            };
        t.ajaxLibrary.ajax({
            type: "POST",
            url: o,
            data: a,
            dataType: "json",
            cache: !1,
            contentType: "application/json",
            success: s,
            error: n
        })
    }

    function se(e, t, i) {
        M(e) === this.aspectState.read("passwordDigest") ? t(this.aspectState.read("nextPageInfo")) : i()
    }

    function ne(e, t) {
        re.call(this, n.SITE_MEMBER_SUBMIT_BUTTON, {
            context: t
        }), R.call(this, e)
    }

    function oe() {
        var t = this.aspectState.read("initiator"),
            i = {
                context: this.aspectState.read("dialogToDisplay"),
                has_social: !!y(this.siteData)
            };
        t ? t.isRead || (re.call(this, n.SITE_MEMBER_AUTH_DIALOG_OPENED, e.merge(i, ae(t.id))), this.aspectState.update({
            initiator: {
                id: t.id,
                isRead: !0
            }
        })) : (re.call(this, n.SITE_MEMBER_AUTH_DIALOG_OPENED, e.merge(i, {
            initator: De.UOU_SITE_MEMBER_PAGE
        })), this.aspectState.update({
            initiator: {
                id: 0,
                isRead: !0
            }
        }))
    }

    function ae(e) {
        switch (e) {
            case 0:
                return {
                    initator: De.UOU_SITE_MEMBER_PAGE
                };
            case 3:
                return {
                    initator: De.UOU_LOGIN_BUTTON
                };
            default:
                return {
                    initator: De.TPA,
                    app_id: e
                }
        }
    }

    function re(t, i) {
        var s = this.aspectSiteApi.getSiteAPI().getBiVisitorId();
        this.aspectSiteApi.reportBI(t, e.merge(i || {}, {
            visitor_id: s
        }))
    }

    function ce() {
        return e.includes(Pe, this.aspectState.read("dialogToDisplay"))
    }

    function pe(e, t) {
        Z.call(this, function() {
            e.siteMember.details = null, this.aspectState.update({
                notificationToDisplay: null
            }), this.aspectSiteApi.forceUpdate(), t()
        }.bind(this), e.isHttpOnlySession ? {
            urlParams: {
                petri_ovr: "specs.UseSignedTokensSpec:Enabled"
            }
        } : null)
    }

    function le(t) {
        return {
            read: function(i) {
                var s = t.getAspectGlobalData("SiteMembersAspect");
                return i ? e.get(s, i) : s
            },
            update: function(e) {
                t.updateAspectGlobalData("SiteMembersAspect", e)
            },
            delete: function(i) {
                var s = e.set(t.getAspectGlobalData("SiteMembersAspect"), i, void 0);
                t.updateAspectGlobalData("SiteMembersAspect", s)
            }
        }
    }

    function de(e, t) {
        return o[e] ? o[e][t] : o.en[t]
    }

    function ue(e, t) {
        G.call(this, e, !0), te.call(this, t.pageId), this.aspectSiteApi.navigateToPage(t), this.aspectState.update({
            passwordDigest: null
        })
    }

    function he(t, i, s) {
        var n = function() {
            s.setErrorMessage("PasswordLogin_Wrong_Password")
        };
        if (e.isEmpty(i.password)) return s.setErrorMessage("PasswordLogin_Wrong_Password");
        if (x(this.siteData, t.pageId)) {
            var o = this;
            ie.call(this, i.password, t, function(e) {
                t.jsonUrls = e.payload.urls, ue.call(o, s, t)
            }, n)
        } else se.call(this, i.password, ue.bind(this, s), n)
    }

    function ge(e) {
        switch (this.aspectState.read("dialogToDisplay")) {
            case _e.Login:
                return d(e);
            case _e.SignUp:
                return u(e);
            case _e.ResetPasswordEmail:
                return h(e);
            case _e.ResetPasswordNewPassword:
                return g(e);
            case _e.Notification:
                return l(e);
            case _e.PasswordProtected:
            case _e.AdminLogin:
                return f(e);
            case _e.Credits:
                return p();
            default:
                return null
        }
    }

    function fe() {
        if (this.aspectState.read("stopShowDialog")) return this.aspectState.update({
            stopShowDialog: !1
        }), null;
        var t;
        switch (this.aspectState.read("dialogToDisplay")) {
            case _e.Login:
                t = _;
                break;
            case _e.SignUp:
                t = P;
                break;
            case _e.ResetPasswordEmail:
                t = I;
                break;
            case _e.ResetPasswordNewPassword:
                return E.call(this);
            case _e.Notification:
                t = T.bind(this);
                break;
            case _e.Credits:
                t = e.noop;
                break;
            case _e.PasswordProtected:
                t = C;
                break;
            default:
                return {}
        }
        return ce.call(this) && oe.call(this), A.call(this, t)
    }

    function me(e) {
        return this.aspectState.read("dialogToDisplay") ? [{
            structure: ge.call(this, e.getSiteData()),
            props: fe.call(this)
        }] : null
    }

    function ye(t) {
        var i = this.aspectState.read("initiator");
        e.merge(t, {
            dialogAppId: e.isNumber(i.id) ? null : i.id,
            dialogInitiator: ae(i.id).initator
        })
    }

    function ve(t) {
        this.aspectSiteApi = t, this.siteData = t.getSiteData(), this.aspectState = le(this.aspectSiteApi);
        var i = e.has(this.siteData.currentUrl.query, "forgotPasswordToken") ? _e.ResetPasswordNewPassword : null;
        this.aspectState.update({
            dialogProcessSuccessCallback: null,
            onCancelCallback: null,
            showDialogMessage: !1,
            passwordDigest: null,
            nextPageInfo: null,
            dialogToDisplay: i,
            notificationToDisplay: null,
            languageToDisplay: Re,
            notClosable: !1
        }), $(this.siteData), s.initializeData(this.siteData), e.bindAll(this, ["getMemberDetails"])
    }
    var Se = t.hashUtils,
        Ae = t.cookieUtils,
        _e = {
            Login: "login",
            SignUp: "register",
            ResetPasswordEmail: "resetPasswordEmail",
            ResetPasswordNewPassword: "resetPasswordNewPassword",
            Notification: "notification",
            Credits: "credits",
            PasswordProtected: "enterPassword"
        },
        Pe = [_e.Login, _e.SignUp],
        Ie = {
            SiteOwner: "siteowner",
            SignUp: "register",
            ResetPasswordEmail: "resetPasswordEmail",
            ResetPasswordNewPassword: "resetPasswordNewPassword"
        },
        Ee = {
            Login: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.memberLoginDialogSkinNew",
                socialMobileThemeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.memberLoginDialogSkinSocialMobile",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.memberLoginDialogSkinFixed",
                socialMobileFixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.memberLoginDialogSkinSocialMobileFixed"
            },
            SignUp: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.signUpDialogSkinNew",
                socialMobileThemeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.signUpDialogSkinSocialMobile",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.signUpDialogSkinFixed",
                socialMobileFixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.signUpDialogSkinSocialMobileFixed"
            },
            ResetPasswordEmail: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.requestPasswordResetDialogSkinNew",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.requestPasswordResetDialogSkinFixed"
            },
            ResetPasswordNewPassword: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.resetPasswordDialogSkinNew",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.siteMembersDialogs.resetPasswordDialogSkinFixed"
            },
            Notification: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.notificationDialogSkinNew",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.notificationDialogSkinFixed"
            },
            PasswordProtected: {
                themeStyled: "wysiwyg.viewer.skins.dialogs.enterPasswordDialogSkinNew",
                fixedStyle: "wysiwyg.viewer.skins.dialogs.enterPasswordDialogSkinFixed"
            }
        },
        Te = {
            BACKGROUND: 11,
            PRIMARY: 15
        },
        Ce = {
            AA_large: 3
        },
        Me = {
            SV_SESSION: "svSession",
            SM_SESSION: "smSession",
            WIX_CLIENT: "wixClient"
        },
        De = {
            UOU_SITE_MEMBER_PAGE: "UoU_smpage",
            UOU_LOGIN_BUTTON: "UoU_loginBtn",
            TPA: "TPA"
        },
        Re = "en",
        be = {};
    ve.prototype = {
        getComponentsToRender: me,
        isLoggedIn: function() {
            return !!this.siteData.getSMToken()
        },
        showAuthenticationDialog: function(e) {
            this.aspectState.update({
                initiator: {
                    id: e.appId,
                    isRead: !1
                }
            });
            var t = S(this.siteData, e.showLoginDialog);
            R.call(this, t, e.successCallback, e.language, e.cancelCallback)
        },
        getMemberDetails: function(t, i) {
            i = e.isFunction(i) ? i : e.noop;
            var n = be[this.siteData.siteId].siteMember;
            return this.isLoggedIn() && !n.details ? (s.getMemberDetails(this.siteData.getSMToken(), function(e) {
                n.details = e.payload, t && t(n.details), this.aspectSiteApi.forceUpdate()
            }.bind(this), i), null) : (t && t(n.details), n.details)
        },
        isPageAllowed: function(e) {
            return !this.aspectSiteApi.getRenderFlag("isPageProtectionEnabled") || F.call(this, e).isAllowed
        },
        showDialogOnNextRender: function(e) {
            H.call(this);
            var t = F.call(this, e);
            if (!this.aspectState.read("dialogToDisplay") && !t.isAllowed) {
                var i = X.call(this, e, t.defaultDialog, t.pageSecurity);
                this.aspectState.update(i)
            }
        },
        logout: function(t, i, n) {
            i = e.isFunction(i) ? i : e.noop, n = e.isFunction(n) ? n : e.noop;
            var o = be[this.siteData.siteId].siteMember;
            if (Ae.getCookie(Me.WIX_CLIENT) && o.details && o.details.owner) b.call(this, Ie.SiteOwner, t), n("Current member is the site owner, which can not be logout");
            else {
                Ae.deleteCookie(Me.SV_SESSION, this.siteData.currentUrl.hostname, this.siteData.getMainPagePath());
                var a = {
                    siteMember: o
                };
                Ae.getCookie(Me.SM_SESSION) ? (Ae.deleteCookie(Me.SM_SESSION, this.siteData.currentUrl.hostname, this.siteData.getMainPagePath()), pe.call(this, e.merge(a, {
                    isHttpOnlySession: !1
                }), i)) : s.logout(function() {
                    pe.call(this, e.merge(a, {
                        isHttpOnlySession: !0
                    }), i)
                }.bind(this), n)
            }
        },
        showResetPasswordDialog: function(t, i, s) {
            R.call(this, _e.ResetPasswordEmail, i, t, s), e.isFunction(i) && this.aspectState.update({
                invokeResetPasswordDialogCb: !0
            })
        },
        forceCloseDialog: function() {
            W.call(this)
        },
        reportSiteMembersBi: function(e, t) {
            re.call(this, n[e], t)
        }
    }, i.registerSiteAspect("siteMembers", ve)
}), define("core/components/siteAspects/windowFocusEventsAspect", ["lodash", "core/core/siteAspectsRegistry", "utils"], function(e, t, i) {
    var s = i.stringUtils,
        n = ["focus", "blur"],
        o = function(e) {
            this._aspectSiteAPI = e, this._registerToFocusEvents()
        };
    o.prototype = {
        _registerToFocusEvents: function() {
            this._compsRegistry = {}, e.forEach(n, function(e) {
                this._compsRegistry[e] = {}, this._aspectSiteAPI.registerToFocusEvents(e, this.propagateFocusEvent.bind(this, e))
            }.bind(this))
        },
        registerToFocusEvent: function(e, t) {
            this._compsRegistry[e][t.props.id] = t.props.id
        },
        unregisterFromFocusEvent: function(e, t) {
            delete this._compsRegistry[e][t.props.id]
        },
        propagateFocusEvent: function(t) {
            var i, n = this._compsRegistry[t],
                o = "on" + s.capitalize(t);
            e.forEach(n, function(e) {
                (i = this._aspectSiteAPI.getComponentById(e)) ? i[o] && i[o](): delete this._compsRegistry[t][e]
            }.bind(this))
        }
    }, t.registerSiteAspect("windowFocusEvents", o)
}), define("core/components/siteAspects/windowScrollEventAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(t, i) {
        e.forEach(i, function(e) {
            s(t, e)
        })
    }

    function s(t, i) {
        e.forEach(i, function(i) {
            var s = e.findLast(i.scrollModes, function(e) {
                return e.params.scrollPos <= t
            });
            s && i.debouncedActivateModeById(s.modeId)
        })
    }

    function n(e, t, i) {
        var s, n;
        return function(o) {
            o !== n && (n = o, clearTimeout(s), s = setTimeout(function() {
                e.activateModeById(t, i, n)
            }, 50))
        }
    }

    function o(e) {
        this._aspectSiteAPI = e, this._registeredCompIds = {}, this._registeredScrollModes = {}, this._prevScrollPosition = {
            x: 0,
            y: 0
        }, this._aspectSiteAPI.registerToSiteReady(function() {
            e.registerToScroll(this.propagateScrollEvent.bind(this)), this._aspectSiteAPI.isExperimentOpen("scrollModes") && e.registerToRenderedRootsChange(this.cleanNonRenderedScrollModes.bind(this))
        }.bind(this))
    }
    o.prototype = {
        registerToScroll: function(e) {
            this._registeredCompIds[e.props.id] = e.props.id
        },
        unregisterToScroll: function(e) {
            delete this._registeredCompIds[e.props.id]
        },
        propagateScrollEvent: function(t) {
            this._aspectSiteAPI.updateAspectGlobalData("windowScrollEvent", t);
            var s = this.getScrollDirection(t);
            this._aspectSiteAPI.isExperimentOpen("scrollModes") && i(t.y, this._registeredScrollModes), this._prevScrollPosition = t, e.forEach(this._registeredCompIds, function(e) {
                var i = this._aspectSiteAPI.getComponentById(e);
                i ? i.onScroll && i.onScroll(t, s) : delete this._registeredCompIds[e]
            }.bind(this))
        },
        getScrollDirection: function(e) {
            return e.y !== this._prevScrollPosition.y ? e.y > this._prevScrollPosition.y ? "DOWN" : "UP" : e.x !== this._prevScrollPosition.x ? e.x > this._prevScrollPosition.x ? "RIGHT" : "LEFT" : void 0
        },
        getScrollPosition: function() {
            return {
                x: window.pageXOffset || window.document.body.scrollLeft,
                y: window.pageYOffset || window.document.body.scrollTop
            }
        },
        registerCompScrollModes: function(t, i, s) {
            this._registeredScrollModes[i] = this._registeredScrollModes[i] || {};
            var o = e.findKey(this._registeredScrollModes, t);
            o && o !== i && delete this._registeredScrollModes[o][t];
            var a = this._aspectSiteAPI;
            this._registeredScrollModes[i][t] = {
                scrollModes: e.sortBy(s, "params.scrollPos"),
                debouncedActivateModeById: n(a, t, i)
            }
        },
        clearCompScrollModes: function(t) {
            var i = e.findKey(this._registeredScrollModes, t);
            i && delete this._registeredScrollModes[i][t]
        },
        cleanNonRenderedScrollModes: function(t, i) {
            this._aspectSiteAPI.isExperimentOpen("scrollModes") && (this._registeredScrollModes = e.omit(this._registeredScrollModes, i))
        }
    }, t.registerSiteAspect("windowScrollEvent", o)
}), define("core/components/siteAspects/windowResizeEventAspect", ["lodash", "zepto", "core/core/siteAspectsRegistry"], function(e, t, i) {
    function s(e) {
        this._aspectSiteAPI = e, this._registeredCompIds = {}, this._registeredCompIdsOrientation = {}, this._aspectSiteAPI.registerToResize(this.propagateResizeEvent.bind(this)), this._aspectSiteAPI.registerToOrientationChange(this.propagateOrientationEvent.bind(this))
    }
    s.prototype = {
        registerToResize: function(e) {
            this._registeredCompIds[e.props.id] = e.props.id
        },
        unregisterToResize: function(e) {
            delete this._registeredCompIds[e.props.id]
        },
        registerToOrientationChange: function(e) {
            this._registeredCompIdsOrientation[e.props.id] = e.props.id
        },
        unregisterToOrientationChange: function(e) {
            delete this._registeredCompIdsOrientation[e.props.id]
        },
        propagateResizeEvent: function() {
            var i = null;
            e.forEach(this._registeredCompIds, function(e) {
                var s = this._aspectSiteAPI.getComponentById(e);
                if (s) {
                    if (s.onResize) {
                        if (!i) {
                            var n = t(window.document.body);
                            i = {
                                height: n.height(),
                                width: n.width()
                            }
                        }
                        s.onResize(i)
                    }
                } else delete this._registeredCompIds[e]
            }.bind(this))
        },
        propagateOrientationEvent: function() {
            e.forEach(this._registeredCompIdsOrientation, function(e) {
                var t = this._aspectSiteAPI.getComponentById(e);
                t ? t.onOrientationChange && t.onOrientationChange() : delete this._registeredCompIdsOrientation[e]
            }.bind(this))
        }
    }, i.registerSiteAspect("windowResizeEvent", s)
}), define("core/components/siteAspects/windowClickEventAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    var i = function(e) {
        this._aspectSiteAPI = e, this._aspectSiteAPI.registerToDocumentClick(this.propagateDocumentClickEvent.bind(this)), this._registeredCompIds = []
    };
    i.prototype = {
        registerToDocumentClickEvent: function(t) {
            this._registeredCompIds = e.union(this._registeredCompIds, [t])
        },
        unRegisterToDocumentClickEvent: function(t) {
            e.pull(this._registeredCompIds, t)
        },
        propagateDocumentClickEvent: function(t) {
            e.forEach(this._registeredCompIds, function(e) {
                var i = this._aspectSiteAPI.getComponentById(e);
                i && i.onDocumentClick && i.onDocumentClick(t)
            }.bind(this))
        }
    }, t.registerSiteAspect("windowClickEventAspect", i)
}), define("core/components/siteAspects/windowKeyboardEventAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._aspectSiteAPI.registerToKeyDown(this.propagateKeyDownSpecificKeyEvent.bind(this)), this._aspectSiteAPI.registerToKeyUp(this.propagateKeyboardEvent.bind(this, "KeyUp")), this._registeredCompIds = {
            specificKeysKeyDown: {
                Escape: [],
                ArrowRight: [],
                ArrowLeft: []
            },
            KeyDown: [],
            KeyUp: []
        }
    }

    function s(e) {
        return Boolean(n[e.keyCode || e.which])
    }
    var n = {
        39: "ArrowRight",
        37: "ArrowLeft",
        27: "Escape",
        13: "Enter",
        32: "Space"
    };
    i.prototype = {
        registerToKeyDownWithFocus: function(e, t) {
            t.addEventListener("focus", function() {
                this.registerToKeyDown(e)
            }.bind(this)), t.addEventListener("blur", function() {
                this.unRegisterKeyDown(e)
            }.bind(this))
        },
        registerToEscapeKey: function(e) {
            this._registeredCompIds.specificKeysKeyDown.Escape.push(e.props.id)
        },
        registerToArrowRightKey: function(e) {
            this._registeredCompIds.specificKeysKeyDown.ArrowRight.push(e.props.id)
        },
        registerToArrowLeftKey: function(e) {
            this._registeredCompIds.specificKeysKeyDown.ArrowLeft.push(e.props.id)
        },
        unRegisterKeys: function(t) {
            e.forEach(this._registeredCompIds.specificKeysKeyDown, function(i, s) {
                this._registeredCompIds.specificKeysKeyDown[s] = e.without(this._registeredCompIds.specificKeysKeyDown[s], t.props.id)
            }.bind(this))
        },
        registerToKeyDown: function(e) {
            this._registeredCompIds.KeyDown.push(e.props.id)
        },
        unRegisterKeyDown: function(t) {
            this._registeredCompIds.KeyDown = e.without(this._registeredCompIds.KeyDown, t.props.id)
        },
        registerToKeyUp: function(e) {
            this._registeredCompIds.KeyUp.push(e.props.id)
        },
        unRegisterKeyUp: function(t) {
            this._registeredCompIds.KeyUp = e.without(this._registeredCompIds.KeyUp, t.props.id)
        },
        unRegisterAll: function(e) {
            this.unRegisterKeys(e), this.unRegisterKeyDown(e), this.unRegisterKeyUp(e)
        },
        propagateKeyDownSpecificKeyEvent: function(t) {
            this.propagateKeyboardEvent("KeyDown", t);
            var i = n[t.keyCode || t.which];
            if (!e.isEmpty(this._registeredCompIds.specificKeysKeyDown[i])) {
                var s = e.last(this._registeredCompIds.specificKeysKeyDown[i]),
                    o = this._aspectSiteAPI.getComponentById(s),
                    a = "on" + i + "Key";
                o ? o[a] && (t.preventDefault(), o[a]()) : this._registeredCompIds.specificKeysKeyDown[i] = e.without(this._registeredCompIds.specificKeysKeyDown[i], s)
            }
        },
        propagateKeyboardEvent: function(t, i) {
            !e.isEmpty(this._registeredCompIds[t]) && s(i) && e.forEach(this._registeredCompIds[t], function(s) {
                var n = this._aspectSiteAPI.getComponentById(s),
                    o = "on" + t;
                n ? n[o] && (i.preventDefault(), n[o](i)) : this._registeredCompIds[t] = e.without(this._registeredCompIds[t], s)
            }.bind(this))
        }
    }, t.registerSiteAspect("windowKeyboardEvent", i)
}), define("core/components/siteAspects/addComponentAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(t) {
        this._aspectSiteAPI = t, e.bindAll(this, e.functionsIn(this))
    }
    return i.prototype = {
        getComponentsToRender: function(t) {
            var i = t.getAspectGlobalData("addComponent");
            return e.values(i)
        },
        addComponent: function(e, t, i) {
            var s = {};
            s[e] = {
                structure: t,
                props: i
            }, this._aspectSiteAPI.updateAspectGlobalData("addComponent", s), this._aspectSiteAPI.forceUpdate()
        },
        deleteComponent: function(e) {
            var t = this._aspectSiteAPI.getAspectGlobalData("addComponent");
            delete t[e], this._aspectSiteAPI.setAspectGlobalData("addComponent", t), this._aspectSiteAPI.forceUpdate()
        }
    }, t.registerSiteAspect("addComponent", i), i
}), define("core/components/siteAspects/AudioAspect", ["lodash", "utils", "core/core/siteAspectsRegistry"], function(e, t, i) {
    function s(t, i) {
        return e.assign({
            url: o(t.siteAPI.getSiteData().serviceTopology),
            flashVersion: 9,
            preferFlash: !1,
            useHTML5Audio: !0,
            forceUseGlobalHTML5Audio: !1,
            html5PollingInterval: 100,
            onready: function() {
                t.soundManagerReady = !0
            }
        }, i || {})
    }

    function n() {
        d = l
    }

    function o(e) {
        var i = e.scriptsDomainUrl;
        return t.stringUtils.endsWith(i, "/") || (i += "/"), i + "services/third-party/soundmanager2/V2.97a.20150601/"
    }

    function a(e) {
        u !== r && (e.soundManagerReady = !1, e.siteAPI.updateAspectGlobalData(p, {
            soundManagerOnResetup: !0
        }), e.siteAPI.forceUpdate(), u = r, r(e))
    }

    function r(e) {
        var t = s(e, {
            preferFlash: !0,
            useHTML5Audio: !1,
            onready: function() {
                e.soundManagerReady = !0, e.siteAPI.updateAspectGlobalData(p, {
                    soundManagerOnResetup: !1
                }), e.siteAPI.forceUpdate()
            }
        });
        e.soundManager.destruct(), e.soundManager.reset().setup(t), e.soundManager.beginDelayedInit()
    }

    function c(t) {
        this.siteAPI = t, this.soundManagerReady = !1, this.soundManager = null, this.siteAPI.updateAspectGlobalData(p, {
            nowPlayingComp: "",
            soundManagerOnResetup: !1
        }), e.bindAll(this, e.functionsIn(this))
    }
    var p = "AudioAspect",
        l = 10,
        d = l,
        u = function(e) {
            var t = s(e);
            e.soundManager.setup(t), setTimeout(function() {
                h(e)
            }, d)
        },
        h = function e(i) {
            null === i.soundManager ? requirejs(["SoundManager"], function(t) {
                i.soundManager = t.getInstance(), e(i)
            }) : i.soundManagerReady ? (i.siteAPI.forceUpdate(), n()) : 1e4 > d ? (u(i), d *= 1.5) : (n(), t.log.verbose("Failed to setup SoundManager."))
        };
    return c.prototype = {
        loadSoundManagerAPI: function() {
            this.siteAPI.getSiteData().isInSSR() || h(this)
        },
        onHTML5ErrorTryToReloadWithFlash: function() {
            a(this)
        },
        createAudioObj: function(e) {
            return this.soundManagerReady ? (e.id && this.soundManager.getSoundById(e.id) && this.soundManager.destroySound(e.id), this.soundManager.createSound(e)) : (this.loadSoundManagerAPI(), !1)
        },
        updatePlayingComp: function(e) {
            this.soundManagerReady || this.loadSoundManagerAPI(), this.siteAPI.updateAspectGlobalData(p, {
                nowPlayingComp: e.props.id
            }), this.siteAPI.forceUpdate()
        },
        updatePausingComp: function() {
            this.siteAPI.updateAspectGlobalData(p, {
                nowPlayingComp: ""
            }), this.soundManagerReady && this.siteAPI.forceUpdate()
        }
    }, i.registerSiteAspect(p, c), c
}), define("core/components/siteAspects/quickActionBarAspect", ["lodash", "siteUtils", "core/core/siteAspectsRegistry", "experiment"], function(e, t, i, s) {
    function n(t) {
        var i = e(t).map("appId").difference(p).value();
        if (e.some(i)) throw new Error('failed to add unsupported dynamic actions with app ids: "' + i + '"')
    }

    function o(t, i) {
        var s = e.find(t, {
            appId: i.appId
        });
        s ? e.merge(s, i) : t.push(i)
    }

    function a(t, i) {
        e.forEach(i, e.partial(o, t, e))
    }

    function r(t) {
        this.aspectSiteApi = t, this.aspectSiteApi.updateAspectGlobalData(c, {
            dynamicActions: []
        }), e.bindAll(this, e.functionsIn(this))
    }
    var c = "QuickActionBarAspect",
        p = e.map(t.constants.SUPPORTED_DYNAMIC_ACTIONS, "appId");
    Object.freeze(p), r.prototype = {
        updateDynamicActions: function(e) {
            if (s.isOpen("sv_qab")) {
                n(e = [].concat(e));
                var t = this.aspectSiteApi.getAspectGlobalData(c).dynamicActions;
                a(t, e), this.aspectSiteApi.updateAspectGlobalData(c, {
                    dynamicActions: t
                }), this.aspectSiteApi.forceUpdate()
            }
        }
    }, i.registerSiteAspect(c, r)
}), define("core/components/actionsAspectActions/bgScrubAction", ["lodash", "utils", "experiment"], function(e, t, i) {
    function s(e) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this.animations = this._siteData.animations, this._behaviors = [], this._isEnabled = !1, this._animateOnNextTick = !1, this._liveSequenceIds = [], this._currentPageBehaviors = [], this._behaviorsUpdated = !1, this._viewportHeightUpdated = !1
    }
    var n = t.balataConsts,
        o = t.triggerTypesConsts,
        a = {
            BackgroundParallax: [n.BALATA, n.MEDIA],
            BackgroundReveal: [n.BALATA, n.MEDIA],
            BackgroundZoom: [n.BALATA, n.MEDIA],
            BackgroundFadeIn: [n.BALATA],
            BackgroundBlurIn: [n.BALATA, n.MEDIA],
            SiteBackgroundParallax: []
        };
    return Object.freeze(a), s.prototype = e.create(Object.prototype, {
        constructor: s,
        ACTION_TRIGGERS: [o.PAGE_CHANGED, o.PAGE_RELOADED, o.TRANSITION_ENDED, o.SCROLL, o.RESIZE],
        ACTION_NAME: "bgScrub",
        _currentScroll: {
            x: 0,
            y: 0
        },
        _currentPopupScroll: {
            x: 0,
            y: 0
        },
        shouldEnable: function() {
            var e = "undefined" != typeof window,
                t = this._siteData.isTabletDevice(),
                i = this._siteData.isMobileDevice(),
                s = this._siteData.isMobileView();
            return e && !t && !i && !s
        },
        enableAction: function() {
            this._isEnabled || (this.initiateBehaviors(), this._tickerCallback = this._executeActionOnTick.bind(this), this.animations.addTickerEvent(this._tickerCallback), this._isEnabled = !0)
        },
        disableAction: function() {
            this._isEnabled && (this._animateOnNextTick = !1, this.animations.removeTickerEvent(this._tickerCallback), this._tickerCallback = null, this.stopAndClearAnimations(), this._currentPageBehaviors = [], this._isEnabled = !1)
        },
        isEnabled: function() {
            return this._isEnabled
        },
        executeAction: function() {
            e.isEmpty(this._currentPageBehaviors) || this.setAnimationsProgress()
        },
        setSequenceProgress: function(e, i, s) {
            var n = s.getSequence(e.sequenceId);
            n ? n.progress(i) : t.log.error("sequence id %s returned no sequence", e.sequenceId)
        },
        setAnimationsProgress: function() {
            var t = Math.max(this._currentScroll.y, 0);
            e.forEach(this._liveSequenceIds, function(e) {
                if (this.isComponentInViewport(e.compId, e.parentId)) {
                    var i = (this._viewportHeight + t - e.componentTop) / e.maxTravel;
                    this.setSequenceProgress(e, i, this.getComponentParent(e.parentId))
                }
            }.bind(this))
        },
        getComponentMeasure: function(t) {
            var i = this._siteData.measureMap || {};
            return {
                height: e.get(i, ["height", t], 0),
                top: e.get(i, ["absoluteTop", t], 0)
            }
        },
        setSiteMeasure: function() {
            this._viewportHeight = this._siteData.getScreenHeight(), this._siteHeight = this.getSiteHeight()
        },
        initiateBehaviors: function() {
            this._currentPageBehaviors = this.getCurrentPageBehaviors(this._behaviors, this._siteData.getPrimaryPageId())
        },
        getComponentParent: function(e) {
            return "masterPage" === e ? this._aspectSiteAPI.getMasterPage() : "siteBackground" === e ? this._aspectSiteAPI.getComponentById("SITE_BACKGROUND") : this._aspectSiteAPI.getCurrentPage()
        },
        isComponentInViewport: function(e, i) {
            if (t.viewportUtils.isAlwaysInViewport(this._aspectSiteAPI, i)) return !0;
            var s = this._currentScroll,
                n = this._aspectSiteAPI.getCurrentPopupId();
            return n && n === this._aspectSiteAPI.getRootOfComponentId(e) && (s = this._currentPopupScroll), t.viewportUtils.isInViewport(this._aspectSiteAPI, s, e)
        },
        getSequenceParams: function() {
            return {
                suppressReactRendering: !1,
                forgetSequenceOnComplete: !1,
                paused: !0
            }
        },
        getCurrentPageBehaviors: function(t, i) {
            return e.filter(t, function(e) {
                return e.action === this.ACTION_NAME && (e.pageId === i || "masterPage" === e.pageId || "siteBackground" === e.pageId)
            }.bind(this))
        },
        createSequences: function() {
            var t = !1;
            this._liveSequenceIds = e.map(this._currentPageBehaviors, function(i) {
                var s, n = "siteBackground" === i.pageId,
                    o = this.getComponentParent(i.pageId).sequence(),
                    r = this.getComponentMeasure(i.targetId),
                    c = this.animations.getProperties(i.name),
                    p = (c.getMaxTravel || e.noop)(r, this._viewportHeight, this._siteHeight) || this._viewportHeight,
                    l = i.params || {};
                l.browserFlags = this._siteData.browserFlags(), l.componentTop = r.top, l.componentHeight = r.height, l.viewPortHeight = this._viewportHeight, s = [
                    [i.targetId].concat(a[i.name])
                ], o.add(s, i.name, i.duration, i.delay, l), t = c.shouldDisableSmoothScrolling || t;
                var d = o.execute(this.getSequenceParams());
                return {
                    path: s,
                    compId: i.targetId,
                    parentId: i.pageId,
                    behaviorName: i.name,
                    componentTop: n ? this._viewportHeight : r.top,
                    componentHeight: r.height,
                    maxTravel: p,
                    sequenceId: d
                }
            }.bind(this)), i.isOpen("DisableSmoothScrolling") && t && this._siteData.browserFlags().shouldDisableSmoothScrolling && this._aspectSiteAPI.getSiteAspect("mouseWheelOverride").overrideMouseWheel()
        },
        handleTrigger: function(e) {
            if (this._isEnabled) switch (this._currentScroll = this._aspectSiteAPI.getSiteScroll(), this._currentPopupScroll = this._aspectSiteAPI.getCurrentPopupScroll(), e) {
                case o.PAGE_CHANGED:
                case o.TRANSITION_ENDED:
                    this.clearAllAndReload(0), this._animateOnNextTick = !0, this._behaviorsUpdated = !1;
                    break;
                case o.PAGE_RELOADED:
                case o.SCROLL:
                case o.RESIZE:
                    (this._behaviorsUpdated || this._viewportHeightUpdated) && (this.clearAllAndReload(0), this._behaviorsUpdated = !1, this._viewportHeightUpdated = !1), this._animateOnNextTick = !0
            }
        },
        _shouldForceResizeEvent: function() {
            this._siteData.getScreenHeight() !== this._viewportHeight && (this._viewportHeight = this._siteData.getScreenHeight(), this._viewportHeightUpdated = !0, this.handleTrigger(o.RESIZE))
        },
        _executeActionOnTick: function() {
            this._shouldForceResizeEvent(), this._animateOnNextTick && (this.executeAction(), this._animateOnNextTick = !1)
        },
        clearAllAndReload: function(e) {
            this.stopAndClearAnimations(e), this.initiateBehaviors(), this.setSiteMeasure(), this.createSequences()
        },
        stopAndClearAnimations: function(t) {
            var i = this._aspectSiteAPI.getSiteAspect("mouseWheelOverride");
            i && i.releaseMouseWheel && i.releaseMouseWheel(), t = e.isNumber(t) ? t : 1, e.forEach(this._liveSequenceIds, function(e) {
                var i = this.getComponentParent(e.parentId);
                i.getSequence(e.sequenceId) && i.stopSequence(e.sequenceId, t)
            }.bind(this)), this._liveSequenceIds = []
        },
        handleBehaviorsUpdate: function(e) {
            this._behaviors = e, this._behaviorsUpdated = !0
        },
        getSiteHeight: function() {
            var t = this._aspectSiteAPI.getSiteData().measureMap || {},
                i = this._aspectSiteAPI.getRenderFlag("extraSiteHeight");
            return e.get(t, "height.masterPage", 0) + (t.siteMarginBottom || 0) + (i || 0)
        }
    }), s
}), define("core/components/actionsAspectActions/baseAction", ["lodash", "utils"], function(e, t) {
    function i(t) {
        this._aspectSiteAPI = t, this._siteData = t.getSiteData(), this.animations = this._siteData.animations, this._isEnabled = !1, this._triggeredOnce = {}, e.bindAll(this, e({}).assignIn(this).pickBy(e.isFunction).keys().value())
    }
    var s = t.triggerTypesConsts;
    return i.prototype = e.create(Object.prototype, {
        constructor: i,
        ACTION_TRIGGERS: [],
        ACTION_NAME: "BASE_ACTION",
        ACTIONS_SUPPORTED: ["BASE_ACTION"],
        shouldEnable: function() {
            var e = "undefined" != typeof window,
                t = this._siteData.isTabletDevice(),
                i = this._siteData.isMobileDevice(),
                s = this._siteData.isMobileView();
            return e && !t && !i && !s
        },
        enableAction: function() {
            this._isEnabled || (this._triggeredOnce = {}, this._currentActions = {}, this._delayActionByTransitionDuration = 0, this._executeOnNextTick = [], this.resetActionState(), this._tickerCallback = this._executeActionOnTick.bind(this), this.animations.addTickerEvent(this._tickerCallback), this._isEnabled = !0)
        },
        disableAction: function() {
            this._isEnabled && (this._executeOnNextTick = [], this.animations.removeTickerEvent(this._tickerCallback), this._tickerCallback = null, this._isEnabled = !1, this._delayActionByTransitionDuration = 0, this.resetActionState())
        },
        isEnabled: function() {
            return this._isEnabled
        },
        triggerActions: function(t, i) {
            var s = this._aspectSiteAPI.getSiteAspect("behaviorsAspect");
            return e.forEach(t, function(e) {
                this._triggeredOnce[e] = !0
            }.bind(this)), i = e.defaults(i || {}, {
                action: this.ACTION_NAME
            }), s.handleActions(e(this._currentActions).pick(t).values().value(), i)
        },
        registerPageTransitionDuration: function(e) {
            this._delayActionByTransitionDuration = e
        },
        handleBehaviorsUpdate: e.noop,
        executeAction: e.noop,
        _executeActionOnTick: function() {
            if (!e.isEmpty(this._executeOnNextTick)) {
                var t = this._executeOnNextTick;
                this._executeOnNextTick = [], e.forEach(t, function(e) {
                    e()
                })
            }
        },
        executeOnNextTick: function(t) {
            this._executeOnNextTick = e(this._executeActionOnTick).concat([t]).uniq().value()
        },
        handleTrigger: function(t) {
            var i = e.toArray(arguments);
            switch (t) {
                case s.ACTIONS_ADDED_LAYOUTED:
                    i[1] = e.pickBy(i[1], function(t) {
                        return e.includes(this.ACTIONS_SUPPORTED, t.name)
                    }.bind(this)), e.assign(this._currentActions, i[1]);
                    break;
                case s.ACTIONS_REMOVED:
                    i[1] = e.pickBy(i[1], function(t) {
                        return e.includes(this.ACTIONS_SUPPORTED, t.name)
                    }.bind(this)), this._currentActions = e.omit(this._currentActions, e.keys(i[1]))
            }
            this._isEnabled && this.handleActionTrigger.apply(this, i)
        },
        handleActionTrigger: function() {
            throw "Need to implement handleTrigger in specific actions"
        },
        resetActionState: function() {
            throw "Need to implement resetActionState in specific actions"
        }
    }), i
}), define("core/components/actionsAspectActions/loadAction", ["lodash", "utils", "core/components/actionsAspectActions/baseAction"], function(e, t, i) {
    function s() {
        i.apply(this, arguments)
    }

    function n(i) {
        return e.pickBy(i, {
            sourceId: t.siteConstants.SITE_STRUCTURE_ID
        })
    }
    var o = t.triggerTypesConsts;
    return s.prototype = e.create(i.prototype, {
        constructor: s,
        ACTION_TRIGGERS: [o.SITE_READY, o.PAGE_RELOADED, o.PAGE_CHANGED, o.DID_LAYOUT, o.ACTIONS_REMOVED, o.ACTIONS_ADDED_LAYOUTED],
        ACTION_NAME: "load",
        ACTIONS_SUPPORTED: ["load"],
        shouldEnable: e.constant(!0),
        runAction: function() {
            var t = e(this._currentActions).omit(e.keys(this._triggeredOnce)).keys().value();
            this.triggerActions(t)
        },
        handleActionTrigger: function(t) {
            switch (t) {
                case o.ACTIONS_REMOVED:
                    this._triggeredOnce = e(this._triggeredOnce).omit(e.keys(arguments[1])).omit(e.keys(n(this._currentActions))).value();
                    break;
                case o.SITE_READY:
                case o.PAGE_RELOADED:
                case o.PAGE_CHANGED:
                case o.DID_LAYOUT:
                    this.executeOnNextTick(this.runAction)
            }
        },
        resetActionState: e.noop
    }), s
}), define("core/components/actionsAspectActions/screenInAction", ["lodash", "utils", "core/components/actionsAspectActions/baseAction"], function(e, t, i) {
    function s() {
        i.apply(this, arguments), this._currentScroll = {
            x: 0,
            y: 0
        }, this._currentPopupScroll = {
            x: 0,
            y: 0
        }, this._componentsLastViewportState = {}
    }
    var n = t.triggerTypesConsts;
    return s.prototype = e.create(i.prototype, {
        constructor: s,
        ACTION_TRIGGERS: [n.SCROLL, n.RESIZE, n.ACTIONS_ADDED_LAYOUTED, n.ACTIONS_REMOVED, n.DID_LAYOUT],
        ACTION_NAME: "screenIn",
        ACTIONS_SUPPORTED: ["screenIn", "viewportEnter", "viewportLeave"],
        getComponentParent: function(e) {
            return this._aspectSiteAPI.getPageById(e)
        },
        isComponentInViewport: function(i, s) {
            var n = this._aspectSiteAPI.getCurrentPopupId() === i.pageId ? this._currentPopupScroll : this._currentScroll;
            return s = e.isNumber(s) ? s : .15, t.viewportUtils.isAlwaysInViewport(this._aspectSiteAPI, i.sourceId) || t.viewportUtils.isInViewport(this._aspectSiteAPI, n, i.sourceId, s) || this.isChildOfFixedFooter(i.pageId, i.sourceId)
        },
        isChildOfFixedFooter: function(e, t) {
            var i = !1,
                s = this._aspectSiteAPI.getSiteData().measureMap.custom.SITE_FOOTER;
            if ("masterPage" === e && s && s.isFixedPosition) {
                var n = this._aspectSiteAPI.getComponentById("SITE_FOOTER");
                i = this.isDescendantOf(n.props.structure, t)
            }
            return i
        },
        isDescendantOf: function(t, i) {
            return !!t.components && e.some(t.components, function(e) {
                return e.id === i || this.isDescendantOf(e, i)
            }.bind(this))
        },
        runScreenInActions: function(t) {
            var i = e(t).omit(e.keys(this._triggeredOnce)).pickBy(this.isComponentInViewport).keys().value();
            this.triggerActions(i)
        },
        runViewportActions: function(t) {
            var i = e.transform(t, function(t, i) {
                    e.isUndefined(t[i.sourceId]) && (t[i.sourceId] = this.isComponentInViewport(i, 0))
                }.bind(this), {}),
                s = e(t).pickBy(function(e) {
                    var t = this._componentsLastViewportState[e.sourceId],
                        s = i[e.sourceId];
                    return "viewportEnter" === e.name & s && !t || "viewportLeave" === e.name & t && !s
                }.bind(this)).keys().value();
            e.assign(this._componentsLastViewportState, i), this.triggerActions(s)
        },
        runAction: function() {
            var t = e.pickBy(this._currentActions, ["name", "screenIn"]),
                i = e.pickBy(this._currentActions, ["name", "viewportEnter"]),
                s = e.pickBy(this._currentActions, ["name", "viewportLeave"]),
                n = e.assign({}, i, s);
            this.runScreenInActions(t), this.runViewportActions(n)
        },
        handleActionTrigger: function(t) {
            switch (this._currentScroll = this._aspectSiteAPI.getSiteScroll(), this._currentPopupScroll = this._aspectSiteAPI.getCurrentPopupScroll(), t) {
                case n.ACTIONS_REMOVED:
                    this._triggeredOnce = e.omit(this._triggeredOnce, e.keys(e.toArray(arguments)[1]));
                    break;
                case n.DID_LAYOUT:
                case n.SCROLL:
                case n.RESIZE:
                case n.ACTIONS_ADDED_LAYOUTED:
                case n.PAGE_CHANGED:
                    var i = 1e3 * Math.max(this._delayActionByTransitionDuration - .2, 0);
                    i > 0 ? e.delay(function() {
                        this._delayActionByTransitionDuration = 0, this.executeOnNextTick(this.runAction)
                    }.bind(this), i) : this.executeOnNextTick(this.runAction)
            }
        },
        shouldEnable: function() {
            return "undefined" != typeof window
        },
        resetActionState: e.noop
    }), s
}), define("core/components/actionsAspectActions/modeChangeAction", ["lodash", "zepto", "utils", "reactDOM"], function(e, t, i, s) {
    function n(t, i, s) {
        var n = e.get(s, "params.modeIds");
        switch (s.action) {
            case "modeIn":
                return "enter" === t[s.targetId] && e.every(n, function(e) {
                    return !0 === i[e]
                });
            case "modeOut":
                return "leave" === t[s.targetId] && e.every(n, function(e) {
                    return !1 === i[e]
                });
            case "modeChange":
                return "transition" === t[s.targetId] && e.every(n, function(t) {
                    return !e.isUndefined(i[t])
                });
            default:
                return !1
        }
    }

    function o(t, i, s) {
        return e(t).filter(e.partial(n, i, s)).map(function(t) {
            return e.assign({
                animationType: i[t.targetId]
            }, t)
        }).keyBy("targetId").value()
    }

    function a(e) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this.animations = this._siteData.animations, this._behaviors = [], this._isEnabled = !1, this._animateOnNextTick = !1, this._behaviorsById = {}, this.playingSequences = {}, this.componentAnimationsInfo = {}
    }
    var r = i.triggerTypesConsts,
        c = {
            ENTER: i.siteConstants.Animations.Modes.AnimationType.ENTER,
            LEAVE: i.siteConstants.Animations.Modes.AnimationType.LEAVE,
            TRANSITION: i.siteConstants.Animations.Modes.AnimationType.TRANSITION
        },
        p = {};
    p[c.ENTER] = c.LEAVE, p[c.LEAVE] = c.ENTER, Object.freeze(p);
    var l = {};
    l[c.ENTER] = "modeIn", l[c.LEAVE] = "modeOut", l[c.TRANSITION] = "modeChange", Object.freeze(l);
    var d = {
        "wysiwyg.viewer.components.SiteButton": i.siteConstants.Animations.TransitionType.NO_SCALE,
        "wysiwyg.viewer.components.WRichText": i.siteConstants.Animations.TransitionType.NO_DIMESIONS
    };
    return a.prototype = e.create(Object.prototype, {
        constructor: a,
        ACTION_TRIGGERS: [r.MODE_CHANGED_INIT, r.MODE_CHANGED_EXECUTE],
        ACTION_NAME: "modeChange",
        ACTIONS_SUPPORTED: ["modeChange", "modeIn", "modeOut"],
        shouldEnable: function() {
            var e = "undefined" != typeof window,
                t = this._siteData.isTabletDevice(),
                i = this._siteData.isMobileDevice();
            return e && !t && !i
        },
        enableAction: function() {
            this._isEnabled || (this._tickerCallback = this._executeActionOnTick.bind(this), this.animations.addTickerEvent(this._tickerCallback), this._isEnabled = !0)
        },
        disableAction: function() {
            this._isEnabled && (this._animateOnNextTick = !1, this.animations.removeTickerEvent(this._tickerCallback), this._tickerCallback = null, this.stopAndClearAnimations(), this.revertHideElementsByAnimationType(this._behaviorsById), this._behaviorsById = {}, this._isEnabled = !1)
        },
        isEnabled: function() {
            return this._isEnabled
        },
        needToRunPreConditions: function() {
            return !1
        },
        _executeActionOnTick: function() {
            this._animateOnNextTick && (this._executeAction(), this._animateOnNextTick = !1)
        },
        stopAndClearAnimations: function() {
            this._behaviorsById = {}, e.forEach(this.playingSequences, function(e, t) {
                this.getComponentPage(e.parentId).stopSequence(e.sequence.getId(), 1), this.handleSequenceEnded(t, e.parentId, e.type)
            }.bind(this)), e.forEach(this.componentAnimationsInfo, function(e, t) {
                e.hasPendingAnimation = !1, this.handleSequenceEnded(t, e.pageId, e.type)
            }.bind(this))
        },
        _executeAction: function() {
            e.isEmpty(this._behaviorsById) || e.assign(this.playingSequences, this.playJsAnimations())
        },
        executeAction: function() {
            this.handleTrigger.apply(this, arguments)
        },
        clearPlayedBehaviors: function(t) {
            this._behaviorsById = e.omitBy(this._behaviorsById, function(e, i) {
                return t[i]
            })
        },
        convertBehaviorTimingFunctionToCSS: function(e) {
            return i.siteConstants.Animations.TimingFunctions[e]
        },
        clearCssTransitionFromNode: function(e) {
            e.css({
                "transition-property": "",
                "transition-duration": "",
                "transition-delay": "",
                "transition-timing-function": "",
                "-webkit-transition-timing-function": "",
                "-moz-transition-timing-function": "",
                "-o-transition-timing-function": ""
            })
        },
        addCssTransitionToNode: function(e, t) {
            var i = this.convertBehaviorTimingFunctionToCSS(e.params.timingFunction);
            t.css({
                "transition-property": "background-color, color !important",
                "transition-duration": e.duration + "s !important",
                "transition-delay": e.delay + "s !important",
                "transition-timing-function": i + " !important",
                "-webkit-transition-timing-function": i + " !important",
                "-moz-transition-timing-function": i + " !important",
                "-o-transition-timing-function": i + " !important"
            })
        },
        initCssTransitions: function() {
            var i = e.filter(this._behaviorsById, {
                animationType: "transition"
            });
            i.length && e.forEach(i, function(e) {
                var i = e.targetId,
                    s = t(this.getComponentNode(e.pageId, i));
                this.componentAnimationsInfo[i].didCssTransitionStartExecuting || (this.componentAnimationsInfo[i].didCssTransitionStartExecuting = !0, this.addCssTransitionToNode(e, s))
            }.bind(this))
        },
        handleSequenceEnded: function(e, i, s) {
            s === c.TRANSITION && this.clearCssTransitionFromNode(t(this.getComponentNode(i, e))), delete this.playingSequences[e], this.notifyAnimationEnded(e)
        },
        playJsAnimations: function() {
            var t = {},
                i = {};
            return e.forEach(this._behaviorsById, function(e) {
                var s = this.getComponentPage(e.pageId),
                    n = e.targetId,
                    o = this.playingSequences[n],
                    a = o && p[o.type] === e.animationType,
                    r = o && o.type === e.animationType;
                t[n] = !0, r || (a ? this.reverseAnimation(e) : (o && s.stopSequence(o.sequence.id), i[n] = {
                    sequence: s.sequence(),
                    parentId: e.pageId,
                    type: e.animationType
                }, this.addAnimationToSequence(e, this.componentAnimationsInfo[e.targetId], i[e.targetId].sequence)))
            }.bind(this)), e.forEach(i, this.executeSequenceIfNeeded.bind(this)), this.clearPlayedBehaviors(t), i
        },
        reverseAnimation: function(e) {
            var t = e.targetId,
                i = this.getComponentPage(e.pageId),
                s = this.playingSequences[t];
            s.type = e.animationType, this.componentAnimationsInfo[t].hasPendingAnimation = !1, i.reverseSequence(s.sequence.getId())
        },
        executeSequenceIfNeeded: function(e, t) {
            var i = e.sequence;
            if (i.hasAnimations()) {
                var s = this.componentAnimationsInfo[t].progress,
                    n = this.handleSequenceEnded.bind(this, t, e.parentId, e.type);
                this.componentAnimationsInfo[t].hasPendingAnimation = !1, i.onCompleteAll(n), i.onReverseAll(n), s && i.onInit(function(e) {
                    e.progress(1 - s)
                }), i.execute()
            }
        },
        getComponentPage: function(e) {
            return this._aspectSiteAPI.getPageById(e)
        },
        getPageComponents: function(e) {
            return this._aspectSiteAPI.getPageComponents(e)
        },
        getComponentNode: function(e, t) {
            var i = this.getPageComponents(e)[t];
            return i ? s.findDOMNode(i) : null
        },
        addAnimationToSequence: function(e, t, s) {
            var n = this.getPageComponents(e.pageId),
                o = e.targetId;
            if (!n[o]) return null;
            var a = n[o].props.structure,
                r = e.duration,
                p = e.delay;
            if (e.animationType === c.TRANSITION) {
                var l = t.prevLayout,
                    u = e.name + (d[a.componentType] || i.siteConstants.Animations.TransitionType.SCALE);
                s.add(o, u, r, p, {
                    from: l
                })
            } else s.add(o, e.name, r, p, e.params, 0);
            return s.add(o, "BaseClear", 0, 0, {
                props: "clip,opacity,transform",
                immediateRender: !1
            }), o
        },
        hideElementsByAnimationType: function(t) {
            e.forEach(t, function(e, t) {
                this.animations.getProperties(e.name).hideOnStart && (this.getComponentNode(e.pageId, t).style.visibility = "hidden")
            }.bind(this))
        },
        revertHideElementsByAnimationType: function(t) {
            e.forEach(t, function(t) {
                e.forEach(t, function(e, t) {
                    this.animations.getProperties(e.name).hideOnStart && (this.getComponentNode(e.pageId, t).style.visibility = "")
                }.bind(this))
            }.bind(this))
        },
        initiateBehaviors: function(t, i, s, n, o) {
            this._behaviorsById = e.assign(this._behaviorsById, i), e.forEach(s, function(e, i) {
                var s = this.componentAnimationsInfo[i] = this.componentAnimationsInfo[i] || {};
                s.pageId = t, s.type = e, s.hasPendingAnimation = !0, s.onComplete = o, e === c.TRANSITION && (s.prevLayout = n[i])
            }.bind(this))
        },
        handleBehaviorsUpdate: function(e) {
            this._behaviors = e
        },
        runJsAnimationsOnNextTick: function() {
            this._animateOnNextTick = !0
        },
        runJsAnimationsImmediately: function() {
            this._executeAction()
        },
        notifyAnimationEnded: function(e) {
            if (this.componentAnimationsInfo[e] && !this.componentAnimationsInfo[e].hasPendingAnimation) {
                var t = {};
                t[e] = this.componentAnimationsInfo[e].type;
                var i = this.componentAnimationsInfo[e].onComplete;
                delete this.componentAnimationsInfo[e], i(t)
            }
        },
        handleDidLayout: function() {
            this._aspectSiteAPI.unRegisterFromDidLayout();
            var e = this._siteData.getBrowser();
            e && (e.ie || e.edge || e.safari) ? this.runJsAnimationsImmediately() : this.runJsAnimationsOnNextTick()
        },
        handleReverseTransitionAnimations: function(t) {
            var i = e.transform(t, function(e, t, i) {
                    t === c.TRANSITION && e.push(i)
                }, []),
                s = e.transform(this.playingSequences, function(e, t, i) {
                    t.type === c.TRANSITION && e.push(i)
                }, []),
                n = e.intersection(i, s);
            e.forEach(n, function(e) {
                var t = this.componentAnimationsInfo[e],
                    i = this.getComponentPage(t.pageId),
                    s = this.playingSequences[e].sequence.getId(),
                    n = i.getSequence(s),
                    o = this.getComponentNode(t.pageId, e);
                t.progress = n.progress(), n.set(o, {
                    clearProps: "clip,opacity"
                }), i.stopSequence(s, 1), delete this.playingSequences[e]
            }.bind(this))
        },
        handleTrigger: function(t, i) {
            if (this._isEnabled) switch (t) {
                case r.MODE_CHANGED_INIT:
                    var s = o(this._behaviors, i.componentAnimations, i.modeChanges),
                        n = e.pick(i.componentAnimations, e.keys(s)),
                        a = e.omit(i.componentAnimations, e.keys(s));
                    this.initiateBehaviors(i.pageId, s, n, i.transitioningComponentsPrevLayout, i.onComplete), this.handleReverseTransitionAnimations(i.componentAnimations), this.initCssTransitions(), i.onComplete(a);
                    break;
                case r.MODE_CHANGED_EXECUTE:
                    this.hideElementsByAnimationType(this._behaviorsById), this._aspectSiteAPI.registerToDidLayout(this.handleDidLayout.bind(this))
            } else i && i.onComplete && i.onComplete(i.componentAnimations)
        }
    }), a
}), define("core/components/actionsAspectActions/pageTransitionAction", ["lodash", "utils"], function(e, t) {
    function i(e, t) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this.animations = this._siteData.animations, this._behaviors = t, this._isEnabled = !1, this._nextPageTransition = {}, this._nextPageBGTransition = {}, this._nextPageInitialScrollData = null
    }
    var s = t.triggerTypesConsts;
    return e.assign(i.prototype, {
        ACTION_TRIGGERS: [s.PAGE_CHANGED],
        ACTION_NAME: "pageTransition",
        shouldEnable: function() {
            var e = "undefined" != typeof window,
                t = this._siteData.isTabletDevice(),
                i = this._siteData.isMobileDevice(),
                s = this._siteData.isMobileView();
            return e && !t && !i && !s
        },
        enableAction: function() {
            this._isEnabled = !0
        },
        disableAction: function() {
            this._isEnabled = !1
        },
        isEnabled: function() {
            return this._isEnabled
        },
        executeAction: function() {
            this.executeTransitions(this._nextPageTransition, this._nextPageBGTransition, this._nextPageInitialScrollData), this._nextPageTransition = {}, this._nextPageBGTransition = {}, this._nextPageInitialScrollData = null
        },
        handleTrigger: function(t) {
            this._isEnabled || e.isEmpty(this._nextPageTransition) || (this._nextPageTransition.duration = 0, this._nextPageTransition.transitionName = "NoTransition"), t === s.PAGE_CHANGED && this.executeAction()
        },
        handleBehaviorsUpdate: function(e) {
            this._behaviors = e
        },
        registerNextPageTransition: function(e, t, i, s, n, o, a, r) {
            this._nextPageTransition = {
                comp: e,
                previousRef: t,
                currentRef: i,
                transitionName: s,
                duration: n,
                delay: o,
                params: a,
                callbacks: r
            }
        },
        registerNextBGPageTransition: function(e, t, i, s) {
            this._nextPageBGTransition = {
                comp: e,
                previousRef: t,
                currentRef: i,
                callbacks: s
            }
        },
        registerNextAnchorScroll: function(e) {
            this._nextPageInitialScrollData = e
        },
        getNormalizedTransitionDuration: function(e, t) {
            var i = e;
            return (t = t || {}).width ? i = e * t.width / t.siteWidth : t.height && (i = e * (Math.max(t.height, t.screenHeight) / t.screenHeight)), Math.min(i, 1.2)
        },
        executeTransitions: function(i, s, n) {
            var o, a, r = this._aspectSiteAPI,
                c = "function" == typeof i.params ? i.params() : i.params,
                p = this.getNormalizedTransitionDuration(i.duration || 0, c);
            if (!e.isEmpty(i)) {
                o = i.comp.sequence(), (a = i.callbacks || {}).onStart && o.onStartAll(a.onStart), a.onInterrupt && o.onInterruptAll(a.onInterrupt), a.onComplete && o.onCompleteAll(a.onComplete);
                var l = {
                    sourceRefs: i.previousRef,
                    destRefs: i.currentRef
                };
                o.add(l, i.transitionName, p, i.delay, c).add([i.previousRef, i.currentRef], "BaseClear", 0, 0, {
                    props: "opacity,x,y",
                    immediateRender: !1
                }).execute()
            }
            e.isEmpty(s) || s.comp.transition(s.previousRef, s.currentRef, i.transitionName, p, i.delay, c, s.callbacks);
            var d = r.getSiteData(),
                u = t.scrollAnchors.calcAnchorScrollToPosition(n, r);
            n = u.anchorQuery, this.animations.animate("BaseScroll", r.getSiteContainer(), p, i.delay, {
                x: u.x || 0,
                y: u.y || 0,
                callbacks: {
                    onComplete: function() {
                        var e = this._aspectSiteAPI.getSiteAspect("anchorChangeEvent");
                        e && e.setSelectedAnchorAsync(d, n, d.getPrimaryPageId(), t.constants.ACTIVE_ANCHOR.DELAY_TO_END_SCROLL)
                    }.bind(this)
                }
            })
        }
    }), i
}), define("core/components/actionsAspectActions/exitAction", ["lodash", "utils"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this.animations = this._siteData.animations, this._behaviors = [], this._isEnabled = !1, this._liveSequenceIds = [], this._animateOnNextTick = !1, this._pendingComponentExits = []
    }
    var s = t.triggerTypesConsts;
    return i.prototype = e.create(Object.prototype, {
        constructor: i,
        ACTION_TRIGGERS: [s.PAGE_CHANGED, s.PAGE_RELOADED],
        ACTION_NAME: "exit",
        shouldEnable: function() {
            var e = "undefined" != typeof window,
                t = this._siteData.isTabletDevice(),
                i = this._siteData.isMobileDevice(),
                s = this._siteData.isMobileView();
            return e && !t && !i && !s
        },
        enableAction: function() {
            this._isEnabled || (this._tickerCallback = this._executeActionOnTick.bind(this), this.animations.addTickerEvent(this._tickerCallback), this._isEnabled = !0)
        },
        disableAction: function() {
            if (this._isEnabled) {
                this._animateOnNextTick = !1, this.animations.removeTickerEvent(this._tickerCallback), this._tickerCallback = null, this.stopAndClearAnimations();
                var t = e.map(this._pendingComponentExits, "callback");
                this._pendingComponentExits = [], this._isEnabled = !1, e.forEach(t, function(e) {
                    e()
                })
            }
        },
        isEnabled: function() {
            return this._isEnabled
        },
        executeAction: function() {
            if (!e.isEmpty(this._pendingComponentExits)) {
                var t = this._pendingComponentExits;
                this._pendingComponentExits = [], e.forEach(t, function(e) {
                    this._liveSequenceIds = this._liveSequenceIds.concat(this.playPageAnimations(e.leavingCompIds, e.callback))
                }.bind(this))
            }
        },
        playPageAnimations: function(t, i) {
            function s() {
                0 === --c && i()
            }
            var n = {},
                o = {},
                a = [],
                r = e(this._behaviors).filter(function(i) {
                    return i.action === this.ACTION_NAME && e.includes(t, i.sourceId)
                }.bind(this)).keyBy("sourceId").value();
            e.forEach(r, function(e) {
                var t = this.getComponentParent(e.pageId);
                t.refs[e.sourceId] && (o[e.pageId] || (o[e.pageId] = t.sequence(), n[e.pageId] = []), n[e.pageId].push(this.addAnimationToSequence(e, o)))
            }.bind(this));
            var c = 1;
            return e.forEach(o, function(t, i) {
                t.hasAnimations() && (c++, t.onCompleteAll(s), t.onInterruptAll(s), n[i] = e.compact(n[i]), a.push({
                    parentId: i,
                    sequenceId: t.getId()
                }), t.execute())
            }), s(), a
        },
        getComponentParent: function(e) {
            return this._aspectSiteAPI.getPageById(e)
        },
        addAnimationToSequence: function(e, t) {
            var i = t[e.pageId];
            return i.add(e.targetId, e.name, e.duration, e.delay, e.params, 0), i.add(e.targetId, "BaseClear", 0, 0, {
                props: "clip,opacity,transform",
                immediateRender: !1
            }), e.targetId
        },
        registerComponentsExit: function(e, t) {
            this._isEnabled ? (this._pendingComponentExits.push({
                leavingCompIds: e,
                callback: t
            }), this._animateOnNextTick = !0) : t()
        },
        handleTrigger: function() {},
        handleBehaviorsUpdate: function(e) {
            this._behaviors = e
        },
        _executeActionOnTick: function() {
            this._animateOnNextTick && (this.executeAction(), this._animateOnNextTick = !1)
        },
        stopAndClearAnimations: function() {
            e.forEach(this._liveSequenceIds, function(e) {
                var t = this.getComponentParent(e.parentId);
                t && t.stopSequence(e.sequenceId, 1)
            }.bind(this)), this._liveSequenceIds = []
        }
    }), i
}), define("core/components/siteAspects/actionsAspect", ["lodash", "core/core/siteAspectsRegistry", "core/components/actionsAspectActions/bgScrubAction", "core/components/actionsAspectActions/loadAction", "core/components/actionsAspectActions/screenInAction", "core/components/actionsAspectActions/modeChangeAction", "core/components/actionsAspectActions/pageTransitionAction", "core/components/actionsAspectActions/exitAction", "utils"], function(e, t, i, s, n, o, a, r, c) {
    function p(e) {
        this._aspectSiteAPI = e, this._siteData = e.getSiteData(), this._behaviors = [], this._pageTransitionComplete = [], this._pageNavigationCanceled = [], this._isDuringPageTransition = !1, this._navigationComplete = [], this._actions = {}, this._previouslyRegisteredPages = [], this._didFirstLayout = !1, this._didPageChange = !1, this._noopFirstLayout = this._siteData.isClientAfterSSR(), this.registerAction(i), this.registerAction(s), this.registerAction(n), this.registerAction(a), this.registerAction(r), this.registerAction(o), this.enableAction("pageTransition"), "preview" === (this._aspectSiteAPI.getRenderFlag("componentViewMode") || "preview") && (this.enableAction("bgScrub"), this.enableAction("screenIn"), this.enableAction("exit"), this.enableAction("load"), this.enableAction("modeChange")), this._registerTriggers(), e.registerToAddedRenderedRootsDidLayout(l.bind(this))
    }

    function l(t) {
        e.some(t, this._siteData.isPopupPage.bind(this._siteData)) && this.handleNavigationComplete()
    }
    var d = c.triggerTypesConsts;
    p.prototype.previewAnimation = function(e, t, i, s) {
        var n = this._aspectSiteAPI.getPageById(t).sequence(),
            o = {
                props: "clip,opacity,transform,transform-origin",
                immediateRender: !1
            };
        return n.add(e, i.name, i.duration, i.delay, i.params), n.add(e, "BaseClear", 0, 0, o), s && n.onCompleteAll(s), n.execute()
    }, p.prototype.previewTransition = function(e, t, i, s, n) {
        var o;
        if (o = "masterPage" === i ? this._aspectSiteAPI.getMasterPage() : this._aspectSiteAPI.getCurrentPage()) {
            var a = o.sequence(),
                r = {
                    props: "clip,opacity,transform,transform-origin",
                    immediateRender: !1
                };
            return a.add({
                sourceRefs: e,
                destRefs: t
            }, s.name, s.duration, s.delay, s.params), a.add(e.concat(t), "BaseClear", 0, 0, r), n && a.onCompleteAll(n), a.execute()
        }
    }, p.prototype.stopPreviewAnimation = function(e) {
        var t = this._aspectSiteAPI.getMasterPage();
        (this._aspectSiteAPI.getCurrentPopup() || this._aspectSiteAPI.getCurrentPage()).stopSequence(e, 1), t.stopSequence(e, 1)
    }, p.prototype.enableAction = function(e) {
        this._actions[e] && this._actions[e].shouldEnable() && this._actions[e].enableAction()
    }, p.prototype.isActionDisabled = function(e) {
        return this._actions[e] && !this._actions[e].isEnabled()
    }, p.prototype.needToRunPreConditions = function(e) {
        var t = e.name;
        return !this._actions[t] || !this._actions[t].needToRunPreConditions || this._actions[t].needToRunPreConditions(e)
    }, p.prototype.disableAction = function(e) {
        this._actions[e] && this._actions[e].disableAction()
    }, p.prototype.executeAction = function(t, i) {
        var s = e.drop(arguments, 2);
        if (this._actions[t]) {
            var n = this._actions[t];
            n.executeAction.apply(n, [i].concat(s))
        }
    }, p.prototype.registerBehaviors = function(t, i, s) {
        s = e.isString(s) ? JSON.parse(s) : s, s = e.map(s, function(s) {
            return e.assign({}, s, {
                pageId: i,
                sourceId: t,
                targetId: s && s.targetId || t
            })
        }), this.unRegisterBehaviors(t, s, !1), this._behaviors = this._behaviors.concat(s), this._propagateBehaviorsUpdate(this._behaviors)
    }, p.prototype.unRegisterBehaviors = function(t, i, s) {
        s = !1 !== s, this._behaviors = e.reject(this._behaviors, {
            sourceId: t
        }), s && this._propagateBehaviorsUpdate(this._behaviors)
    }, p.prototype.resetBehaviorsRegistration = function() {
        this._previouslyRegisteredPages = [], this._behaviors = [], this._propagateBehaviorsUpdate(this._behaviors)
    }, p.prototype.registerNextPageTransition = function(e, t, i, s, n, o, a, r) {
        this._isDuringPageTransition = !0, this._actions.pageTransition.registerNextPageTransition(e, t, i, s, n, o, a, r), this._actions.screenIn.registerPageTransitionDuration(n)
    }, p.prototype.registerPageTransitionComplete = function(t) {
        e.isFunction(t) && this._pageTransitionComplete.push(t)
    }, p.prototype.registerToPageNavigationCanceled = function(t) {
        e.isFunction(t) && this._pageNavigationCanceled.push(t)
    }, p.prototype.handlePagePageNavigationCanceled = function() {
        this._aspectSiteAPI.endingPageTransition(), this._isDuringPageTransition = !1, e.forEach(this._pageNavigationCanceled, function(e) {
            e()
        }), this._pageNavigationCanceled = [], this.handleNavigationComplete()
    }, p.prototype.handlePageTransitionComplete = function(t, i) {
        this._aspectSiteAPI.endingPageTransition(), this._isDuringPageTransition = !1, e.forEach(this._pageTransitionComplete, function(e) {
            e(t, i)
        }), this._pageTransitionComplete = [], this.handleNavigationComplete()
    }, p.prototype.registerNavigationComplete = function(t) {
        e.isFunction(t) && this._navigationComplete.push(t)
    }, p.prototype.handleNavigationComplete = function() {
        this._isDuringPageTransition || (this._aspectSiteAPI.endingPageTransition(), e.forEach(this._navigationComplete, function(e) {
            e()
        }), this._navigationComplete = [], this._pageNavigationCanceled = [])
    }, p.prototype.registerNextBGPageTransition = function(e, t, i, s) {
        this._actions.pageTransition.registerNextBGPageTransition(e, t, i, s)
    }, p.prototype.registerNextAnchorScroll = function(e) {
        this._actions.pageTransition.registerNextAnchorScroll(e)
    }, p.prototype.registerComponentsExit = function(e, t) {
        this._actions.exit.registerComponentsExit(e, t)
    }, p.prototype.registerAction = function(t) {
        var i = new t(this._aspectSiteAPI),
            s = [].concat(i.ACTIONS_SUPPORTED || i.ACTION_NAME);
        e.forEach(s, function(e) {
            if (this._actions[e]) throw new Error("Action " + e + " already registered");
            if (!e) throw new Error("Action missing it's ACTION_NAME parameter, cannot register it");
            this._actions[e] = i
        }.bind(this))
    }, p.prototype._propagateTrigger = function(t) {
        var i = arguments;
        e.forEach(this._actions, function(s) {
            e.includes(s.ACTION_TRIGGERS, t) && s.handleTrigger.apply(s, i)
        })
    }, p.prototype._propagatePageChangeTriggerAfterLayout = function() {
        if (this._didPageChange || !this._noopFirstLayout && !this._didFirstLayout) {
            this._noopFirstLayout = !1;
            var e = this._aspectSiteAPI.getSiteData(),
                t = e.getExistingRootNavigationInfo(e.getPrimaryPageId());
            this._aspectSiteAPI.getSiteAspect("siteMembers").isPageAllowed(t) && this._propagateTrigger(d.PAGE_CHANGED)
        }
        this._didPageChange = !1, this._propagateTrigger(d.DID_LAYOUT)
    }, p.prototype._enablePageChangeTransitionsAfterLayout = function() {
        this._didFirstLayout ? this._didPageChange = !0 : this._didFirstLayout = !0
    }, p.prototype.reloadPageAnimations = function() {
        this._propagateTrigger(d.PAGE_RELOADED)
    }, p.prototype._propagateBehaviorsUpdate = function(t) {
        e.forEach(this._actions, function(i) {
            i.handleBehaviorsUpdate(e.cloneDeep(t))
        })
    }, p.prototype._registerTriggers = function() {
        this._aspectSiteAPI.registerToSiteReady(this._propagateTrigger.bind(this, d.SITE_READY)), this.registerPageTransitionComplete(this._propagateTrigger.bind(this, d.TRANSITION_ENDED)), this._aspectSiteAPI.registerToUrlPageChange(this._enablePageChangeTransitionsAfterLayout.bind(this)), this._aspectSiteAPI.registerToSiteReady(this._enablePageChangeTransitionsAfterLayout.bind(this)), this._aspectSiteAPI.registerToDidLayout(this._propagatePageChangeTriggerAfterLayout.bind(this)), this._aspectSiteAPI.registerToScroll(this._propagateTrigger.bind(this, d.SCROLL)), this._aspectSiteAPI.registerToResize(this._propagateTrigger.bind(this, d.RESIZE)), this._aspectSiteAPI.registerToModeChange(this._propagateTrigger.bind(this, d.MODE_CHANGED_INIT)), this._aspectSiteAPI.registerToModeChange(this._propagateTrigger.bind(this, d.MODE_CHANGED_EXECUTE))
    }, p.prototype.actionsRemoved = function(e) {
        this._propagateTrigger(d.ACTIONS_REMOVED, e)
    }, p.prototype.actionsAddedLayouted = function(e) {
        this._propagateTrigger(d.ACTIONS_ADDED_LAYOUTED, e)
    }, t.registerSiteAspect("actionsAspect", p)
}), define("core/components/siteAspects/DynamicClientSpecMapAspect", ["lodash", "core/core/siteAspectsRegistry", "utils"], function(e, t, i) {
    function s(t, s) {
        var n = t.replace(/\/$/, "") + "/_api/dynamicmodel",
            o = e.isEmpty(s) ? "" : "?" + i.urlUtils.toQueryString(s);
        return "undefined" != typeof window && (n = n.replace(/^[^:]+:/, window.location.protocol)), n + o
    }

    function n(e, t, i) {
        var n = "error",
            o = {
                url: s(e.getExternalBaseUrl(), i.urlParams),
                destination: ["dynamicClientSpecMapLoaded"],
                force: !0,
                cache: a,
                syncCache: !0,
                transformFunc: function() {
                    return !0
                },
                callback: function(i, s) {
                    n = "success", s.clientSpecMap && this._aspectSiteAPI.setClientSpecMap(s.clientSpecMap), s.svSession && (e.pubSvSession(s.svSession), this._aspectSiteAPI._site.notifyAspects(this._aspectSiteAPI._site.supportedEvents.svSessionChange, s.svSession)), s.hs && e.setHubSecurityToken(s.hs), s.ctToken && e.setCTToken(s.ctToken), t && t(s)
                }.bind(this)
            };
        e.store.loadBatch([o], function() {
            "error" === n && t({
                status: n
            })
        }), a = !1
    }

    function o(t) {
        this._aspectSiteAPI = t;
        var i = t.getSiteData();
        this.reloadClientSpecMap = function(t, s) {
            i && i.isViewerMode() && n.call(this, i, t, e.isObject(s) ? s : {})
        }
    }
    var a = !0;
    t.registerSiteAspect("dynamicClientSpecMap", o)
}), define("core/components/siteAspects/VerticalAnchorsMenuAspect", ["core/core/siteAspectsRegistry", "lodash"], function(e, t) {
    function i(e, i) {
        t.forEach(e, function(e) {
            e(i)
        })
    }

    function s(e, i) {
        return e ? {
            top: e.absoluteTop[i],
            left: t.get(e, "custom[" + i + "].backgroundLeft", 0) + e.absoluteLeft[i],
            height: e.height[i],
            width: t.get(e, "custom[" + i + "].backgroundWidth", e.width[i])
        } : {}
    }

    function n() {
        var e = this.aspectSiteAPI.getAspectComponentData(a),
            n = this.aspectSiteAPI.getSiteData().measureMap,
            o = t.mapValues(e, function(e, i) {
                return t.assign(e, {
                    layout: s(n, i)
                })
            }),
            r = this.aspectSiteAPI;
        t.forOwn(o, function(e, t) {
            r.updateAspectComponentData(a, t, e)
        }), i(this.observers)
    }

    function o(e) {
        i(this.observers, e.y)
    }
    var a = "VerticalAnchorsMenuAspect",
        r = function(e) {
            this.aspectSiteAPI = e, this.observers = [], t.bindAll(this, t.functionsIn(this)), e.registerToDidLayout(n.bind(this)), e.registerToScroll(o.bind(this))
        };
    return r.prototype = {
        updateInformation: function(e, n) {
            var o = this.aspectSiteAPI.getSiteData().measureMap;
            o && t.assign(n, {
                layout: s(o, e)
            }), this.aspectSiteAPI.updateAspectComponentData(a, e, n), i(this.observers)
        },
        registerObserver: function(e) {
            this.observers.push(e)
        },
        unregisterObserver: function(e) {
            t.pull(this.observers, e)
        }
    }, e.registerSiteAspect("VerticalAnchorsMenuAspect", r), r
}), define("core/components/siteAspects/SiteVisibilityAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._aspectSiteAPI.registerToSiteReady(function() {
            this._aspectSiteAPI.registerToVisibilityChange(this.propagateEvent.bind(this))
        }.bind(this)), this.registeredCallbacks = {}
    }
    i.prototype = {
        propagateEvent: function() {
            var t = this._aspectSiteAPI.getVisibilityState();
            e.forEach(this.registeredCallbacks, function(e) {
                e(t)
            })
        },
        register: function(e, t, i) {
            this.registeredCallbacks[e] = t, i && t(this._aspectSiteAPI.getVisibilityState())
        },
        unregister: function(t) {
            this.registeredCallbacks = e.omit(this.registeredCallbacks, t)
        }
    }, t.registerSiteAspect("siteVisibilityChange", i)
}), define("core/components/siteAspects/ViewportAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e, t) {
        return { in: e.in && t.out,
            out: e.out && t.in,
            while_in: e.in && t.in
        }
    }

    function s(e) {
        this._aspectSiteAPI = e, this._aspectSiteAPI.registerToSiteReady(function() {
            this._aspectSiteAPI.registerToScroll(this.propagateEvent.bind(this)), this._aspectSiteAPI.registerToResize(this.propagateEvent.bind(this)), this._aspectSiteAPI.registerToOrientationChange(this.propagateEvent.bind(this)), this._aspectSiteAPI.registerToDidLayout(this.propagateEvent.bind(this))
        }.bind(this)), this.registeredListeners = {}
    }
    var n = ["in", "out", "while_in"];
    s.prototype = {
        eventTypes: n,
        propagateEvent: function() {
            var t = this._aspectSiteAPI.isPopupOpened() ? this._aspectSiteAPI.getCurrentPopupScroll() : this._aspectSiteAPI.getSiteScroll();
            e.forEach(this.registeredListeners, e.bind(function(s, n) {
                var o = this._aspectSiteAPI.getSiteData(),
                    a = this.getMeasuresFromMeasureMap(o, n);
                if (!e.isUndefined(a.compAbsTop) && !e.isUndefined(a.compHeight)) {
                    var r = this.getViewportStates(a.compAbsTop, a.compHeight, a.windowHeight, t.y, a.isFixed),
                        c = i(r, s.previousState),
                        p = e.some(s.eventTypes, function(e) {
                            return c[e]
                        });
                    s.previousState = r, p && s.callback(r)
                }
            }, this))
        },
        register: function(e, t, i) {
            this.registeredListeners[e] = {
                callback: t,
                eventTypes: i || n,
                previousState: {
                    out: !0,
                    in: !1
                }
            }
        },
        unregister: function(t) {
            this.registeredListeners = e.omit(this.registeredListeners, t)
        },
        getViewportStates: function(e, t, i, s, n) {
            var o = e + t,
                a = s + i,
                r = o < s,
                c = o > a,
                p = e < s,
                l = e > a,
                d = !(p || l),
                u = !(r || c),
                h = p && c,
                g = d || u || h,
                f = u && !d,
                m = d && !u,
                y = u && d,
                v = 0;
            return h ? v = i : f ? v = o - s : m ? v = a - e : y && (v = t), { in: g,
                inPartialAbove: f,
                inPartialBelow: m,
                inCover: h,
                inContained: y,
                out: !g,
                outAbove: r,
                outBelow: l,
                percentVisible: v / t,
                percentOfViewport: v / i,
                isFixed: !!n
            }
        },
        getMeasuresFromMeasureMap: function(t, i) {
            return {
                windowHeight: e.get(t, ["measureMap", "height", "screen"]),
                compAbsTop: e.get(t, ["measureMap", "absoluteTop", i]),
                compHeight: e.get(t, ["measureMap", "height", i]),
                isFixed: e.get(t, ["measureMap", "shownInFixed", i])
            }
        }
    }, t.registerSiteAspect("viewportChange", s)
}), define("core/components/siteAspects/videoFileAvailability", ["lodash", "utils"], function(e, t) {
    function i(e, t) {
        return t.readyQuality === t.qualities[e].quality
    }

    function s(e, i, s) {
        return i.url ? t.urlUtils.joinURL(s, i.url) : t.urlUtils.joinURL(s, e, i.quality, c, "file." + c)
    }

    function n(t, i) {
        var s = e.now() - t.timeStamp;
        if (s > 4 * t.duration) return 0;
        var n = s > t.duration && s <= 2 * t.duration ? 4 : 8;
        return Math.max(i, t.duration / n)
    }

    function o(e) {
        this.config = e, this.videoAvailabilityCollection = {}, this.componentsCallbackCollection = {}
    }

    function a(t, i) {
        var s;
        switch (i) {
            case "video":
                s = e.reject(t.qualities, {
                    quality: "storyboard"
                });
                break;
            case "storyboard":
                s = e.filter(t.qualities, {
                    quality: "storyboard"
                })
        }
        return s
    }
    var r = t.mediaConsts,
        c = "mp4";
    return o.prototype = {
        register: function(t, i, s, n, o) {
            var r = a(i, n);
            if (!e.isEmpty(r)) {
                this.componentsCallbackCollection[t] = {
                    videoId: i.videoId,
                    onSuccessCallback: o
                };
                var c = this.videoAvailabilityCollection[n + i.videoId];
                if (c) c.readyQuality && this.notifySingleReadyState(this.componentsCallbackCollection[t], c, this.getVideoReadyState(c.key));
                else {
                    c = {
                        type: n,
                        videoId: i.videoId,
                        key: n + i.videoId,
                        readyQuality: null,
                        testingQuality: s,
                        initialQuality: s,
                        qualities: r,
                        timeStamp: (new Date).getTime(),
                        duration: 1e3 * i.duration,
                        timerInterval: 0
                    }, this.videoAvailabilityCollection[c.key] = c;
                    var p = e.find(c.qualities, {
                        quality: c.testingQuality
                    });
                    this.loadDummyVideo(c.key, c.videoId, p)
                }
            }
        },
        unregister: function(t) {
            this.componentsCallbackCollection = e.omit(this.componentsCallbackCollection, t)
        },
        getVideoReadyState: function(t) {
            if (e.isEmpty(t)) return r.availabilityReadyStates.NO_VIDEO;
            var i = this.videoAvailabilityCollection[t];
            return i && i.readyQuality ? i.initialQuality === i.readyQuality ? r.availabilityReadyStates.IDLE : r.availabilityReadyStates.PLAYING_PREVIEW : r.availabilityReadyStates.IN_PROCESS
        },
        loadDummyVideo: function(e, i, n) {
            t.ajaxLibrary.ajax({
                url: s(i, n, this.config.headRequestStaticUrl),
                type: "HEAD",
                success: function() {
                    this.canPlay(e)
                }.bind(this),
                error: function() {
                    this.onError(e)
                }.bind(this)
            })
        },
        onError: function(t) {
            var s = this.videoAvailabilityCollection[t];
            if (s) {
                var n = e.findIndex(s.qualities, {
                    quality: s.testingQuality
                }) - 1;
                "undefined" != typeof window && n >= 0 && !i(n, s) ? (s.testingQuality = s.qualities[n].quality, setTimeout(function() {
                    this.loadDummyVideo(t, s.videoId, s.qualities[n])
                }.bind(this), 100)) : this.resetQualityTest(s), this.notifyReadyState(s.key)
            }
        },
        canPlay: function(e) {
            var t = this.videoAvailabilityCollection[e];
            t && (t.readyQuality = t.testingQuality, this.getVideoReadyState(e) !== r.availabilityReadyStates.IDLE && this.resetQualityTest(t), this.notifyReadyState(e))
        },
        resetQualityTest: function(t) {
            if (t) {
                t.testingQuality = t.initialQuality;
                var i = n(t, this.config.videoQualityCheckInterval);
                "undefined" != typeof window && i > 0 ? (clearTimeout(t.timerInterval), t.timerInterval = setTimeout(function() {
                    var i = e.find(t.qualities, {
                        quality: t.testingQuality
                    });
                    this.loadDummyVideo(t.key, t.videoId, i)
                }.bind(this), i)) : t.qualities = e.filter(t.qualities, {
                    quality: t.readyQuality
                })
            }
        },
        notifyReadyState: function(t) {
            var i = this.videoAvailabilityCollection[t];
            if (i) {
                var s = this.getVideoReadyState(t);
                e.forEach(e.filter(this.componentsCallbackCollection, {
                    videoId: i.videoId
                }), e.bind(function(e) {
                    this.notifySingleReadyState(e, i, s)
                }, this))
            }
        },
        notifySingleReadyState: function(e, t, i) {
            e.onSuccessCallback({
                videoId: t.videoId,
                mediaQuality: t.readyQuality,
                readyState: i,
                type: t.type
            })
        }
    }, o
}), define("core/components/siteAspects/MediaAspect", ["lodash", "core/core/siteAspectsRegistry", "core/components/siteAspects/videoFileAvailability"], function(e, t, i) {
    function s(e) {
        this.aspectSiteAPI = e, this.siteData = e.getSiteData(), this.isEnabled = !0, this.playerStateChangeListeners = {};
        var t = {
            videoQualityCheckInterval: 5e3,
            headRequestStaticUrl: this.siteData.getStaticVideoHeadRequestUrl()
        };
        this.fileAvailabilityUtil = new i(t)
    }
    return s.prototype = {
        getData: function(t) {
            var i = this.aspectSiteAPI.getPointers().general.getMediaPlaybackItemPointer(t),
                s = this.aspectSiteAPI.getDisplayedDAL();
            return e.clone(s.get(i)) || {}
        },
        getQualityData: function(e) {
            var t = this.aspectSiteAPI.getPointers().general.getMediaQualityItemPointer(e);
            return this.aspectSiteAPI.getDisplayedDAL().get(t)
        },
        updatePlayerState: function(t, i) {
            var s = e.assign({}, this.getData(t), i),
                n = this.aspectSiteAPI.getPointers().general.getMediaPlaybackItemPointer(t);
            this.aspectSiteAPI.getDisplayedDAL().set(n, s), this.notifyStateChange(t)
        },
        updateQualityState: function(t, i) {
            var s = e.assign({}, this.getQualityData(t), i),
                n = this.aspectSiteAPI.getPointers().general.getMediaQualityItemPointer(t);
            this.aspectSiteAPI.getDisplayedDAL().set(n, s)
        },
        removePlayerState: function(e) {
            var t = this.aspectSiteAPI.getPointers().general.getMediaPlaybackItemPointer(e),
                i = this.aspectSiteAPI.getDisplayedDAL();
            i.isExist(t) && (i.remove(t), this.notifyStateChange(e))
        },
        registerPlayer: function(t, i) {
            i = i || {};
            var s = e.get(i, "mediaData"),
                n = e.get(s, "videoId");
            this.updatePlayerState(t, {
                playerType: i.playerType || "none",
                videoId: n,
                duration: e.get(s, "duration", 0)
            }), this.registerPlayerServices(t, i.mediaData, i.services)
        },
        unregisterPlayer: function(e) {
            this.removePlayerState(e), this.unregisterPlayerServices(e)
        },
        registerPlayerServices: function(e, t, i) {
            (i = i || {}).viewport && this.aspectSiteAPI.getSiteAspect("viewportChange").register(e, i.viewport.callback, i.viewport.eventTypes), i.visibility && this.aspectSiteAPI.getSiteAspect("siteVisibilityChange").register(e, i.visibility.callback), i.fileAvailability && (this.fileAvailabilityUtil.register(e, t, i.fileAvailability.mediaQuality, "video", i.fileAvailability.callback), this.fileAvailabilityUtil.register(e, t, "storyboard", "storyboard", i.fileAvailability.callback))
        },
        unregisterPlayerServices: function(e) {
            this.aspectSiteAPI.getSiteAspect("siteVisibilityChange").unregister(e), this.aspectSiteAPI.getSiteAspect("viewportChange").unregister(e), this.fileAvailabilityUtil.unregister(e)
        },
        registerStateChange: function(t, i, s) {
            e.set(this.playerStateChangeListeners, [i, t], s);
            var n = this.getData(i);
            n && s(n)
        },
        unregisterStateChange: function(t, i) {
            this.playerStateChangeListeners[i] = e.omit(this.playerStateChangeListeners[i], t), e.isEmpty(this.playerStateChangeListeners[i]) && (this.playerStateChangeListeners = e.omit(this.playerStateChangeListeners, i))
        },
        notifyStateChange: function(t) {
            e.forEach(this.playerStateChangeListeners[t], e.bind(function(e) {
                e(this.getData(t))
            }, this))
        },
        getControlsData: function(t) {
            var i, s = this.aspectSiteAPI.getSiteData(),
                n = s.getFocusedRootId();
            if (n) {
                var o = this.aspectSiteAPI.getPointers(),
                    a = s.getViewMode(),
                    r = o.components.getPage(n, a),
                    c = o.components.getComponent(t, r),
                    p = o.getInnerPointer(c, "designQuery"),
                    l = this.aspectSiteAPI.getDisplayedDAL().get(p),
                    d = s.getDataByQuery(l, n, s.dataTypes.DESIGN),
                    u = e.get(d, ["background", "mediaRef"]);
                i = {
                    hasAudio: !(!1 === e.get(u, ["hasAudio"]))
                };
                var h = e.get(u, ["qualities"]),
                    g = e.find(h, {
                        quality: "storyboard"
                    });
                g && (i = e.assign(i, {
                    storyboardUrl: e.get(g, "url"),
                    videoAspectRatio: g && g.width / g.height
                }))
            }
            return i
        }
    }, t.registerSiteAspect("mediaAspect", s), s
}), define("core/components/siteAspects/touchEventsAspect", ["lodash", "core/core/siteAspectsRegistry", "utils"], function(e, t, i) {
    function s(e) {
        a = e, n()
    }

    function n() {
        p.forEach(function(e) {
            c[e] = {}, a.registerToWindowTouchEvent(e, o)
        }, this)
    }

    function o(t) {
        var i, s = t.type.slice("touch".length),
            n = "WindowTouch" + r.capitalize(s),
            o = c[t.type],
            p = "on" + n;
        e.forEach(o, function(e) {
            (i = a.getComponentById(e)) ? i[p] && i[p](t): delete o[e]
        })
    }
    var a, r = i.stringUtils,
        c = {},
        p = ["touchstart", "touchmove", "touchend", "touchcancel"];
    s.prototype = {
        registerToWindowTouchEvent: function(e, t) {
            c[e.toLowerCase()][t.props.id] = t.props.id
        },
        unregisterFromWindowTouchEvent: function(e, t) {
            delete c[e.toLowerCase()][t.props.id]
        }
    }, t.registerSiteAspect("windowTouchEvents", s)
}), define("core/components/siteAspects/anchorLinkChangeEventAspect", ["lodash", "utils", "core/core/siteAspectsRegistry"], function(e, t, i) {
    function s(e) {
        this._aspectSiteAPI = e, this._registeredCompCallbacks = {}, e.registerToScroll(this.onScroll.bind(this)), e.registerToRenderedRootsChange(this.onRenderedRootsChange.bind(this))
    }

    function n(i, s, n) {
        n = n || i.getPrimaryPageId();
        var o = t.scrollAnchors.getPageAnchors(i, n),
            a = t.scrollAnchors.getSortedAnchorsByY(i, o);
        return e.find(a, {
            id: s.replace("#", "")
        })
    }

    function o(t) {
        var i = this._aspectSiteAPI.getAspectGlobalData("anchorChangeEvent"),
            s = e.get(i, "activeAnchorComp.id"),
            n = e.get(t, "activeAnchorComp.id");
        n && n !== s && (this._aspectSiteAPI.updateAspectGlobalData("anchorChangeEvent", t), this.propagateAnchorChangeEvent(t))
    }

    function a(e, t, i) {
        var s = t ? n(e, t, i) : t;
        if (s) {
            var a = {
                activeAnchorComp: s
            };
            o.call(this, a)
        }
    }

    function r(i) {
        var s = this._aspectSiteAPI.getSiteData(),
            n = s.isPopupOpened();
        if (i && !n && !e.isUndefined(i.y)) {
            var a = t.scrollAnchors.getActiveAnchor(s, i.y);
            o.call(this, a)
        }
    }
    return s.prototype = {
        registerToAnchorChange: function(e) {
            e.onAnchorChange && (this._registeredCompCallbacks[e.props.id] = e.onAnchorChange)
        },
        unregisterToAnchorChange: function(e) {
            delete this._registeredCompCallbacks[e.props.id]
        },
        onScroll: function(t) {
            e.isEmpty(this._registeredCompCallbacks) || r.call(this, t)
        },
        onRenderedRootsChange: function(i) {
            if (e.isEmpty(i)) {
                var s = this._aspectSiteAPI.getSiteScroll();
                return void r.call(this, s)
            }
            var n = this._aspectSiteAPI.getSiteData().getPrimaryPageId(),
                a = {
                    activeAnchorComp: t.scrollAnchors.getPageTopAnchor(n)
                };
            o.call(this, a)
        },
        setSelectedAnchorAsync: function(e, t, i, s) {
            t && (t = t.replace("#", ""), setTimeout(a.bind(this, e, t, i), s))
        },
        propagateAnchorChangeEvent: function(t) {
            e.forEach(this._registeredCompCallbacks, function(e) {
                e(t)
            })
        }
    }, i.registerSiteAspect("anchorChangeEvent", s), s
}), define("core/components/siteAspects/siteScrollingBlockerAspect", ["core/core/siteAspectsRegistry", "lodash", "zepto"], function(e, t, i) {
    function s(e) {
        var t = e.getSiteAPI().getSiteData();
        this.fixOverflowScrollEdges = t.browserFlags().fixOverflowScrollEdges, this._blockersList = [], this._scrollCorrection = void 0
    }

    function n() {
        this._scrollCorrection = window.scrollY
    }

    function o() {
        window.scrollTo(0, this._scrollCorrection)
    }

    function a() {
        n.call(this), i("html").css({
            marginTop: -Math.max(.5, window.scrollY) + "px"
        }).addClass("blockSiteScrolling")
    }

    function r() {
        i("html").removeClass("blockSiteScrolling").css({
            marginTop: ""
        }), o.call(this)
    }
    s.prototype = {
        setSiteScrollingBlocked: function(e, i) {
            var s = t.head(this._blockersList);
            this._blockersList = i ? t(this._blockersList).concat(e).uniq().value() : t.without(this._blockersList, e);
            var n = t.head(this._blockersList);
            s !== n && (n ? a : r).call(this)
        },
        isSiteScrollingBlocked: function() {
            return !!t.size(this._blockersList)
        },
        registerScrollingLayer: function(e) {
            this.fixOverflowScrollEdges && e.addEventListener("scroll", function() {
                e.scrollTop = t.clamp(e.scrollTop, 1, e.scrollHeight - e.clientHeight - 1)
            })
        }
    }, e.registerSiteAspect("siteScrollingBlocker", s)
}), define("core/components/siteAspects/mouseWheelOverrideAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._isOverride = !1
    }

    function s(e) {
        "undefined" != typeof window && (e.preventDefault(), window.scrollBy(0, -e.wheelDelta / 2))
    }
    i.prototype = {
        overrideMouseWheel: function() {
            var e = window.document.body;
            if (!this._isOverride) {
                if (void 0 !== e.onwheel) e.addEventListener("wheel", s);
                else {
                    if (void 0 === e.onmousewheel) return;
                    e.addEventListener("mousewheel", s)
                }
                this._isOverride = !0
            }
        },
        releaseMouseWheel: function() {
            var e = window.document.body;
            e.removeEventListener("wheel", s), e.removeEventListener("mousewheel", s), this._isOverride = !1
        },
        isOverride: function() {
            return this._isOverride
        }
    }, t.registerSiteAspect("mouseWheelOverride", i)
}), define("core/components/siteAspects/svSessionChangeEventAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._registeredComps = {}, e.registerToSvSessionChange(this.notifySessionChanged.bind(this))
    }
    i.prototype = {
        registerToSessionChanged: function(e) {
            this._registeredComps[e.props.id] = e
        },
        unRegisterToSessionChanged: function(e) {
            delete this._registeredComps[e.props.id]
        },
        notifySessionChanged: function(t) {
            e.forEach(this._registeredComps, function(e) {
                e.sendPostMessage({
                    intent: "addEventListener",
                    eventType: "SESSION_CHANGED",
                    params: {
                        userSession: t
                    }
                })
            })
        }
    }, t.registerSiteAspect("svSessionChangeEvent", i)
}), define("core/components/siteAspects/htmlPostMessageAspect", ["lodash", "core/core/siteAspectsRegistry", "core/components/siteAspects/behaviorsService"], function(e, t, i) {
    function s() {
        e.size(this.queue) > 0 && e.forEach(this.queue, function(t, s) {
            var n = this.siteAPI.getRuntimeDal().getActionsAndBehaviors(s);
            i.handleBehaviors(this.siteAPI, e.map(n, "behavior"), t, "widget"), delete this.queue[s]
        }.bind(this))
    }
    var n = function(t) {
        t.registerToMessage(this.handleMessage.bind(this)), this.siteAPI = t, this.callbacks = {}, this.components = {}, this.queue = {}, e.bindAll(this, ["handleMessage", "registerComponent", "unRegisterComponent", "postMessage"])
    };
    return n.prototype = {
        handleMessage: function(t) {
            e.forEach(this.components, function(n, o) {
                if (t.source === n) {
                    var a = this.siteAPI.getRuntimeDal().getActionsAndBehaviors(o);
                    0 === e.size(a) ? this.queue[o] = t : (s.call(this), i.handleBehaviors(this.siteAPI, e.map(a, "behavior"), t, "widget"))
                }
            }.bind(this))
        },
        registerComponent: function(e, t) {
            this.components[e] = t
        },
        unRegisterComponent: function(e) {
            delete this.components[e]
        },
        postMessage: function(e, t) {
            var i = this.components[e];
            i && i.postMessage(t, "*")
        }
    }, t.registerSiteAspect("HtmlPostMessageAspect", n), n
}), define("core/components/siteAspects/siteMetadataChangeAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(e) {
        this._aspectSiteAPI = e, this._registeredComps = {}, e.registerToSiteMetadataChange(this.notifySiteMetadataChanged.bind(this))
    }
    i.prototype = {
        registerToSiteMetadataChange: function(e) {
            this._registeredComps[e.props.id] = e
        },
        unRegisterToSiteMetadataChange: function(e) {
            delete this._registeredComps[e.props.id]
        },
        notifySiteMetadataChanged: function(t) {
            e.forEach(this._registeredComps, function(e) {
                e.sendPostMessage({
                    intent: "addEventListener",
                    eventType: "SITE_METADATA_CHANGED",
                    params: t
                })
            })
        }
    }, t.registerSiteAspect("siteMetadataChangeAspect", i)
}), define("core/components/siteAspects/popupPageAspect", ["lodash", "core/core/siteAspectsRegistry"], function(e, t) {
    function i(t) {
        this._aspectSiteAPI = t, this._registeredCloseHandlers = {}, e.bindAll(this, ["registerCloseHandler", "unregisterCloseHandler", "closePopupPage", "openPopupPage"])
    }
    return i.prototype = {
        registerCloseHandler: function(e, t) {
            this._registeredCloseHandlers[e] = t
        },
        unregisterCloseHandler: function(t) {
            this._registeredCloseHandlers = e.omit(this._registeredCloseHandlers, t)
        },
        closePopupPage: function() {
            var t = this._aspectSiteAPI.getCurrentPopupId();
            t && (this._aspectSiteAPI.closePopupPage(), e.isFunction(this._registeredCloseHandlers[t]) && (this._registeredCloseHandlers[t].apply(this, arguments), this.unregisterCloseHandler(t)))
        },
        openPopupPage: function(e) {
            this._aspectSiteAPI.openPopupPage(e)
        }
    }, t.registerSiteAspect("PopupPageAspect", i), i
}), define("core/components/siteAspects/aspectsCollector", ["core/core/siteAspectsRegistry", "core/components/siteAspects/BehaviorsAspect", "core/components/siteAspects/animationsAspect", "core/components/siteAspects/DesignDataChangeAspect", "core/components/siteAspects/parentFrameAspect", "core/components/siteAspects/vkPostMessageAspect", "core/core/pageItemAspect", "core/core/nonPageItemZoomAspect", "core/components/siteAspects/externalScriptLoaderAspect", "core/siteRender/SiteMembersAspect", "core/components/siteAspects/windowFocusEventsAspect", "core/components/siteAspects/windowScrollEventAspect", "core/components/siteAspects/windowResizeEventAspect", "core/components/siteAspects/windowClickEventAspect", "core/components/siteAspects/windowKeyboardEventAspect", "core/components/siteAspects/addComponentAspect", "core/components/siteAspects/AudioAspect", "core/components/siteAspects/quickActionBarAspect", "core/components/siteAspects/actionsAspect", "core/components/siteAspects/DynamicClientSpecMapAspect", "core/components/siteAspects/VerticalAnchorsMenuAspect", "core/components/siteAspects/SiteVisibilityAspect", "core/components/siteAspects/ViewportAspect", "core/components/siteAspects/MediaAspect", "core/components/siteAspects/touchEventsAspect", "core/components/siteAspects/anchorLinkChangeEventAspect", "core/components/siteAspects/siteScrollingBlockerAspect", "core/components/siteAspects/mouseWheelOverrideAspect", "core/components/siteAspects/svSessionChangeEventAspect", "core/components/siteAspects/htmlPostMessageAspect", "core/components/siteAspects/siteMetadataChangeAspect", "core/components/siteAspects/popupPageAspect"], function(e, t, i, s) {
    e.registerSiteAspect("behaviorsAspect", t), e.registerSiteAspect("animationsAspect", i), e.registerSiteAspect("designDataChangeAspect", s)
}), define("core/components/behaviorHandlers/prefetchPagesBehaviorHandler", ["lodash"], function(e) {
    return {
        prefetchPages: function(t, i) {
            var s = i.getSiteData().getPagesDataItems(),
                n = t.params.prefetchFilters,
                o = e(s).filter(function(t) {
                    return e.every(n, function(i, s) {
                        return e.includes(i, t[s])
                    })
                }).map("id").value();
            if (!e.isEmpty(o)) {
                var a = i.getSiteDataAPI(),
                    r = 0;
                e.forEach(o, function(e) {
                    var t = {
                        pageId: e
                    };
                    a.loadPage(t, function() {
                        ++r === o.length && (i.addPrefetchPages(o), i.forceUpdate())
                    })
                })
            }
        },
        isEnabled: function() {
            return !0
        }
    }
}), define("core/components/behaviorHandlers/siteBehaviorHandler", ["lodash", "utils", "core/components/behaviorHandlers/prefetchPagesBehaviorHandler"], function(e, t, i) {
    function s() {
        function e(e) {
            return "editor" === e.getRenderFlag("componentViewMode")
        }

        function t(e, t) {
            return e.getRuntimeDal().hasBeenPopupOpened(t)
        }

        function i(i, s, n) {
            var o = n.targetId;
            return !i.isZoomOpened() && (!e(i) && (!t(i, o) && !i.isPopupOpened() && (s.isMobileView() ? Boolean(n.params.openInMobile) : Boolean(n.params.openInDesktop))))
        }

        function s(e) {
            return 1e3 * (e.params.delay || 0)
        }
        var n;
        return function(e, t) {
            clearTimeout(n);
            var o = t.getSiteData();
            i(t, o, e) && (n = setTimeout(function(s) {
                o.getPrimaryPageId() !== s || i(t, o, e) && t.getSiteAspect("PopupPageAspect").openPopupPage(e.targetId)
            }, s(e), o.getPrimaryPageId()))
        }
    }

    function n() {
        return !0
    }

    function o() {
        return {
            default: function(e) {
                t.log.error("Invalid behavior", e)
            },
            openPopup: s(),
            prefetchPages: i.prefetchPages
        }
    }

    function a() {
        return {
            default: function(e) {
                t.log.error("Invalid behavior", e)
            },
            openPopup: n,
            prefetchPages: i.isEnabled
        }
    }
    var r, c;
    return {
        handle: function(t, i) {
            r = r || o(), e.forEach(t, function(e) {
                (r[e.name] || r.default)(e, i)
            })
        },
        isEnabled: function(e, t) {
            return ((c = c || a())[e.name] || c.default)(t)
        }
    }
}), define("core/siteRender/siteBehaviorsRegistrar", ["core/components/behaviorHandlers/behaviorHandlersFactory", "core/components/behaviorHandlers/siteBehaviorHandler"], function(e, t) {
    e.registerHandler("site", t)
}), define("core/core/siteHooks/pageLoadHooks", ["experiment", "core/core/site"], function(e, t) {
    t.hooks.registerHook(t.hooks.types.PAGE_LOADED_FIRST_RENDER, function(t, i) {
        e.isOpen("sv_platform1", t) && !t.rendererModel.previewMode && i.preInitWidgets(t, t.currentUrl.full)
    }), t.hooks.registerHook(t.hooks.types.PAGE_LOADED, function(e, t) {
        if (e.isExperimentOpen("sv_platform1")) {
            var i = e.getSiteData(),
                s = e.isExperimentOpen("sv_dpages") && !!t.routerDefinition,
                n = !s,
                o = i.getFocusedRootId() === e.getCurrentPopupId(),
                a = o && t.pageId === i.getPrimaryPageId(),
                r = i.getFocusedRootId() !== t.pageId;
            if (n && r && !a) e.getSiteAspect("WidgetAspect").initApps([t.pageId]);
            else if (s) {
                var c = !r,
                    p = t.innerRoute !== i.getRootNavigationInfo().innerRoute;
                if (c && p) return void e.getSiteAspect("WidgetAspect").initApps([t.pageId]);
                if (r && !o) return void e.getSiteAspect("WidgetAspect").initApps([t.pageId]);
                if (o) {
                    var l = t.pageId === i.getPrimaryPageId();
                    (!l || l && p) && e.getSiteAspect("WidgetAspect").initApps([t.pageId])
                }
            }
        }
    })
}), define("core", ["utils", "coreUtils", "core/util/santaVersion.json", "core/core/site", "core/siteRender/compRegistrar", "core/siteRender/styleCollector", "core/core/dataRequirementsChecker", "core/core/siteAspectsRegistry", "core/components/animationsMixin", "core/components/baseCompMixin", "core/components/skinBasedComp", "core/components/inputFocusMixin", "core/components/validatableMixin", "core/components/validatableWithSyncMixin", "core/components/runTimeCompData", "core/components/blockOuterScrollMixin", "core/components/optionInput", "core/components/skinInfo", "core/core/SiteDataAPI", "core/siteRender/SiteAPI", "core/core/data/RuntimeDal", "core/components/util/galleryPagingCalculations", "core/components/util/boxSlideShowCommon", "core/components/mediaZoomWrapperMixin", "core/components/galleryImageExpandedActionMixin", "core/components/util/matrixAnimationManipulation", "core/components/uniquePageIdMixin", "core/siteRender/WixSiteHeadRenderer", "core/activities/activityTypes", "core/activities/activityService", "core/siteRender/SiteAspectsSiteAPI", "core/bi/events", "core/components/wixTransitionGroup", "core/components/wixTransitionItem", "core/components/behaviorHandlers/behaviorHandlersFactory", "core/components/siteAspects/behaviorsService", "core/siteRender/WixSiteReact", "core/components/fullScreenOverlay/fullScreenOverlay", "core/bi/errors", "core/components/compStateMixin", "core/components/compActionMixin", "core/components/siteAspects/animationsService", "core/core/data/ViewerDisplayedJsonUpdater", "core/components/siteAspects/aspectsCollector", "core/components/siteAspects/AudioAspect", "core/siteRender/siteBehaviorsRegistrar", "core/core/siteHooks/pageLoadHooks"], function(e, t, i, s, n, o, a, r, c, p, l, d, u, h, g, f, m, y, v, S, A, _, P, I, E, T, C, M, D, R, b, w, O, k, N, B, L, x, U, F, G, W, H) {
    return {
        santaVersion: i.version,
        SiteDataAPI: v,
        SiteAPI: S,
        RuntimeDal: A,
        MobileDeviceAnalyzer: e.MobileDeviceAnalyzer,
        renderer: s,
        WixSiteHeadRenderer: M,
        compRegistrar: n,
        styleCollector: o,
        dataRequirementsChecker: a,
        siteAspectsRegistry: r,
        compMixins: {
            intervalsMixin: e.timersMixins.intervalsMixin,
            timeoutsMixin: e.timersMixins.timeoutsMixin,
            skinBasedComp: l,
            inputFocusMixin: d,
            validatableMixin: u,
            validatableWithSyncMixin: h,
            runTimeCompData: g,
            animationsMixin: c,
            optionInput: m,
            skinInfo: y,
            mediaZoomWrapperMixin: I,
            galleryImageExpandedActionMixin: E,
            baseCompMixin: p.baseComp,
            postMessageCompMixin: e.postMessageCompMixin,
            uniquePageIdMixin: C,
            blockOuterScrollMixin: f,
            compActionMixin: G,
            compStateMixin: F
        },
        componentUtils: {
            fullScreenOverlay: x,
            galleryPagingCalculations: _,
            matrixAnimationManipulation: T,
            boxSlideShowCommon: P
        },
        activityTypes: D,
        activityService: R,
        SiteAspectsSiteAPI: b,
        behaviorHandlersFactory: N,
        behaviorsService: B,
        wixTransitionGroup: O,
        wixTransitionItem: k,
        biEvents: w,
        DataAccessPointers: t.pointers.DataAccessPointers,
        PointersCache: t.pointers.PointersCache,
        pointerGeneratorsRegistry: t.pointers.pointerGeneratorsRegistry,
        SimpleDisplayedJsonUpdater: H,
        forTests: {
            WixSiteReact: L
        },
        errors: U,
        animationsService: W
    }
});
//# sourceMappingURL=core.min.js.map
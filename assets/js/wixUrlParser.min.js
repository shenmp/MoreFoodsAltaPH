"use strict";
var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
    return typeof e
} : function(e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
};
define("wixUrlParser/utils/urlParserUtils", ["lodash", "coreUtils"], function(e, t) {
    function r(r) {
        if (r.isResolvedSiteData) return r;
        var a = r.getCurrentUrlPageId(),
            i = e.get(r.getMasterPageData(), ["data", "document_data"]),
            n = e(i).filter({
                type: "PermaLink"
            }).keyBy("id").value(),
            o = e.keyBy(r.getPagesDataItems(), "id");
        o.masterPage = r.getDataByQuery("masterPage");
        var s = t.siteDataUtils,
            l = {
                primaryPageId: r.getPrimaryPageId(),
                urlFormat: r.getUrlFormat(),
                mainPageId: r.getMainPageId(),
                externalBaseUrl: r.getExternalBaseUrl(),
                unicodeExternalBaseUrl: r.getUnicodeExternalBaseUrl(),
                publicBaseUrl: r.getPublicBaseUrl(),
                currentUrl: r.currentUrl,
                currentUrlPageId: a,
                isFeedbackEndpoint: r.isFeedbackEndpoint(),
                isSiteHistoryEndpoint: r.isSiteHistoryEndpoint(),
                isViewerMode: r.isViewerMode(),
                isWixSite: r.isWixSite(),
                languageCode: r.getLanguageCode(),
                isTemplate: r.isTemplate(),
                isUsingSlashUrlFormat: r.isUsingUrlFormat(t.siteConstants.URL_FORMATS.SLASH),
                isPremiumDomain: r.isPremiumDomain(),
                allPageIds: r.getAllPageIds(),
                routersConfigMap: e.get(r, "routers.configMap"),
                cookie: s.getRequestModel(r, "cookie"),
                rendererModel: {
                    runningExperiments: s.getRendererModel(r, "runningExperiments")
                },
                serviceTopology: {
                    basePublicUrl: r.getServiceTopologyProperty("basePublicUrl"),
                    baseDomain: r.getServiceTopologyProperty("baseDomain"),
                    staticDocsUrl: r.getServiceTopologyProperty("staticDocsUrl")
                },
                pagesDataItemsMap: o,
                permalinksMap: n,
                mapFromPageUriSeoToPageId: s.getMapFromPageUriSeoToPageId(r),
                pageResponseForUrl: r.pageResponseForUrl,
                rootNavigationInfo: r.getRootNavigationInfo()
            };
        return l.isResolvedSiteData = !0, l
    }
    return {
        getResolvedSiteData: r
    }
}), define("wixUrlParser/parsers/slashUrlParser", ["lodash", "coreUtils", "experiment", "wixUrlParser/utils/urlParserUtils"], function(e, t, r, a) {
    function i(r) {
        var a = t.urlUtils.parseUrl(r.externalBaseUrl).host;
        return e.endsWith(a, "." + t.siteConstants.FREE_DOMAIN.WIXSITE) || e.endsWith(a, "." + r.serviceTopology.baseDomain)
    }

    function n(e) {
        return e.isPremiumDomain && !i(e)
    }

    function o(r) {
        var a = e.isObject(r.currentUrl) ? r.currentUrl.full : t.urlUtils.parseUrl(r.currentUrl).full;
        return r.isTemplate && e.startsWith(a, r.serviceTopology.basePublicUrl)
    }

    function s(e) {
        return "object" === ("undefined" == typeof window ? "undefined" : _typeof(window)) && window.karmaIntegration ? W.BEAKER : e.isFeedbackEndpoint ? W.REVIEW : e.isSiteHistoryEndpoint ? W.SITE_HISTORY : e.isViewerMode ? n(e) ? W.PREMIUM : e.isWixSite || o(e) ? W.WIX_INTERNAL : W.FREE_SITE : W.PREVIEW
    }

    function l(t) {
        return e.map(t, encodeURIComponent)
    }

    function u(t) {
        return e.map(t, decodeURIComponent)
    }

    function p(t, r) {
        var a = e.find(t.pagesDataItemsMap, {
            pageUriSEO: r
        });
        return a && a.id
    }

    function g(a, i) {
        var n = t.siteDataUtils.getMapFromPageUriSeoToPageId(a),
            o = e.get(n, i);
        if (r.isOpen("sv_dpages", a)) {
            var s = o || p(a, i) || t.errorPages.IDS.NOT_FOUND;
            return t.routerUtils.isDynamicPage(a.routersConfigMap, s) && (s = t.errorPages.IDS.NOT_FOUND), s
        }
        return o || p(a, i) || a.mainPageId
    }

    function d(r, a) {
        var i = t.urlUtils.parseUrl(r.externalBaseUrl).path.replace(/\/$/, "").split("/").length;
        return a ? e.drop(a.split("/"), i) : []
    }

    function c(e) {
        return e === w
    }

    function U(e, t) {
        return !!t && !!e.permalinksMap[t]
    }

    function f(e, t) {
        var r = e.pagesDataItemsMap[t];
        return r && "Page" === r.type && r.tpaApplicationId > 0
    }

    function I(e, t) {
        var r = e.pagesDataItemsMap[t];
        return r && "AppPage" === r.type && "AppBuilderPage" === r.appPageType
    }

    function m(e, t) {
        var r = e.pagesDataItemsMap[t];
        return r && "AppPage" === r.type && "AppPage" === r.appPageType && r.appPageId === O
    }

    function P(e, t) {
        var r = e.pagesDataItemsMap[t];
        return r && "AppPage" === r.type && "AppPage" === r.appPageType && r.appPageId === C
    }

    function v(e, t) {
        return P(e, t) || m(e, t)
    }

    function D(e) {
        return e && e.replace(/^https?:\/\//, "")
    }

    function y(e, r) {
        var a = D(t.urlUtils.getBaseUrlWithPath(r, s(e)));
        return t.urlUtils.isSame(a, D(e.externalBaseUrl)) || t.urlUtils.isSame(a, D(e.unicodeExternalBaseUrl)) || t.urlUtils.isHostnameYandexWebvisor(a) || /^s3\.amazonaws\.com\/wix\-/.test(a)
    }

    function S(t, r) {
        if (r) return e.find(t.routersConfigMap, {
            prefix: r
        })
    }

    function E(e) {
        var r = e.query.q,
            a = /\:([^\:]+)\+$/.exec(r);
        return a && a[1] && t.urlUtils.parseUrl(a[1]) || e
    }

    function R(a, i) {
        var n = e.isObject(i) ? i : t.urlUtils.parseUrl(i);
        if (n.hostname === N && (n = E(n)), !y(a, n)) return null;
        var o = d(a, n.path),
            s = e.head(o),
            l = e.drop(o, 1),
            p = {
                format: t.siteConstants.URL_FORMATS.SLASH
            };
        if (r.isOpen("sv_dpages", a)) {
            var U = S(a, s);
            U && (p.routerDefinition = U, p.pageAdditionalData = s + "/" + l.join("/"))
        }
        if (r.isOpen("sv_dpages", a) && p.routerDefinition) {
            p.innerRoute = l.join("/");
            var m = a.pageResponseForUrl;
            m && m.pageId && (p.pageId = m.pageId, p.title = m.title)
        } else s ? c(s) ? (p.pageItemId = e.head(l), p.pageId = a.currentUrlPageId || a.mainPageId) : (p.pageId = g(a, s), I(a, p.pageId) ? p.title = o[2] : p.title = s) : (p.pageId = a.mainPageId, p.title = h(a, p.pageId));
        n.query[F] && (p.pageItemId = n.query[F], p.imageZoom = !0);
        var P = e.omit(n.query, B);
        return n.query && !e.isEmpty(P) && (p.queryParams = P), !(o.length > 1) || r.isOpen("sv_dpages", a) && p.routerDefinition || (I(a, p.pageId) ? p.pageAdditionalData = e.head(l) : c(s) ? p.pageAdditionalData = e.drop(l, 1).join("/") : f(a, p.pageId) ? p.pageAdditionalData = u(l).join("/") : p.pageAdditionalData = l.join("/")), p
    }

    function h(r, a) {
        var i = r.pagesDataItemsMap[a];
        return e.get(i, "pageUriSEO") || t.siteConstants.DEFAULT_PAGE_URI_SEO
    }

    function A(t) {
        return e.omit(t.currentUrl.query, B)
    }

    function b(t) {
        var r = e.get(t, "rootNavigationInfo.pageAdditionalData");
        if (r) {
            var a = r.split("/");
            return e.drop(a, 1).join("/")
        }
    }

    function T(a, i, n, o, s, u) {
        var p = A(a),
            g = e.assign({}, p, i.queryParams || {}),
            d = s || a.externalBaseUrl;
        d = d.replace(/\/$/, "");
        var c = U(a, i.pageItemId);
        if (r.isOpen("sv_dpages", a) && (i.routerId || i.routerDefinition) ? ("CURRENT_INNER_ROUTE" === i.innerRoute && (i.innerRoute = b(a) || i.innerRoute), d += "/" + (i.routerId ? e.get(a.routersConfigMap, i.routerId + ".prefix") : i.routerDefinition.prefix), i.innerRoute && "/" !== i.innerRoute && (d += "/" + i.innerRoute)) : i.pageId && !c && (i.pageId !== a.mainPageId || n || i.pageAdditionalData) && (d += "/" + h(a, i.pageId)), I(a, i.pageId) && i.pageAdditionalData) d += "/" + i.pageAdditionalData + (i.title ? "/" + i.title : "");
        else if (f(a, i.pageId) && i.pageAdditionalData) d += "/" + l(i.pageAdditionalData.split("/")).join("/");
        else if (v(a, i.pageId) && i.pageAdditionalData) {
            var m = u && u.getCustomUrlMapping ? u.getCustomUrlMapping() : void 0,
                P = e.findKey(m, {
                    id: i.pageAdditionalData
                });
            d += P ? "/" + P : "/" + i.pageAdditionalData
        }
        return i.pageItemId && (c ? i.pageAdditionalData && (d += "/" + w + "/" + i.pageItemId + "/" + i.pageAdditionalData) : i.imageZoom && (g[F] = i.pageItemId)), o || e.isEmpty(g) || a.currentUrl.hostname === N || (d += "?" + t.urlUtils.toQueryString(g)), d
    }

    function x(e, t) {
        return R(a.getResolvedSiteData(e), t)
    }

    function M(e, t, r, i, n, o, s) {
        return T(a.getResolvedSiteData(e), t, r, i, n, s)
    }

    function _(e, r) {
        var i = t.urlUtils.parseUrl(r);
        return y(a.getResolvedSiteData(e), i)
    }
    var F = "lightbox",
        B = [F],
        O = "7326bfbb-4b10-4a8e-84c1-73f776051e10",
        C = "79f391eb-7dfc-4adf-be6e-64434c4838d9",
        w = "_p",
        W = {
            PREVIEW: 7,
            SITE_HISTORY: 8,
            WIX_INTERNAL: 2,
            FREE_SITE: 1,
            PREMIUM: 0,
            REVIEW: 3,
            BEAKER: 3
        },
        N = "webcache.googleusercontent.com";
    return {
        parseUrl: x,
        getUrl: M,
        isUrlToCurrentSite: _
    }
}), define("wixUrlParser/parsers/hashBangUrlParser", ["loggingUtils", "coreUtils", "lodash", "wixUrlParser/utils/urlParserUtils"], function(e, t, r, a) {
    function i(r) {
        var a;
        return "string" == typeof r ? a = t.urlUtils.parseUrl(r) : r.full ? a = r : e.log.error("url to parse has to be either a string or an object"), a
    }

    function n(e, t) {
        return r.includes(e.allPageIds, t)
    }

    function o(e, t) {
        var r = {},
            a = e.match(/#!(.*?)\/zoom[\/\|](.+?)\/([^\/]+)$/i);
        if (!a) {
            var i = e.match(/#!(.*?)[\/\|]([^\/]+)\/?(.*$)/i);
            if (i) {
                var o = i[1],
                    s = i[2],
                    l = i[3];
                return o && (r.title = o), n(t, s) ? r.pageId = s : (r.pageId = t.primaryPageId || t.mainPageId, r.pageItemId = s), l && (r.pageAdditionalData = l), r
            }
            return {
                pageId: t.mainPageId
            }
        }
        return a[1] && (r.title = a[1]), r.pageId = a[2], r.pageItemId = a[3], r.imageZoom = !0, r
    }

    function s(e, a, i, n) {
        var o = e.currentUrl,
            s = n || e.externalBaseUrl;
        s = s.replace("." + t.siteConstants.FREE_DOMAIN.WIXSITE + "/", "." + t.siteConstants.FREE_DOMAIN.WIX + "/");
        var l = o.query;
        return i || r.isEmpty(l) || (s += "?" + t.urlUtils.toQueryString(l)), o.url = s, a.id && (s += "#!" + a.title + "/" + a.id), a.additionalData && (s += "/" + a.additionalData), s
    }

    function l(e, t) {
        if (!t) return null;
        var a = i("#" === t ? e.currentUrl : t),
            n = "localhost" === a.hostname;
        return u(e, a) && !n ? e.currentUrl.full !== a.full || r.includes(a.full, "#") ? null : {
            pageId: e.mainPageId
        } : (r.isString(t) && 0 === t.indexOf("#!") && ((a = r.clone(e.currentUrl)).hash = t), o(a.hash, e))
    }

    function u(e, r) {
        return !(t.urlUtils.isHostnameYandexWebvisor(r.hostname) || d(e, r))
    }

    function p(e, t) {
        var r = e.pagesDataItemsMap[t];
        return r && "AppPage" === r.type && "AppPage" === r.appPageType && r.appPageId === m
    }

    function g(e) {
        return e && e.replace(/^https?:\/\//, "")
    }

    function d(e, r) {
        var a = r.hostname + r.path;
        return t.urlUtils.isSame(a, g(e.externalBaseUrl)) || t.urlUtils.isSame(a, g(e.unicodeExternalBaseUrl))
    }

    function c(e, r, a, i, n, o) {
        var l = {
            title: r.title || t.siteConstants.DEFAULT_PAGE_URI_SEO
        };
        if (r.pageItemId && !r.pageAdditionalData && r.imageZoom ? (l.id = "zoom", l.additionalData = r.pageId + "/" + r.pageItemId) : (r.pageId !== e.mainPageId || r.pageAdditionalData || a) && (l.id = r.pageItemId || r.pageId, l.additionalData = r.pageAdditionalData), p(e, r.pageId) && o) {
            var u = r.pageAdditionalData || "",
                g = o[u] || o[decodeURIComponent(u)] || {};
            l.id = r.pageId, l.title = g.title, l.additionalData = g.id
        }
        return s(e, l, i, n)
    }

    function U(e, t) {
        return l(a.getResolvedSiteData(e), t)
    }

    function f(e, t, r, i, n, o) {
        return c(a.getResolvedSiteData(e), t, r, i, n, o)
    }

    function I(e, r) {
        if ("#" === r) return !0;
        var i = t.urlUtils.parseUrl(r);
        return d(a.getResolvedSiteData(e), i)
    }
    var m = "7326bfbb-4b10-4a8e-84c1-73f776051e10";
    return {
        parseUrl: U,
        getUrl: f,
        isUrlToCurrentSite: I
    }
}), define("wixUrlParser", ["lodash", "coreUtils", "wixUrlParser/parsers/slashUrlParser", "wixUrlParser/parsers/hashBangUrlParser", "wixUrlParser/utils/urlParserUtils"], function(e, t, r, a, i) {
    function n(r, a) {
        var i = e.isObject(a) ? a : t.urlUtils.parseUrl(a);
        return !t.stringUtils.startsWith(i.hash, "#!") && r.isUsingSlashUrlFormat
    }

    function o(e, t) {
        return d[t || e.urlFormat] || d[e.urlFormat]
    }

    function s(e, t) {
        return t === e.replace(/\/$/, "") + "/app"
    }

    function l(e, t) {
        var o = i.getResolvedSiteData(e);
        return !t || s(o.externalBaseUrl, t) ? null : "#" === t ? l(o, o.currentUrl.full) : n(o, t) ? r.parseUrl(o, t) : a.parseUrl(o, t)
    }

    function u(e, t, r, a, n, s) {
        var l = i.getResolvedSiteData(e);
        return o(l, t.format).getUrl(l, t, r, a, n, s, e)
    }

    function p(e, t) {
        var o = i.getResolvedSiteData(e);
        return n(o, t) ? r.isUrlToCurrentSite(o, t) : a.isUrlToCurrentSite(o, t)
    }

    function g(e, t) {
        if (p(e, t)) {
            var r = e.currentUrl.protocol;
            return t.replace(/^https?:/, r)
        }
        return t
    }
    var d = {
        slash: r,
        hashBang: a
    };
    return {
        getUrl: u,
        parseUrl: l,
        utils: i,
        normalizeProtocolForSameSite: g
    }
});
//# sourceMappingURL=wixUrlParser.min.js.map
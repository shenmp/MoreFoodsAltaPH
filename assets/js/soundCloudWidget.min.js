"use strict";
define("soundCloudWidget", ["lodash", "react", "core", "utils", "santaProps"], function(t, e, s, r, o) {
    function i(t) {
        var e = t.split("?");
        return e && e.length > 2 && (t = e[0] + "?" + e[1]), t
    }

    function n(t) {
        return t = i(t), t = decodeURIComponent(t), t = a(t)
    }

    function a(t) {
        return t.replace(/;/g, "%3b")
    }

    function l(t, e) {
        return !0 === e.compData[t] || "true" === e.compData[t]
    }
    var p = s.compMixins,
        u = r.urlUtils;
    return {
        displayName: "SoundCloudWidget",
        mixins: [p.skinBasedComp],
        propTypes: {
            compData: o.Types.Component.compData.isRequired,
            style: o.Types.Component.style.isRequired,
            os: o.Types.Browser.os.isRequired,
            isPlayingAllowed: o.Types.RenderFlags.isPlayingAllowed.isRequired
        },
        statics: {
            useSantaTypes: !0
        },
        getSoundCloudUrl: function() {
            var t = this.props.compData.url;
            return t && (t = u.setUrlParam(t, "visual", l("showArtWork", this.props)), t = n(t = u.setUrlParam(t, "auto_play", this.props.isPlayingAllowed && l("autoPlay", this.props)))), t || ""
        },
        getInitialState: function() {
            return {
                $trackUrl: "" === this.props.compData.url ? "noContent" : ""
            }
        },
        getSkinProperties: function() {
            var s = {};
            this.props.os.ios && t.assign(s, {
                overflow: "scroll",
                "-webkit-overflow-scrolling": "touch"
            });
            var r = {
                "data-src": this.getSoundCloudUrl(),
                width: this.props.style.width,
                height: this.props.style.height,
                style: s
            };
            return {
                iFrameHolder: {
                    children: [e.DOM.iframe(r)]
                }
            }
        }
    }
});
//# sourceMappingURL=soundCloudWidget.min.js.map
"use strict";
define("flashComponent", ["lodash", "reactDOM", "core", "utils", "imageClientApi", "santaProps", "image", "swfobject"], function(i, t, e, n, o, s, a) {
    function p(i, t, e, n) {
        var o = !!i.link ? u.renderLink(i.link, t, n) : {};
        return o.style = {
            textAlign: e.align
        }, o
    }

    function r(i, t, e, s, a) {
        var p = {
                width: t,
                height: e
            },
            r = {
                width: s,
                height: a
            };
        return "fit" === i ? n.imageUtils.getContainerSize(p, r, o.fittingTypes.LEGACY_FIT_WIDTH) : "stretch" === i ? n.imageUtils.getContainerSize(p, r, o.fittingTypes.STRETCH) : {
            width: s,
            height: a
        }
    }

    function l(i, t) {
        return this.createChildComponent(i, "core.components.Image", "noFlashImg", {
            id: this.props.id + "noFlashImg",
            ref: "noFlashImg",
            imageData: i,
            containerWidth: t.width,
            containerHeight: t.height,
            displayMode: o.fittingTypes.LEGACY_FULL
        })
    }

    function h() {
        window.swfobject.embedSWF(c(this.props.compData, this.props.staticMediaUrl), this.props.id + "flashContainer", "100%", "100%", "10.0.0", "playerProductInstall.swf", null, {
            quality: "high",
            bgcolor: "#FAFAFA",
            allowscriptaccess: "never",
            allowfullscreen: "true",
            wMode: "transparent",
            scale: "exactFit",
            flashVars: "",
            play: "true",
            autoplay: "true"
        }, {
            align: "middle"
        }, d.bind(this)), this.embeddedUri = this.props.compData.uri
    }

    function d(i) {
        i.success && (t.findDOMNode(this.refs.noFlashImgContainer).style.display = "none")
    }

    function c(i, t) {
        return i.uri ? t + "/" + i.uri : ""
    }
    var m = e.compMixins,
        u = n.linkRenderer;
    return {
        displayName: "FlashComponent",
        mixins: [m.skinBasedComp],
        statics: {
            useSantaTypes: !0
        },
        propTypes: i.assign({
            staticMediaUrl: s.Types.ServiceTopology.staticMediaUrl.isRequired,
            linkRenderInfo: s.Types.Link.linkRenderInfo.isRequired,
            id: s.Types.Component.id.isRequired,
            compData: s.Types.Component.compData.isRequired,
            compProp: s.Types.Component.compProp.isRequired,
            style: s.Types.Component.style.isRequired,
            rootNavigationInfo: s.Types.Component.rootNavigationInfo.isRequired
        }, s.santaTypesUtils.getSantaTypesByDefinition(a)),
        getInitialState: function() {
            return this.embeddedUri = null, {
                $linkableComponent: !!this.props.compData.link ? "link" : "noLink"
            }
        },
        componentDidMount: function() {
            h.call(this)
        },
        componentDidUpdate: function() {
            this.props.compData.uri !== this.embeddedUri && h.call(this)
        },
        getSkinProperties: function() {
            var i = this.props.compData.placeHolderImage,
                t = this.props.compProp.displayMode,
                e = this.props.compData.uri ? this.props.compData.width : i.width,
                n = this.props.compData.uri ? this.props.compData.height : i.height,
                o = r(t, this.props.style.width, this.props.style.height, e, n);
            return {
                "": {
                    style: {
                        width: o.width,
                        height: o.height
                    }
                },
                link: p(this.props.compData, this.props.linkRenderInfo, this.props.compProp, this.props.rootNavigationInfo),
                noFlashImg: l.call(this, i, o)
            }
        }
    }
});
//# sourceMappingURL=flashComponent.min.js.map
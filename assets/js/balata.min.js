"use strict";
define("balata", ["react", "lodash", "santaProps", "core", "utils", "backgroundCommon"], function(e, i, t, s, o, a) {
    function n(e, t, s) {
        var o = t[u[e]] || {},
            a = i.get(s, ["transforms", e], {}),
            n = i.merge({}, o, a),
            r = {};
        return n.opacity && (r.opacity = n.opacity, n = i.omit(n, "opacity")), i.isEmpty(n) || (r.transform = i.reduce(n, function(e, i, t) {
            return e += t + "(" + i + ") "
        }, "")), r
    }

    function r(e, i, t, s) {
        var o = {
                skin: v.skin,
                styleId: v.style
            },
            a = {
                style: n(u.MEDIA, t, i),
                id: e.id + v.ref,
                ref: v.ref,
                bgEffectName: s,
                fittingType: t.fittingType,
                alignType: t.alignType,
                mediaTransforms: t.mediaTransforms,
                enableVideo: e.enableVideo,
                notifyMediaState: e.notifyMediaState,
                mediaQuality: e.mediaQuality,
                setMediaAPI: e.setMediaAPI,
                compProp: e.compProp,
                isPlayingAllowed: e.isPlayingAllowed
            };
        return this.createChildComponent(t.mediaRef, v.comp, o, a)
    }

    function p(e, i, t, s) {
        var o = {
                skin: b.skin,
                styleId: b.style
            },
            a = {
                style: n(u.OVERLAY, t, i),
                colorOverlay: t.colorOverlay,
                colorOverlayOpacity: t.colorOverlayOpacity,
                imageOverlay: t.imageOverlay,
                bgEffectName: s,
                id: e.id + b.ref,
                ref: b.ref
            };
        return this.createChildComponent(null, b.comp, o, a)
    }

    function l(e, i, t, s) {
        var o = {
                skin: h.skin,
                styleId: h.style
            },
            a = {
                style: n(u.UNDERLAY, t, i),
                colorOverlay: t.color,
                colorOverlayOpacity: c(t.colorOpacity, t.mediaRef),
                bgEffectName: s,
                id: e.id + h.ref,
                ref: h.ref
            };
        return this.createChildComponent(null, h.comp, o, a)
    }

    function c(e, i) {
        return !i || "WixVideo" !== i.type && "Video" !== i.type ? e : 0
    }

    function y(e) {
        var i = e.mediaRef,
            t = e.imageOverlay || e.colorOverlay,
            s = e.showOverlayForMediaType || "WixVideo",
            o = i && ("all" === s || s === i.type);
        return !(!t || !o)
    }

    function d(e) {
        return i.get(e.compDesign, "background", i.get(e.compData, "background", {}))
    }

    function g(e, t) {
        var s = d(e);
        if (i.isEmpty(s)) return null;
        var o = f.getBgEffectName(e.compBehaviors, e.isDesktopDevice, e.isMobileView),
            a = [];
        return a.push(l.call(this, e, t, s, o)), i.isEmpty(s.mediaRef) || a.push(r.call(this, e, t, s, o)), y(s) && a.push(p.call(this, e, t, s, o)), a
    }
    var m = s.compMixins,
        f = o.containerBackgroundUtils,
        u = o.balataConsts,
        v = {
            comp: "wysiwyg.viewer.components.background.bgMedia",
            skin: "skins.viewer.bgMedia.bgMediaSkin",
            style: "bgMedia",
            ref: u.MEDIA
        },
        b = {
            comp: "wysiwyg.viewer.components.background.bgOverlay",
            skin: "skins.viewer.bgOverlay.bgOverlaySkin",
            style: "bgOverlay",
            ref: u.OVERLAY
        },
        h = {
            comp: "wysiwyg.viewer.components.background.bgOverlay",
            skin: "skins.viewer.bgOverlay.bgOverlaySkin",
            style: "bgColor",
            ref: u.BG_COLOR
        };
    return {
        displayName: "Balata",
        mixins: [m.skinBasedComp, a.mixins.backgroundDetectionMixin],
        propTypes: i.defaults({
            id: e.PropTypes.string.isRequired,
            parentId: e.PropTypes.string.isRequired,
            compData: e.PropTypes.object,
            compDesign: e.PropTypes.object,
            compProp: e.PropTypes.object,
            compBehaviors: e.PropTypes.object,
            style: e.PropTypes.object,
            onClick: e.PropTypes.func,
            isDesktopDevice: t.Types.Device.isDesktopDevice.isRequired,
            isMobileView: t.Types.isMobileView.isRequired,
            designDataChangeAspect: t.Types.SiteAspects.designDataChangeAspect.isRequired,
            isPlayingAllowed: e.PropTypes.bool,
            enableVideo: e.PropTypes.bool,
            notifyMediaState: e.PropTypes.func,
            setMediaAPI: e.PropTypes.func,
            mediaQuality: e.PropTypes.string
        }, t.santaTypesUtils.getSantaTypesByDefinition(a.components.bgMedia), t.santaTypesUtils.getSantaTypesByDefinition(a.components.bgOverlay)),
        statics: {
            useSantaTypes: !0
        },
        getInitialState: function() {
            return {
                transforms: {}
            }
        },
        componentWillReceiveProps: function(e) {
            this.handleDesignDataBehaviors(e)
        },
        handleDesignDataBehaviors: function(e) {
            var i = d(e),
                t = d(this.props);
            this.setState({
                transforms: {}
            }), t.id !== i.id && this.props.designDataChangeAspect.notify(this.props.parentId, this.props.compDesign, e.compDesign)
        },
        getSkinProperties: function() {
            var e = f.getBgEffectName(this.props.compBehaviors, this.props.isDesktopDevice, this.props.isMobileView),
                t = g.call(this, this.props, this.state);
            return {
                "": {
                    style: i.assign({
                        position: "absolute",
                        top: 0,
                        width: "100%",
                        height: "100%",
                        pointerEvents: e ? "none" : "auto"
                    }, this.props.style),
                    children: t,
                    onClick: this.props.onClick,
                    key: "balata_" + e,
                    "data-enable-video": this.props.enableVideo
                }
            }
        },
        getDefaultSkinName: function() {
            return "skins.viewer.balata.balataBaseSkin"
        }
    }
});
//# sourceMappingURL=balata.min.js.map
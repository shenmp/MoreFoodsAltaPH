"use strict";
var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
    return typeof e
} : function(e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
};
define("tpa/common/tpaMetaData", [], function() {
    var e = "14517e1a-3ff0-af98-408e-2bd6953c36a2";
    return {
        PERMITTED_GLUED_TPAS_IN_MOBILE: [e],
        PERMITTED_FULL_SCREEN_TPAS_IN_MOBILE: [e]
    }
}), define("tpa/bi/errors.json", [], function() {
    return {
        SDK_SET_HEIGHT_ERROR: {
            errorCode: 190,
            desc: "sdk - set height with a big number",
            severity: "error",
            params: {
                p1: "height"
            }
        },
        SDK_PUBSUB_PUBLISH_ERROR: {
            errorCode: 191,
            desc: "sdk - pubSub: publish error. App not installed on site - cannot find appDefId",
            severity: "error"
        },
        SDK_NAVIGATION_TO_SECTION_ERROR: {
            errorCode: 192,
            desc: "sdk - navigate to section failed",
            severity: "error",
            params: {
                p1: "appDefinitionName",
                p2: "sectionId"
            }
        },
        ECOM_MISSING_PAGES: {
            errorCode: 300,
            desc: "missing ecom pages",
            severity: "error"
        },
        APP_IS_NOT_RESPONSIVE: {
            errorCode: 302,
            desc: "monitoring apps that are down",
            severity: "error",
            params: {
                p1: "endpoint",
                p2: "app_id",
                p3: "pageNo",
                p4: "totalLoadingTime"
            }
        }
    }
}), define("tpa/bi/errors", ["tpa/bi/errors.json", "lodash", "utils"], function(e, t, i) {
    var n = i.logger;
    return t.forEach(e, function(e, t) {
        e.errorName = t
    }), n.register("tpa", "error", e), e
}), define("tpa/utils/tpaUtils", ["lodash", "coreUtils"], function(e, t) {
    var i = function(e, t) {
            var i = e.getComponentById(t);
            return i && e.getSiteData().getClientSpecMapEntry(i.props.compData.applicationId)
        },
        n = function(t, i) {
            var n = a(t);
            return e.find(n, {
                appDefinitionId: i
            })
        },
        a = function(e) {
            return e.getSiteData().getClientSpecMap()
        },
        o = function(e, t) {
            var n = i(e, t);
            return n ? n.appDefinitionId : null
        },
        s = function(e) {
            var t = new RegExp("^TPA_PUB_SUB_");
            return e.replace(t, "")
        },
        r = function(e) {
            return "TPA_PUB_SUB_".concat(e)
        },
        p = function(t) {
            var i = e.get(t, "props.structure.componentType");
            return "wysiwyg.viewer.components.tpapps.TPASection" === i || "wysiwyg.viewer.components.tpapps.TPAMultiSection" === i
        },
        c = function(t, i) {
            t = t || "0.0.0", i = i || "1.41.0";
            var n = e.map(t.split("."), function(e) {
                    return parseInt(e, 10)
                }),
                a = e.map(i.split("."), function(e) {
                    return parseInt(e, 10)
                });
            return 3 === n.length && 3 === a.length && (n[0] >= a[0] && n[1] >= a[1] && n[2] >= a[2])
        },
        d = function(t) {
            var i = t.cookieUtils.getCookie("_wixUIDX") || "";
            return i = i.slice(e.lastIndexOf(i, "|") + 1), i = i.replace(/^(null-user-id|null)$/g, "")
        },
        u = function(e, t) {
            var i = e[t] && e[t].instance.split(".")[1];
            return i && JSON.parse(window.atob(i))
        },
        l = 0,
        g = function() {
            ++l
        },
        m = function(e, t) {
            --l, h(e, t)
        },
        h = function() {
            0 === l && (l = 1e3)
        },
        f = function(t, i) {
            if (t && i) {
                e.includes(i, "$TPA$") && (i = i.substr(0, i.indexOf("$TPA$")));
                var n = e.find(t.widgets, function(t) {
                    return e.get(t, "appPage.id") === i
                });
                return !!n && e.get(n, "appPage.hideFromMenu")
            }
            return !1
        },
        v = function(t) {
            var i = {},
                n = e.get(t, "query.petri_ovr");
            n && (i.petri_ovr = n);
            var a = e.get(t, "query.debugApp");
            return a && (i.debugApp = a), i
        };
    return {
        Constants: {
            TPA_PUB_SUB_PREFIX: "TPA_PUB_SUB_",
            TOP_PAGE_ANCHOR_PREFIX: "TOP_PAGE_"
        },
        getCacheKiller: t.urlUtils.persistentCacheKiller,
        getAppData: i,
        getAppDataByAppDefinitionId: n,
        getAppDefId: o,
        stripPubSubPrefix: s,
        addPubSubEventPrefix: r,
        isTPASection: p,
        sdkVersionIsAtLeast: c,
        getVisitorUuid: d,
        getInstance: u,
        getClientSpecMap: a,
        incAppCounter: g,
        decAppCounter: m,
        reportAppCounter: h,
        isPageMarkedAsHideFromMenu: f,
        getDebuggingParamsFromUrl: v
    }
}), define("tpa/services/clientSpecMapService", ["lodash", "tpa/utils/tpaUtils"], function(e, t) {
    var i = function(e) {
            var t = e.getCurrentUrlPageId(),
                i = e.getDataByQuery(t);
            return !!(i && "Page" === i.type && i.tpaApplicationId > 0) && n(e, i.tpaApplicationId, i.tpaPageId)
        },
        n = function(t, i, n) {
            var a = t.getClientSpecMap()[i];
            if (a) {
                var o = e.find(a.widgets, function(e) {
                    return e.appPage && e.appPage.id === n
                });
                if (o) return o.shouldBeStretchedByDefaultMobile || o.appPage.landingPageInMobile || o.appPage.fullPage
            }
            return !1
        };
    return {
        getMainSectionWidgetData: function(t) {
            var i = t.widgets;
            if (i) return e.find(i, function(e) {
                return e.appPage && e.appPage.name && !e.appPage.hidden
            })
        },
        isSuperAppByCompId: function(i, n) {
            var a = t.getAppData(i, n);
            return e.get(a, "isWixTPA")
        },
        isCurrentPageFullResponsive: function(e) {
            return e.isMobileDevice() && e.isMobileView() && !!i(e)
        }
    }
}), define("tpa/bi/events.json", [], function() {
    return {
        JS_SDK_FUNCTION_CALL: {
            eventId: 12,
            adapter: "sdk",
            src: 11,
            sampleRatio: 1e3,
            params: {
                visitor_id: "visitorUuid",
                ver: "sdkVersion",
                origin: "origin",
                function_name: "fnName",
                namespace: "namespace",
                app_id: "appId",
                instance_id: "instanceId",
                is_published: "isPublished",
                count: "count",
                param: "param"
            }
        },
        GALLERY_FUNCTION_CALL: {
            eventId: 11,
            adapter: "sdk",
            src: 11,
            params: {
                visitor_id: "visitorUuid",
                sdk_ver: "sdkVersion",
                origin: "origin",
                function_name: "fnName",
                namespace: "namespace",
                count: "count"
            }
        },
        APP_IFRAME_START_LOADING: {
            eventId: 642,
            src: 42,
            params: {
                widget_id: "widgetId",
                instance_id: "compId",
                appId: "appDefinitionId",
                loading_time: "loadingTime",
                pid: "pageId",
                pn: "pageNo",
                tts: "totalLoadingTime"
            }
        },
        APP_LOADED_SUCCESSFULLY: {
            eventId: 643,
            src: 42,
            params: {
                widget_id: "widgetId",
                instance_id: "compId",
                appId: "appDefinitionId",
                loading_time: "loadingTime",
                pid: "pageId",
                pn: "pageNo",
                tts: "totalLoadingTime"
            }
        },
        APP_LOADED_PARTIALLY: {
            eventId: 644,
            src: 42,
            params: {
                widget_id: "widgetId",
                instance_id: "compId",
                appId: "appDefinitionId",
                loading_time: "loadingTime",
                stage: "stage",
                stage_number: "stageNum",
                pid: "pageId",
                pn: "pageNo",
                tts: "totalLoadingTime"
            }
        },
        APP_SDK_START_LOADING: {
            eventId: 645,
            src: 42,
            params: {
                widget_id: "widgetId",
                instance_id: "compId",
                appId: "appDefinitionId",
                loading_time: "loadingTime",
                pid: "pageId",
                pn: "pageNo",
                tts: "totalLoadingTime"
            }
        }
    }
}), define("tpa/bi/events", ["tpa/bi/events.json", "lodash", "utils"], function(e, t, i) {
    return i.logger.register("tpa", "event", e), e
}), define("tpa/mixins/tpaCompBaseMixin", ["zepto", "lodash", "reactDOM", "santaProps", "tpa/common/tpaMetaData", "tpa/bi/errors", "tpa/services/clientSpecMapService", "tpa/utils/tpaUtils", "tpa/bi/events"], function(e, t, i, n, a, o, s, r, p) {
    function c(e) {
        return t.get(e, "structure.layout.fixedPosition") || !1
    }
    var d = {
            mobile: "unavailableInMobile",
            https: "unavailableInHttps"
        },
        u = {
            trailing: !0
        },
        l = function(e, i, n) {
            var a, o = {
                x: (a = c(e.props) ? e._cachedBoundingClientRect : e._domNode.getBoundingClientRect()).left + (i.x || 0),
                y: a.top + (i.y || 0),
                width: a.width,
                height: a.height
            };
            o.scale = n, null === e.windowSize && (e.windowSize = g(e));
            var s = {
                scrollTop: i.y,
                scrollLeft: i.x,
                documentHeight: e.windowSize.height,
                documentWidth: e.windowSize.width
            };
            return t.assign({}, o, a, s)
        },
        g = function(e) {
            return {
                width: e.props.getScreenWidth(),
                height: e.props.getScreenHeight()
            }
        },
        m = function(e, t) {
            var i = {
                charCode: e.charCode,
                keyCode: e.keyCode
            };
            this.sendPostMessage({
                intent: "addEventListener",
                eventType: t,
                params: i
            })
        },
        h = function(e) {
            return t.includes(e.getRootIdsWhichShouldBeRendered(), e.rootId)
        },
        f = t.throttle(function(e) {
            if (h(this.props)) {
                var i = t.get(this, "props.siteScale", 1),
                    n = l(this, e, i);
                this.sendPostMessage({
                    intent: "addEventListener",
                    eventType: "SCROLL",
                    params: n
                })
            }
        }, 250, u),
        v = function(e) {
            var i = e.getClientSpecMapEntry(e.compData.applicationId);
            return t.includes(a.PERMITTED_FULL_SCREEN_TPAS_IN_MOBILE, t.get(i, "appDefinitionId"))
        };
    return {
        propTypes: {
            isMobileView: n.Types.isMobileView,
            isViewerMode: n.Types.isViewerMode,
            currentUrl: n.Types.currentUrl.isRequired,
            compData: n.Types.Component.compData.isRequired,
            style: n.Types.Component.style.isRequired,
            id: n.Types.Component.id.isRequired,
            siteMembersAspect: n.Types.SiteAspects.siteMembers.isRequired,
            windowResizeEvent: n.Types.SiteAspects.windowResizeEvent.isRequired,
            reportBI: n.Types.reportBI.isRequired,
            getBiData: n.Types.getBiData.isRequired,
            primaryPageId: n.Types.primaryPageId.isRequired,
            getRootIdsWhichShouldBeRendered: n.Types.getRootIdsWhichShouldBeRendered,
            reportBeatEvent: n.Types.reportBeatEvent.isRequired,
            santaBase: n.Types.santaBase.isRequired,
            getClientSpecMapEntry: n.Types.getClientSpecMapEntry.isRequired,
            languageCode: n.Types.RendererModel.languageCode,
            pageId: n.Types.Component.pageId,
            rootId: n.Types.Component.rootId,
            structure: n.Types.Component.structure,
            siteScale: n.Types.RenderFlags.siteScale,
            getScreenWidth: n.Types.getScreenWidth.isRequired,
            getScreenHeight: n.Types.getScreenHeight.isRequired,
            tpaComponentsDomAspect: n.Types.SiteAspects.tpaComponentsDomAspect.isRequired,
            isExperimentOpen: n.Types.isExperimentOpen
        },
        ALIVE_TIMEOUT: 2e4,
        OVERLAY_GRACE: 5e3,
        onScroll: f,
        onResize: function(e) {
            this.windowSize = e, c(this.props) && (this._cachedBoundingClientRect = this._domNode.getBoundingClientRect())
        },
        onKeyDown: function(e) {
            h(this.props) && m.call(this, e, "KEY_DOWN")
        },
        onKeyUp: function(e) {
            h(this.props) && m.call(this, e, "KEY_UP")
        },
        isUnderMobileView: function() {
            return this.props.isMobileView
        },
        getEcomParams: function() {
            return "1380b703-ce81-ff05-f115-39571d94dfcd" === this.getAppData().appDefinitionId && this.props.currentUrl.query["ecom-tpa-params"]
        },
        _createOverlayChildComponent: function(e, i, n, a) {
            return a = a || {}, this.createChildComponent(t.merge(a, {
                id: n,
                style: this.props.style,
                overlay: i,
                applicationId: this.props.compData.applicationId,
                hideOverlayFunc: this._hideOverlay,
                compData: this.props.compData,
                languageCode: this.props.languageCode,
                santaBase: this.props.santaBase,
                getClientSpecMapEntry: this.props.getClientSpecMapEntry
            }), e, n, {})
        },
        _hideOverlay: function() {
            this.setState({
                showOverlay: !1
            })
        },
        _createOverlay: function(e) {
            if (!e) return null;
            switch (e) {
                case "preloader":
                    return this._createOverlayChildComponent("wysiwyg.viewer.components.tpapps.TPAPreloaderOverlay", e, "preloaderOverlay");
                case "unresponsive":
                    return this._createOverlayChildComponent("wysiwyg.viewer.components.tpapps.TPAUnavailableMessageOverlay", e, "unavailableMessageOverlay", {
                        text: "We're sorry, this content cannot be displayed. Please try again later."
                    });
                case d.https:
                    return this._createOverlayChildComponent("wysiwyg.viewer.components.tpapps.TPAUnavailableMessageOverlay", e, "unavailableMessageOverlay", {
                        text: "We're sorry, this content cannot be displayed."
                    });
                case d.mobile:
                    return this._createOverlayChildComponent("wysiwyg.viewer.components.tpapps.TPAUnavailableMessageOverlay", e, "unavailableMessageOverlay", {
                        text: "We're sorry, this content is currently not optimized for mobile view."
                    });
                default:
                    return null
            }
        },
        getRootStyle: function(e) {
            return t.assign({
                minHeight: e.height,
                minWidth: e.width,
                visibility: this.state.visibility
            }, e)
        },
        getCompRootStyle: function(e) {
            if (this.isUnderMobileView()) {
                if (this.state.isMobileFullScreenMode) return {
                    display: "block"
                };
                if (v(this.props)) return {
                    display: "none"
                }
            }
            return this.state && !t.isUndefined(this.state.height) && (e.height = this.state.height), this.state && !t.isUndefined(this.state.width) && (e.width = this.state.width), this.state && (this.state.isAlive || "preloader" === this.state.overlay || "unresponsive" === this.state.overlay || this.state.overlay === d.mobile) && (this.state.visibility = "visible"), this.state.ignoreAnchors ? e.zIndex = 1001 : e.zIndex = "", e = this.getRootStyle(e)
        },
        shouldRenderIframe: function() {
            var e = this.state.overlay,
                i = !t.includes(d, e),
                n = "unresponsive" === this.state.overlay,
                a = i && !n;
            return a
        },
        _getIframeProperties: function() {
            if (!this.shouldRenderIframe()) return null;
            var e = this._shouldShowIframe(this.state),
                t = this.buildUrl(this.getBaseUrl());
            return {
                "data-src": t,
                key: t,
                scrolling: "no",
                frameBorder: "0",
                allowTransparency: !0,
                allowFullScreen: !0,
                name: this.props.id,
                style: {
                    display: e ? "block" : "none",
                    width: "100%",
                    height: "100%",
                    overflow: "hidden",
                    position: "absolute"
                }
            }
        },
        getSkinProperties: function() {
            var e = this._createOverlay(this.state.overlay),
                t = this._getIframeProperties(),
                i = {
                    "": {
                        style: this.getCompRootStyle(this.props.style),
                        "data-ignore-anchors": this.state.ignoreAnchors
                    },
                    overlay: this.state.showOverlay && this.isNotWorker() ? e : null,
                    iframe: t || "remove"
                };
            return this.checkIfNeedToSendMemberData(), this.mutateSkinProperties && (i = this.mutateSkinProperties(i)), i
        },
        checkIfNeedToSendMemberData: function() {
            var e = this.state.shouldGetSiteMemberDetails;
            if (e) {
                var t = this.props.siteMembersAspect.getMemberDetails();
                t && e.callback({
                    authResponse: !0,
                    data: t
                })
            }
        },
        getInitialState: function() {
            this.reportPerformanceBiEvent(p.APP_IFRAME_START_LOADING), this.urlState = "", this.windowSize = null, this._domNode = null, this._cachedBoundingClientRect = null;
            var e = {
                visibility: "hidden",
                overlay: this.isUnderMobileView() && this.isMobileReady && !this.isMobileReady() ? d.mobile : null,
                isAlive: !1,
                registeredEvents: [],
                showOverlay: !0,
                initialWidth: this.props.style.width,
                initialHeight: this.props.style.height
            };
            return this.mutateInitialState && (e = this.mutateInitialState(e)), e
        },
        _showOverlayIfNeeded: function() {
            this.state && !1 === this.state.isAlive && !this.state.overlay && this.setState({
                overlay: this._getInitialOverlay(),
                visibility: "visible"
            })
        },
        _shouldShowIframe: function(e) {
            return !e.overlay || "preloader" === e.overlay
        },
        _getInitialOverlay: function() {
            return this.isMobileReady && this.isUnderMobileView() && !this.isMobileReady() ? d.mobile : "preloader"
        },
        componentWillReceiveProps: function(e) {
            this.resize && this.resize(e)
        },
        componentWillMount: function() {
            this.props.windowResizeEvent.registerToResize(this), this._domNode = null
        },
        componentDidMount: function() {
            this._domNode = i.findDOMNode(this), c(this.props) && (this._cachedBoundingClientRect = this._domNode.getBoundingClientRect());
            var e = this.state.overlay;
            this.isNotWorker() && (setTimeout(this._showOverlayIfNeeded, this.OVERLAY_GRACE), this.props.isViewerMode || this.setOverlayState && this.setOverlayState()), this.state.isAlive || t.includes(d, e) || !this.isNotWorker() || (this._appAliveTimeout = setTimeout(this._onAppAliveTimeoutExpires, this.ALIVE_TIMEOUT), r.incAppCounter())
        },
        componentWillUpdate: function(e, t) {
            var i = t.height !== this.state.height || t.width !== this.state.width;
            c(e) && i && (this._cachedBoundingClientRect = null)
        },
        componentDidUpdate: function() {
            null === this._cachedBoundingClientRect && c(this.props) && (this._cachedBoundingClientRect = this._domNode.getBoundingClientRect())
        },
        isNotWorker: function() {
            return !this.isTPAWorker || !this.isTPAWorker()
        },
        _onAppAliveTimeoutExpires: function() {
            this.showUnresponsiveOverlay()
        },
        showUnresponsiveOverlay: function() {
            this.state.isAlive || this.setState({
                overlay: "unresponsive",
                visibility: "visible"
            }, function() {
                this.reportBIAppNotResponsive()
            }.bind(this))
        },
        reportBIAppNotResponsive: function() {
            var e = this.props.compData.widgetId,
                i = this.getAppData(),
                n = e ? t.get(i.widgets, e) : s.getMainSectionWidgetData(i),
                a = this.props.getBiData(),
                r = {
                    endpoint: t.get(n, "widgetUrl"),
                    app_id: t.get(i, "appDefinitionId"),
                    pageNo: a.getPageNumber(),
                    totalLoadingTime: a.getTime().totalLoadingTime
                };
            this.props.reportBI(o.APP_IS_NOT_RESPONSIVE, r)
        },
        componentWillUnmount: function() {
            this._clearAliveTimeout()
        },
        _clearAliveTimeout: function() {
            this._appAliveTimeout && (clearTimeout(this._appAliveTimeout), this._appAliveTimeout = 0, this.props && r.decAppCounter(this.props.reportBeatEvent, this.props.primaryPageId))
        },
        setAppIsAlive: function(e) {
            this.reportPerformanceBiEvent(p.APP_SDK_START_LOADING), this._clearAliveTimeout(), this.setState({
                isAlive: !0,
                overlay: "preloader" === this.state.overlay ? null : this.state.overlay
            }, function() {
                this.props.tpaComponentsDomAspect.markComponentIsAlive(this.props.id), e && e()
            })
        },
        _isUrlSecure: function(e) {
            return /^https/.test(e)
        },
        reportPerformanceBiEvent: function(e, i) {
            if (this.props.isExperimentOpen("sv_tpaPerformanceBi")) {
                var n = this.getAppData(),
                    a = t.get(this.props, "compData.widgetId");
                if (!a) {
                    var o = s.getMainSectionWidgetData(n);
                    a = t.get(o, "widgetId")
                }
                var r = this.props.getBiData(),
                    p = r.getTime(),
                    c = {
                        widgetId: a,
                        appDefinitionId: t.get(n, "appDefinitionId"),
                        compId: this.props.id,
                        pageId: r.getPageId(),
                        pageNo: r.getPageNumber(),
                        loadingTime: p.loadingTime,
                        totalLoadingTime: p.totalLoadingTime
                    };
                t.merge(c, i), this.props.reportBI(e, c)
            }
        },
        enterFullScreen: function(e) {
            v(this.props) && this.setState({
                isMobileFullScreenMode: !0
            }, e)
        },
        exitFullScreen: function(e) {
            this.setState({
                isMobileFullScreenMode: !1
            }, e)
        }
    }
}), define("tpa/common/TPABaseUrlBuilder", ["lodash", "utils"], function(e, t) {
    var i = function(e) {
        this.url = t.urlUtils.parseUrl(e), this.url.query = this.url.query || {}, this.url.search = null
    };
    return i.prototype = {
        addQueryParam: function(t, i) {
            var n = this.url.query;
            return i && !e.isEmpty(i) && (n[t] ? e.isArray(n[t]) ? n[t].push(i) : n[t] = [n[t], i] : n[t] = i), this
        },
        addMultipleQueryParams: function(t) {
            return t && !e.isEmpty(t) && e.assign(this.url.query, t), this
        },
        mutateIframeSrc: function(e) {
            return e && (this.url = e(this.url)), this
        },
        filterQueryParams: function(t) {
            return t && !e.isEmpty(t) && (this.url.query = e.pick(this.url.query, t)), this
        },
        build: function() {
            return t.urlUtils.buildFullUrl(this.url)
        }
    }, i
}), define("tpa/common/TPAUrlBuilder", ["lodash", "utils", "tpa/common/TPABaseUrlBuilder"], function(e, t, i) {
    var n = function(e) {
        i.call(this, e)
    };
    return n.prototype = e.assign(new i, {
        addCacheKiller: function(e) {
            return this.addQueryParam("cacheKiller", e)
        },
        addInstance: function(e) {
            return this.addQueryParam("instance", e)
        },
        addWidth: function(e) {
            return this.addQueryParam("width", e)
        },
        addLocale: function(e) {
            return this.addQueryParam("locale", e)
        },
        addViewMode: function(e) {
            return this.addQueryParam("viewMode", e)
        },
        addCompId: function(e) {
            return this.addQueryParam("compId", e)
        },
        addDeviceType: function(e) {
            return this.addQueryParam("deviceType", e)
        },
        addEndpointType: function(e) {
            return this.addQueryParam("endpointType", e)
        },
        addOrigCompId: function(e) {
            return this.addQueryParam("origCompId", e)
        },
        addExternalId: function(e) {
            return this.addQueryParam("externalId", e)
        },
        addOrigin: function(e) {
            return this.addQueryParam("origin", e)
        },
        addPageId: function(e) {
            return this.addQueryParam("pageId", e)
        },
        addHeight: function(e) {
            return this.addQueryParam("height", e)
        },
        addViewerSessionId: function(e) {
            return this.addQueryParam("vsi", e)
        },
        addCbi: function(e) {
            return this.addQueryParam("cbi", e)
        }
    }), n
}), define("tpa/mixins/tpaUrlBuilderMixin", ["lodash", "utils", "santaProps", "tpa/utils/tpaUtils", "tpa/common/TPAUrlBuilder"], function(e, t, i, n, a) {
    var o = function(e, t) {
            return e.mutateIframeUrlQueryParam && (t = e.mutateIframeUrlQueryParam(t)), t
        },
        s = function(i) {
            if (!/^https?/.test(i)) {
                var n = this.props.getCurrentUrl(),
                    a = n && t.urlUtils.parseUrl(n),
                    o = e.get(a, "protocol", "http:");
                return t.urlUtils.addProtocolIfMissing(i, o)
            }
            return i
        };
    return {
        propTypes: {
            id: i.Types.Component.id.isRequired,
            isViewerMode: i.Types.isViewerMode,
            componentViewMode: i.Types.RenderFlags.componentViewMode,
            languageCode: i.Types.RendererModel.languageCode,
            compData: i.Types.Component.compData.isRequired,
            getCurrentUrl: i.Types.getCurrentUrl.isRequired,
            rootId: i.Types.Component.rootId,
            viewerSessionId: i.Types.viewerSessionId,
            currentUrl: i.Types.currentUrl.isRequired,
            aspectData: i.Types.TPA.data.isRequired
        },
        getInitialState: function() {
            this.viewMode = this.getViewMode()
        },
        getViewMode: function() {
            return this.props.isViewerMode ? "site" : this.props.componentViewMode
        },
        buildUrl: function(t, i) {
            var r = this.props.aspectData.queryParams || {};
            r = e.merge(r, o(this, r)), r = e.merge(r, n.getDebuggingParamsFromUrl(this.props.currentUrl)), this.getEcomParams && this.getEcomParams() && (r["ecom-tpa-params"] = this.getEcomParams()), t = s.call(this, t);
            var p = this.state.initialHeight ? this.state.initialHeight.toString() : void 0,
                c = new a(t).addCompId(this.props.id).addDeviceType(this.getDeviceType(this)).addInstance(this.getAppData(this).instance).addLocale(this.props.languageCode).addViewMode(this.viewMode).addCacheKiller(n.getCacheKiller()).addExternalId(this.props.compData.referenceId).addPageId(this.props.rootId).addHeight(p).filterQueryParams(i).addMultipleQueryParams(r).addViewerSessionId(this.props.viewerSessionId);
            return this.mutateIframeSrc && c.mutateIframeSrc(this.mutateIframeSrc), c.build()
        }
    }
}), define("tpa/common/supportedSiteEvents", [], function() {
    return {
        SCROLL: "SCROLL",
        PAGE_NAVIGATION: "PAGE_NAVIGATION",
        PAGE_NAVIGATION_IN: "PAGE_NAVIGATION_IN",
        PAGE_NAVIGATION_OUT: "PAGE_NAVIGATION_OUT",
        PAGE_NAVIGATION_CHANGE: "PAGE_NAVIGATION_CHANGE",
        STATE_CHANGED: "STATE_CHANGED",
        SESSION_CHANGED: "SESSION_CHANGED",
        SITE_METADATA_CHANGED: "SITE_METADATA_CHANGED",
        KEY_DOWN: "KEY_DOWN",
        KEY_UP: "KEY_UP"
    }
}), define("tpa/common/TPAPageNavigation", ["lodash", "tpa/common/supportedSiteEvents"], function(e, t) {
    function i(e, i, n, a) {
        return e === t.PAGE_NAVIGATION || e === t.PAGE_NAVIGATION_IN && a === i || e === t.PAGE_NAVIGATION_OUT && a === n
    }

    function n(t, n, o) {
        var s = e.intersection(a, t.state.registeredEvents);
        e.forEach(s, function(e) {
            i(e, n, o, t.props.rootId) && t.sendPostMessage({
                intent: "addEventListener",
                eventType: e,
                params: {
                    toPage: n,
                    fromPage: o,
                    isAppOnPage: t.props.rootId === n,
                    wasAppOnPage: t.props.rootId === o
                }
            })
        })
    }
    var a = [t.PAGE_NAVIGATION, t.PAGE_NAVIGATION_CHANGE, t.PAGE_NAVIGATION_IN, t.PAGE_NAVIGATION_OUT];
    return {
        triggerPageChange: n
    }
}), define("tpa/mixins/tpaCompApiMixin", ["lodash", "reactDOM", "santaProps", "tpa/common/TPAPageNavigation", "tpa/common/supportedSiteEvents"], function(e, t, i, n, a) {
    return {
        propTypes: {
            id: i.Types.Component.id.isRequired,
            clientSpecMap: i.Types.RendererModel.clientSpecMap.isRequired,
            compData: i.Types.Component.compData.isRequired,
            isMobileView: i.Types.isMobileView,
            sendPostMessage: i.Types.TPA.sendPostMessage.isRequired,
            windowScrollEvent: i.Types.SiteAspects.windowScrollEvent.isRequired,
            windowKeyboardEvent: i.Types.SiteAspects.windowKeyboardEvent.isRequired,
            svSessionChangeEvent: i.Types.SiteAspects.svSessionChangeEvent.isRequired,
            deleteCompListeners: i.Types.TPA.deleteCompListeners.isRequired,
            siteMetadataChangeAspect: i.Types.SiteAspects.siteMetadataChangeAspect.isRequired,
            currentUrlPageId: i.Types.Component.currentUrlPageId.isRequired
        },
        isEventSupported: function(e) {
            return !!a[e]
        },
        isCompListensTo: function(t) {
            return e.includes(this.state.registeredEvents, t)
        },
        getAppData: function() {
            return this.props.clientSpecMap[this.props.compData.applicationId] || {}
        },
        getDeviceType: function() {
            return this.props.isMobileView ? "mobile" : "desktop"
        },
        sendPostMessage: function(e) {
            this.props.sendPostMessage(this, e)
        },
        getIframe: function() {
            return this.refs.iframe && t.findDOMNode(this.refs.iframe)
        },
        startListen: function(e) {
            if (this.isEventSupported(e) && (this.setState({
                    registeredEvents: this.state.registeredEvents.concat(e)
                }), this.props)) switch (e) {
                case a.SCROLL:
                    this.props.windowScrollEvent.registerToScroll(this);
                    break;
                case a.SESSION_CHANGED:
                    this.props.svSessionChangeEvent.registerToSessionChanged(this);
                    break;
                case a.SITE_METADATA_CHANGED:
                    this.props.siteMetadataChangeAspect.registerToSiteMetadataChange(this);
                    break;
                case a.KEY_DOWN:
                    this.props.windowKeyboardEvent.registerToKeyDown(this);
                    break;
                case a.KEY_UP:
                    this.props.windowKeyboardEvent.registerToKeyUp(this)
            }
        },
        stopListen: function(t) {
            if (this.setState({
                    registeredEvents: e.without(this.state.registeredEvents, t)
                }), this.props) switch (t) {
                case a.SCROLL:
                    this.props.windowScrollEvent.unregisterToScroll(this, t);
                    break;
                case a.SESSION_CHANGED:
                    this.props.svSessionChangeEvent.unRegisterToSessionChanged(this);
                    break;
                case a.SITE_METADATA_CHANGED:
                    this.props.siteMetadataChangeAspect.unRegisterToSiteMetadataChange(this);
                    break;
                case a.KEY_DOWN:
                    this.props.windowKeyboardEvent.unRegisterKeyDown(this);
                    break;
                case a.KEY_UP:
                    this.props.windowKeyboardEvent.unRegisterKeyUp(this)
            }
        },
        onPageChange: function(e, t) {
            n.triggerPageChange(this, e, t)
        },
        setSiteMemberDataState: function(e) {
            this.setState({
                shouldGetSiteMemberDetails: e
            })
        },
        hasOrigComponent: function() {
            return !e.isUndefined(this.props.compData.origCompId)
        },
        componentWillReceiveProps: function(e) {
            var t = e.currentUrlPageId,
                i = this.props.currentUrlPageId;
            t !== i && this.onPageChange.call(this, t, i)
        },
        componentWillUnmount: function() {
            var e = this.props.id,
                t = this.getAppData().appDefinitionId;
            this.props.deleteCompListeners(t, e)
        }
    }
}), define("tpa/mixins/tpaWidgetMixin", ["santaProps"], function(e) {
    return {
        propTypes: {
            compData: e.Types.Component.compData.isRequired
        },
        getBaseUrl: function() {
            var e = this.getAppData();
            if (e.widgets) {
                var t = this.props.compData.widgetId,
                    i = e.widgets[t];
                if (i) {
                    var n = this.isInMobileDevMode && this.isInMobileDevMode();
                    return this.isUnderMobileView() && (i.mobileUrl && (n || i.mobilePublished)) ? i.mobileUrl : i.widgetUrl
                }
            }
            return ""
        }
    }
}), define("tpa/mixins/tpaResizeWindowMixin", ["lodash"], function(e) {
    function t(e) {
        return n.test(e)
    }

    function i(i) {
        return e.isNumber(i) && i >= 0 || t(i)
    }
    var n = /^[0-9]+%$/;
    return {
        resizeWindow: function(e, t, n) {
            var a = !1,
                o = {};
            i(t) && t !== this.state.height && (o.height = t, a = !0), i(e) && e !== this.state.width && (o.width = e, a = !0), a && (this.registerReLayout(), this.setState(o, n))
        }
    }
}), define("tpa/components/tpaWidget", ["lodash", "core", "santaProps", "tpa/mixins/tpaCompBaseMixin", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaWidgetMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o, s, r) {
    var p = t.compRegistrar,
        c = t.compMixins,
        d = {
            displayName: "TPAWidget",
            propTypes: {
                structure: i.Types.Component.structure.isRequired
            },
            statics: {
                useSantaTypes: !0
            },
            mixins: [c.skinBasedComp, c.timeoutsMixin, n, a, o, s, r],
            mutateIframeUrlQueryParam: function(t) {
                t.width = this.state.initialWidth;
                var i = this.props.structure.originCompId;
                return i && !e.isEmpty(i) && (t.originCompId = i), t
            }
        };
    return p.register("wysiwyg.viewer.components.tpapps.TPAWidget", d, !0), d
}), define("tpa/mixins/tpaSectionMixin", ["lodash", "santaProps", "tpa/common/supportedSiteEvents"], function(e, t, i) {
    return {
        propTypes: {
            getExistingRootNavigationInfo: t.Types.getExistingRootNavigationInfo,
            rootId: t.Types.Component.rootId.isRequired,
            getPageUrl: t.Types.getPageUrl.isRequired,
            pageId: t.Types.Component.pageId,
            compData: t.Types.Component.compData.isRequired,
            isViewerMode: t.Types.isViewerMode,
            currentUrlPageId: t.Types.Component.currentUrlPageId,
            updateSectionUrlState: t.Types.TPA.updateSectionUrlState.isRequired
        },
        isTPASection: !0,
        getSiteAdditionalDataFromProps: function(e) {
            var t = e.getExistingRootNavigationInfo(e.rootId);
            return t && t.pageAdditionalData || ""
        },
        mutateSkinProperties: function(e) {
            return "object" === _typeof(e.iframe) && (e.iframe.src = this.buildUrl(this.getBaseUrl())), e
        },
        mutateInitialState: function(e) {
            return e.sectionUrlState = this.getSiteAdditionalDataFromProps(this.props), e.sectionUrl = this.fixSectionUrl(), e
        },
        fixSectionUrl: function() {
            var e = this.props.getPageUrl(!0);
            return this.endsWith(e, "/") ? e : e + "/"
        },
        endsWith: function(t, i) {
            return e.endsWith(t, i)
        },
        isViewerMode: function() {
            return "site" === this.getViewMode()
        },
        componentWillReceiveProps: function(t) {
            var i = this.getSiteAdditionalDataFromProps(t);
            e.isUndefined(this.state.pushState) ? t.currentUrlPageId === this.props.pageId && this.isViewerMode() && (this.urlState !== i || this.shouldUpdateState) && (this.urlState = i, this.shouldUpdateState = !1, this.setState({
                sectionUrlState: i
            })) : (this.urlState = this.state.pushState, this.setState({
                pushState: void 0
            })), this.reportStateChanged(i)
        },
        reportStateChanged: function(e) {
            this.isCompListensTo(i.STATE_CHANGED) && this.sendPostMessage({
                intent: "addEventListener",
                eventType: "STATE_CHANGED",
                params: {
                    newState: e
                }
            })
        },
        isMobileReady: function() {
            var t = this.getAppData(),
                i = this.isInMobileDevMode && this.isInMobileDevMode(),
                n = this.props.compData,
                a = e.get(t, "widgets");
            if (a && n.widgetId) {
                var o = a[n.widgetId];
                return o.mobileUrl && (i || o.mobilePublished)
            }
            return t.sectionMobileUrl && (i || t.sectionMobilePublished)
        },
        mutateIframeUrlQueryParam: function(e) {
            return this.props.isViewerMode ? (e["section-url"] = this.fixSectionUrl(), e.target = "_top") : (e["section-url"] = this.getBaseUrl(), e.target = "_self"), e.width = this.state.initialWidth, e
        },
        mutateIframeSrc: function(e) {
            return e = this.addStateToUrlObj(e, this.state.sectionUrlState)
        },
        addStateToUrlObj: function(e, t) {
            return t && ("#" === t.charAt(0) ? e.hash = t : (e.path && "/" !== e.path.slice(-1) && (e.path += "/"), e.path += t)), e
        }
    }
}), define("tpa/components/tpaSection", ["lodash", "core", "santaProps", "tpa/mixins/tpaCompBaseMixin", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaSectionMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o, s, r) {
    var p = t.compRegistrar,
        c = t.compMixins,
        d = {
            displayName: "TPASection",
            propTypes: {
                compData: i.Types.Component.compData.isRequired
            },
            statics: {
                useSantaTypes: !0
            },
            mixins: [c.skinBasedComp, c.timeoutsMixin, n, a, o, s, r],
            getBaseUrl: function() {
                var t = this.getAppData(),
                    i = this.props.compData.widgetId,
                    n = t.sectionUrl,
                    a = t.sectionDefaultPage,
                    o = this.props.compData.type,
                    s = this.isUnderMobileView() && this.isMobileReady();
                if ("TPAWidget" === o && i) {
                    var r = e.find(t.widgets, {
                        widgetId: i
                    });
                    r && (a = r.appPage.defaultPage, n = s ? r.mobileUrl : r.widgetUrl)
                } else s && (n = t.sectionMobileUrl);
                return a && !e.isEmpty(a) && ("/" !== n.slice(-1) && (n += "/"), n += a), n
            }
        };
    return p.register("wysiwyg.viewer.components.tpapps.TPASection", d, !0), d
}), define("tpa/components/tpaMultiSection", ["lodash", "core", "santaProps", "tpa/mixins/tpaCompBaseMixin", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaSectionMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o, s, r) {
    var p = t.compRegistrar,
        c = t.compMixins,
        d = {
            displayName: "TPAMultiSection",
            propTypes: {
                compData: i.Types.Component.compData.isRequired
            },
            statics: {
                useSantaTypes: !0
            },
            mixins: [c.skinBasedComp, c.timeoutsMixin, n, a, o, s, r],
            getBaseUrl: function() {
                var t = this.getAppData(),
                    i = t.sectionUrl,
                    n = t.widgets[this.props.compData.widgetId],
                    a = t.sectionDefaultPage;
                return n && (i = this.isUnderMobileView() && this.isMobileReady() ? n.mobileUrl : n.widgetUrl, a = n.appPage.defaultPage), a && !e.isEmpty(a) && ("/" !== i.slice(-1) && (i += "/"), i += a), i
            }
        };
    return p.register("wysiwyg.viewer.components.tpapps.TPAMultiSection", d, !0), d
}), define("tpa/components/tpaWorker", ["core", "tpa/mixins/tpaCompBaseMixin", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin"], function(e, t, i, n) {
    var a = e.compRegistrar,
        o = {
            displayName: "TPAWorker",
            mixins: [e.compMixins.skinBasedComp, t, i, n],
            statics: {
                useSantaTypes: !0
            },
            getBaseUrl: function() {
                return this.getAppData().appWorkerUrl
            },
            mutateIframeUrlQueryParam: function(e) {
                return e.endpointType = "worker", e
            },
            mutateSkinProperties: function(e) {
                return e.iframe && e.iframe.style && (e.iframe.style.display = "none"), e
            },
            isTPAWorker: function() {
                return !0
            }
        };
    a.register("tpa.viewer.classes.TPAWorker", o)
}), define("tpa/components/tpaGluedWidget", ["core", "tpa/mixins/tpaCompBaseMixin", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaWidgetMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o) {
    var s = e.compRegistrar,
        r = e.compMixins,
        p = {
            displayName: "TPAGluedWidget",
            statics: {
                useSantaTypes: !0,
                behaviors: {
                    notifyWidget: {
                        methodName: "notifyWidgetInternal",
                        params: ["action"]
                    }
                }
            },
            mixins: [r.skinBasedComp, r.timeoutsMixin, t, i, n, a, o],
            mutateIframeUrlQueryParam: function(e) {
                return e.width = this.state.initialWidth, e
            },
            notifyWidgetInternal: function(e) {
                this.sendPostMessage({
                    intent: "addEventListener",
                    eventType: "QUICK_ACTION_TRIGGERED",
                    params: {
                        quickAction: e
                    }
                })
            }
        };
    return s.register("wysiwyg.viewer.components.tpapps.TPAGluedWidget", p, !0), p
}), define("tpa/aspects/TPAWorkerAspect", ["lodash"], function(e) {
    function t(e) {
        this._aspectSiteAPI = e
    }
    var i = function(e) {
        return {
            componentType: "tpa.viewer.classes.TPAWorker",
            skin: "wysiwyg.viewer.skins.TPAWidgetSkin",
            type: "Component",
            id: e
        }
    };
    return t.prototype = {
        getComponentsToRender: function() {
            var t = this._aspectSiteAPI.getSiteData().getClientSpecMap(),
                n = this.getTPAWorkers(t);
            return e.map(n, function(e) {
                var t = "tpaWorker_" + e.applicationId;
                return {
                    structure: i(t),
                    props: {
                        compData: e
                    }
                }
            })
        },
        getTPAWorkers: function(t) {
            return e.filter(t, function(t) {
                return e.isString(t.appWorkerUrl) && t.permissions && !t.permissions.revoked
            })
        }
    }, t
}), define("tpa/common/tpaPostMessageCommon", ["lodash"], function(e) {
    var t = {
            TPA_MESSAGE: "TPA",
            TPA_MESSAGE_PREVIEW: "TPA_PREVIEW",
            TPA_MESSAGE2: "TPA2",
            TPA_RESPONSE: "TPA_RESPONSE",
            TPA_PREVIEW_RESPONSE: "TPA_PREVIEW_RESPONSE",
            PINGPONG_PREFIX: "pingpong:"
        },
        i = function(e, t) {
            var i = {
                getSectionUrl: !0,
                siteInfo: !0,
                navigateToPage: !0,
                getExternalId: !0,
                smRequestLogin: !0,
                getValue: !0,
                getValues: !0,
                getCurrentPageAnchors: !0,
                getComponentInfo: !0,
                navigateToSectionPage: !0,
                getStateUrl: !0,
                getSitePages: !0,
                getSiteMap: !0
            };
            return !("preview" === e && i[t.type])
        },
        n = function(t) {
            return "preview" === t.getSiteData().viewMode && e.get(window, "documentServices.tpa.__privates.areDocumentServicesHandlersReady") && window.documentServices.tpa.__privates.areDocumentServicesHandlersReady()
        },
        a = function(e, t, i) {
            var n = "";
            try {
                n = JSON.stringify(t)
            } catch (e) {
                return
            }
            e.postMessage || (e = e.contentWindow), e.postMessage(n, i || "*")
        },
        o = function(e, i, n) {
            return function(o) {
                try {
                    a(e, {
                        intent: n || t.TPA_RESPONSE,
                        callId: i.callId,
                        type: i.type,
                        res: o,
                        status: !0
                    })
                } catch (e) {}
            }
        },
        s = function(e) {
            return e === t.TPA_MESSAGE || e === t.TPA_MESSAGE2
        },
        r = function(e) {
            return e === t.TPA_MESSAGE_PREVIEW
        },
        p = function(e) {
            return e.getSiteData().viewMode
        };
    return {
        Intents: t,
        callPostMessage: a,
        generateResponseFunction: o,
        isTPAMessage: s,
        fixOldPingPongMessageType: function(e) {
            return e.replace(t.PINGPONG_PREFIX, "")
        },
        handleTPAMessage: function(e, a, c, d) {
            var u;
            try {
                d.data ? u = JSON.parse(d.data) : d.originalEvent && d.originalEvent.data && (d = d.originalEvent, u = JSON.parse(d.data))
            } catch (e) {
                return
            }
            if (u && s(u.intent))
                if (e) c(e, u, o(d.source, u));
                else {
                    var l = p(a);
                    !i(l, u) && n(a) || (u.origin = "site" === l ? "viewer" : l, c(a, u, o(d.source, u)))
                }
            else u && r(u.intent) && (e ? c(e, u, o(d.source, u, t.TPA_PREVIEW_RESPONSE)) : c(a, u, o(d.source, u, t.TPA_PREVIEW_RESPONSE)))
        }
    }
}), define("tpa/utils/sitePages", ["lodash", "utils", "siteUtils", "coreUtils", "tpa/utils/tpaUtils"], function(e, t, i, n, a) {
    function o(e, i, n, a) {
        return t.wixUrlParser.getUrl(e, {
            pageId: i,
            title: n
        }, void 0, !0, a)
    }
    var s = function(i, n) {
            n = n || {};
            var a = t.menuUtils.getSiteMenuWithoutRenderedLinks(i, !1);
            n.filterHideFromMenuPages && (a = r(a, i.getClientSpecMap())), n.homePageId = i.getMainPageId();
            var o = g(a, i, n);
            return n.includeIsHomePage && (o = d(o, n.homePageId)), n.includePagesUrl && (o = p(i, o, e.get(n, "baseUrl"), n)), o
        },
        r = function(t, i) {
            return e.filter(t, function(e) {
                return !c(i, e.link)
            })
        },
        p = function t(i, n, a) {
            return e.map(n, function(e) {
                var n = i.getDataByQuery(e.id, "masterPage");
                return n && n.pageUriSEO && (e.url = o(i, e.id, n.pageUriSEO, a)), e.subPages && (e.subPages = t(i, e.subPages, a)), e
            })
        },
        c = function(t, i) {
            if ("PageLink" === e.get(i, "type")) {
                var n = e.get(i, "pageId.tpaApplicationId"),
                    o = e.get(i, "pageId.tpaPageId"),
                    s = e.get(t, n);
                return a.isPageMarkedAsHideFromMenu(s, o)
            }
            return !1
        },
        d = function t(i, n) {
            return e.map(i, function(e) {
                return e.isHomepage = u(e, n), e.subPages && (e.subPages = t(e.subPages, n)), e
            })
        },
        u = function(t, i) {
            return !e.isUndefined(t) && t.id === i
        },
        l = function(e) {
            var t = s(e);
            return I(t, e)
        },
        g = function(t, i, n) {
            var a = [],
                o = n.enhancedInfo ? v : m;
            return e.forEach(t, function(t) {
                var s = o(t, i, n),
                    r = t.items;
                e.forEach(r, function(e) {
                    var t = o(e, i, n);
                    s.subPages = s.subPages || [], s.subPages.push(t)
                }), a.push(s)
            }), a
        },
        m = function(i) {
            if (i.link) {
                var n = e.get(i.link, "pageId.id");
                return {
                    title: i.label || "",
                    id: t.stringUtils.startsWith(n, "#") ? n.substr(1) : n,
                    hide: !i.isVisible || !1
                }
            }
            return {}
        },
        h = function(i) {
            var n = e.get(i, "link.pageId.id");
            return n ? t.stringUtils.startsWith(n, "#") ? n.substr(1) : n : ""
        },
        f = function(t, i, n) {
            var a = h(t),
                s = e.get(t, "link.pageId.pageUriSEO"),
                r = {
                    isHomePage: a === n.homePageId
                };
            return s && (r.url = o(i, a, s, n.baseUrl)), r
        },
        v = function(t, n, a) {
            var o = i.linkUtils.getRelevantLinkDataFromMenuItem(t);
            switch ((o = e.merge(o, {
                type: o.type || "MenuHeader",
                title: t.label || "",
                hidden: !t.isVisible || !1
            })).type) {
                case "PageLink":
                case "AnchorLink":
                    o = e.merge(o, f(t, n, a));
                    break;
                case "DocumentLink":
                    o.url = i.linkUtils.getDocumentLink(t.link, n)
            }
            return o
        },
        y = function(e, t) {
            return t.getDataByQuery(e, "masterPage")
        },
        I = function(t, i) {
            var n = [];
            return e.forEach(t, function(t) {
                e.forEach(t.subPages, function(e) {
                    n.push(y(e.id, i))
                }), n.push(y(t.id, i))
            }), n
        };
    return {
        getSitePagesInfoData: s,
        getSitePagesData: l
    }
}), define("tpa/services/pageService", ["lodash", "tpa/utils/sitePages", "utils"], function(e, t, i) {
    var n = new i.SiteDataPrivates;
    return {
        mapPageToWidgets: function(i) {
            var a = i.getSiteData();
            n.has(a) || n.set(a, {});
            var o = n.get(a);
            if (e.size(o) > 0) return o;
            var s = t.getSitePagesData(i.getSiteData());
            return e.forEach(s, function(t) {
                if (t && t.tpaApplicationId > 0) {
                    var i = {
                        pageId: t.id,
                        tpaId: t.tpaApplicationId,
                        tpaPageId: t.tpaPageId
                    };
                    e.isUndefined(o[i.tpaId]) && (o[i.tpaId] = []), o[i.tpaId].push(i)
                }
            }), o
        }
    }
}), define("tpa/handlers/anchorHandlers", ["lodash", "utils", "coreUtils"], function(e, t, i) {
    var n = function(e) {
            return {
                id: e.compId,
                title: e.name
            }
        },
        a = function(e, t, i, n, a) {
            a(o(i, n))
        },
        o = function(t, i) {
            return e.map(i, n)
        },
        s = function(e, t, n, a, o, s) {
            var p = t.data.anchorId;
            if (p === i.siteConstants.PAGE_ANCHORS.TOP_ANCHOR_COMP_ID) e.scrollToAnchor(i.siteConstants.PAGE_ANCHORS.TOP_ANCHOR_ID);
            else if (p === i.siteConstants.PAGE_ANCHORS.BOTTOM_ANCHOR_COMP_ID) e.scrollToAnchor(i.siteConstants.PAGE_ANCHORS.BOTTOM_ANCHOR_ID);
            else if (r(n, a, p)) {
                var c = o(p);
                c && e.scrollToAnchor(c)
            } else s && s({
                error: {
                    message: 'anchor with id "' + p + '" was not found on the current page.'
                }
            })
        },
        r = function(t, i, n) {
            var a = o(t, i);
            return e.some(a, {
                id: n
            })
        };
    return {
        getCurrentPageAnchors: a,
        navigateToAnchor: s,
        isAnchorExistsOnPage: r
    }
}), define("tpa/services/tpaNavigationService", ["lodash", "siteUtils", "tpa/bi/errors", "tpa/handlers/anchorHandlers"], function(e, t, i, n) {
    var a = function(t, i, n, a, r, p, c) {
            if (i) {
                var d, u, l = !1,
                    g = n.data;
                if (e.isObject(n.data) && (g = n.data.state, u = e.get(n.data.sectionIdentifier, "sectionId"), l = e.get(n.data.sectionIdentifier, "noTransition")), e.isUndefined(a) || e.isEmpty(a)) o(t, i.appDefinitionName, u), c({
                    error: {
                        message: 'Page with app "' + i.appDefinitionName + '" was not found.'
                    }
                });
                else {
                    if (e.isUndefined(u)) d = a[0].pageId;
                    else {
                        var m = e.find(a, {
                            tpaPageId: u
                        });
                        if (e.isUndefined(m)) return o(t, i.appDefinitionName, u), void c({
                            error: {
                                message: 'App page with sectionId "' + u + '" was not found.'
                            }
                        });
                        d = m.pageId
                    }
                    p(d, g);
                    var h = {
                        pageId: d,
                        pageAdditionalData: g
                    };
                    l && (h.transition = "none"), s(t, h, r, void 0, void 0, !0)
                }
            } else {
                var f = e.get(n, "data.sectionIdentifier.appDefinitionId");
                f ? (o(t), c({
                    error: {
                        message: 'Application with appDefinitionId "' + f + '" was not found on the site.'
                    }
                })) : (o(t), c({
                    error: {
                        message: "Component was not found."
                    }
                }))
            }
        },
        o = function(e, t, n) {
            var a = {
                appDefinitionName: t || "",
                sectionId: n || ""
            };
            e.reportBI(i.SDK_NAVIGATION_TO_SECTION_ERROR, a)
        },
        s = function(e, t, i, n, a, o) {
            t.pageId === i ? (e.updatePageNavInfo(t, n, a), o && e.scrollSiteTo(0, 0)) : e.navigateToPage(t, n, a)
        };
    return {
        navigateToSection: a,
        navigateWithoutClosingPopupIfPossible: s,
        navigateToPage: function(i, a, o, s, r, p, c) {
            var d = e.get(a, "data.pageId"),
                u = e.get(a, "data.noTransition"),
                l = e.get(a, "data.anchorId"),
                g = r(d);
            o === d ? l && n.navigateToAnchor(i, a, d, g, p, c) : t.linkUtils.navigateToPage(i, d, s, u, void 0, function() {
                l && n.navigateToAnchor(i, a, d, g, p, c)
            }, c)
        }
    }
}), define("tpa/utils/tpaStyleUtils", ["lodash", "color", "fonts", "utils"], function(e, t, i, n) {
    var a = function(e, t) {
            var n = i.fontUtils.parseFontStr(e),
                a = i.fontUtils.getFontFamilyWithFallbacks(n.family);
            return {
                editorKey: t,
                lineHeight: n.lineHeight,
                style: n.style,
                weight: n.weight,
                size: n.size,
                fontFamily: n.family.toLowerCase(),
                value: "font:" + [n.style, n.variant, n.weight, n.size + "/" + n.lineHeight, a].join(" ") + ";"
            }
        },
        o = function(e) {
            var i = e.split(",");
            return t({
                r: i[0],
                g: i[1],
                b: i[2]
            }).hexString()
        },
        s = function(t, i, a, o) {
            var s = e.assign(c(o, i), C(t)),
                r = n.fonts.uploadedFontsUtils,
                p = e(s).map(function(t) {
                    return e.isString(t) && (t = JSON.parse(t)), t.family || t.fontFamily
                }).filter(function(e) {
                    return r.isUploadedFontFamily(e)
                }).union().value();
            return r.getUploadedFontFaceStyles(p, a.mediaRootUrl)
        },
        r = function(t, i, n, a, o) {
            return p(e.assign(c(n, i), C(t)), a, o)
        },
        p = function(t, n, a) {
            var o = {};
            e.forEach(t, function(e) {
                "string" == typeof e && (e = JSON.parse(e)), o[e.family || e.fontFamily] = 1
            });
            var s = i.fontUtils.getFontsUrlWithParams(o, n, a);
            return e.includes(s, "family=null") ? "" : s
        },
        c = function(t, i) {
            var n = {},
                a = d(t, i);
            return e.forEach(a, function(e, t) {
                t.match("param_font_") && (n[t.replace("param_font_", "")] = e)
            }), n
        },
        d = function(e, t) {
            var i = t[e];
            if (!i) return null;
            var n = i.style && i.style.properties;
            return n || null
        },
        u = function(i, a, s, r) {
            var p, c = a[i];
            if (c && !e.isString(c) && c.value) return {
                themeName: void 0,
                value: c.value.cssColor || c.value.color.value || c.value.rgba
            };
            if (!s && c && e.isString(c) && n.stringUtils.startsWith(c, "color_")) {
                var d = n.colorParser.getColorValue(r, c);
                d = e.includes(d, ",") ? o(d) : d;
                var u = t(d);
                return p = a.hasOwnProperty("alpha-" + i) && 1 !== a["alpha-" + i] ? "rgba(" + u.values.rgb.join(",") + "," + a["alpha-" + i] + ")" : u.hexString(), {
                    themeName: c,
                    value: p
                }
            }
            return s ? {
                themeName: void 0,
                value: void 0
            } : {
                themeName: void 0,
                value: c
            }
        },
        l = function(t, i, a) {
            a(e.reduce(i, function(a, o, s) {
                var r, p = n.stringUtils.startsWith(s, "alpha-");
                return p ? a : s.match("param_color_") ? (r = m("param_color_", s), a[r] = e.get(u(s, i, p, t), "value"), a) : s.match("param_number_") ? (r = m("param_number_", s), a[r] = +o, a) : s.match("param_boolean_") ? (r = m("param_boolean_", s), a[r] = g(o), a) : s.match("param_font_") ? (r = m("param_font_", s), a[r] = e.get(f(o, t), "value"), a) : void 0
            }, {}))
        },
        g = function(t) {
            return e.isBoolean(t) ? t : "false" !== t
        },
        m = function(e, t) {
            return "style." + t.replace(e, "")
        },
        h = function(e, t, i, a) {
            var o = a.THEME_DATA,
                s = n.stringUtils.startsWith(e, "alpha-");
            t.hasOwnProperty(e) && !s && (e.match("param_color_") ? i.colors[e.replace("param_color_", "")] = u(e, t, s, o) : e.match("param_number_") ? i.numbers[e.replace("param_number_", "")] = +t[e] : e.match("param_boolean_") ? i.booleans[e.replace("param_boolean_", "")] = g(t[e]) : e.match("param_font_") && (i.fonts[e.replace("param_font_", "")] = f(t[e], o)))
        },
        f = function(e, t) {
            var i = "object" === (void 0 === e ? "undefined" : _typeof(e)) ? e.value : JSON.parse(e);
            return i.fontStyleParam && "Custom" === i.preset ? v(i) : i.fontStyleParam && i.theme ? I(i) : i.fontStyleParam ? y(i, t.font) : i.fontParam && "None" === i.preset ? S(i) : i.fontParam && P(i), i
        },
        v = function(e) {
            var t = i.fontUtils.getFontFamilyWithFallbacks(e.family),
                n = e.size + "px",
                a = Math.floor(1.25 * e.size) + "px",
                o = "";
            o += "font:" + [e.style.italic ? "italic" : "normal", "normal", e.style.bold ? "bold" : "normal", n + "/" + a, t].join(" ") + ";", o += e.style.underline ? "text-decoration:underline;" : "", e.value = o
        },
        y = function(e, t) {
            var i = C(t)[e.preset];
            e.value = i.value, e.size = parseInt(i.size, 10), e.family = i.fontFamily, e.style.bold = "bold" === i.weight, e.style.italic = "italic" === i.style, e.style.underline = !1
        },
        I = function(e) {
            var t = i.fontUtils.getFontFamilyWithFallbacks(e.family),
                n = i.fontUtils.parseFontStr(e.preset);
            e.value = "font:" + [n.style, n.variant, n.weight, n.size + "/" + n.lineHeight, t].join(" ") + ";", e.size = parseInt(n.size, 10), e.family = n.family.toLowerCase(), e.style.bold = "bold" === n.weight, e.style.italic = "italic" === n.style, e.style.underline = !1
        },
        S = function(e) {
            var t = "";
            t += "font-family:" + i.fontUtils.getFontFamilyWithFallbacks(e.family) + ";font-style:" + (e.style.italic ? "italic" : "normal") + ";font-weight:" + (e.style.bold ? "bold" : "normal") + ";", t += e.style.underline ? "text-decoration:underline;" : "", e.value = t
        },
        P = function(e) {
            e.family = e.value, e.value = A(e), e.size = 0, e.style = {
                bold: !1,
                italic: !1,
                underline: !1
            }
        },
        A = function(e) {
            var t = "font-family:" + (e.cssFontFamily || e.value) + ";";
            return t = t.replace(/''/g, "'")
        },
        T = function(t, n, a) {
            var o = i.fontUtils.getWixStoredFontsCssUrls(t, n);
            return a || (o = e.invokeMap(o, String.prototype.replace, /^https?\:/, "")), o
        },
        w = function(t, i, n, a, o, p, c) {
            var u = t.THEME_DATA,
                l = {
                    colors: {},
                    numbers: {},
                    booleans: {},
                    fonts: {},
                    googleFontsCssUrl: r(u.font, t, i, o, p),
                    uploadFontFaces: s(u.font, t, a, i)
                },
                g = d(i, t);
            return g ? (e.forEach(g, function(e, i) {
                h(i, g, l, t)
            }), n ? e.merge(l, {
                cssUrls: T(a, o, c)
            }) : l) : l
        },
        C = function(t) {
            var i = 0;
            return e.reduce({
                Title: "font_0",
                Menu: "font_1",
                "Page-title": "font_2",
                "Heading-XL": "font_3",
                "Heading-L": "font_4",
                "Heading-M": "font_5",
                "Heading-S": "font_6",
                "Body-L": "font_7",
                "Body-M": "font_8",
                "Body-S": "font_9",
                "Body-XS": "font_10"
            }, function(e, n, o) {
                return e[o] = a(t[i++], n), e
            }, {})
        },
        b = function(t) {
            return e.reduce(t, function(t, i, n) {
                return (n >= 1 && n <= 5 || n >= 11 && n <= 35) && t.push({
                    name: "color_" + n,
                    value: e.includes(i, ",") ? o(i) : i
                }), t
            }, [])
        },
        M = function(t) {
            return e.forEach(t, function(t) {
                t.fonts = e.reject(t.fonts, {
                    permissions: "legacy"
                })
            }), t
        };
    return {
        getTextPresets: C,
        getSiteColors: b,
        getStylesForSDK: w,
        getStyleDataToPassIntoApp: function(e, t, a, o, s, r, p) {
            var c = t.THEME_DATA,
                d = n.media.getMediaUrl(r, "editorUI/fonts.v3.png"),
                u = M(i.fontUtils.getCurrentSelectablefontsWithParams(o, s));
            return {
                fonts: {
                    cssUrls: T(r, o, p),
                    imageSpriteUrl: d,
                    fontsMeta: u
                },
                siteTextPresets: C(c.font),
                siteColors: b(c.color),
                style: e ? w(t, e, !1, r, o, s, p) : {}
            }
        },
        getNameToFontsKeyMap: function() {
            var t = {
                Title: "font_0",
                Menu: "font_1",
                "Page-title": "font_2",
                "Heading-XL": "font_3",
                "Heading-L": "font_4",
                "Heading-M": "font_5",
                "Heading-S": "font_6",
                "Body-L": "font_7",
                "Body-M": "font_8",
                "Body-S": "font_9",
                "Body-XS": "font_10"
            };
            return e.invert(t)
        },
        getValueForWixParams: l
    }
}), define("tpa/handlers/performanceHandlers", ["tpa/bi/events"], function(e) {
    return {
        applicationLoaded: function(t, i) {
            var n = t.getComponentById(i.compId);
            n && n.reportPerformanceBiEvent && n.reportPerformanceBiEvent(e.APP_LOADED_SUCCESSFULLY)
        },
        applicationLoadingStep: function(t, i) {
            var n = t.getComponentById(i.compId);
            n && n.reportPerformanceBiEvent && n.reportPerformanceBiEvent(e.APP_LOADED_PARTIALLY, {
                stage: i.data.stage,
                stageNum: i.data.stageNum
            })
        }
    }
}), define("tpa/handlers/tpaDummyHandlers", [], function() {
    var e = function() {};
    return {
        toWixDate: e,
        getCompId: e,
        getOrigCompId: e,
        getWidth: e,
        getLocale: e,
        getCacheKiller: e,
        getTarget: e,
        getInstanceId: e,
        getSignDate: e,
        getUid: e,
        getPermissions: e,
        getIpAndPort: e,
        getDemoMode: e,
        getDeviceType: e,
        getInstanceValue: e,
        getSiteOwnerId: e,
        getImageUrl: e,
        getResizedImageUrl: e,
        getAudioUrl: e,
        getDocumentUrl: e,
        getSwfUrl: e,
        getPreviewSecureMusicUrl: e,
        getStyleParams: e,
        getStyleColorByKey: e,
        getColorByreference: e,
        getEditorFonts: e,
        getSiteTextPresets: e,
        getFontsSpriteUrl: e,
        getStyleFontByKey: e,
        getStyleFontByReference: e,
        getSiteColors: e,
        setUILIBParamValue: e,
        tpaWorker: {
            getViewMode: e,
            getDeviceType: e,
            getLocale: e,
            getInstanceId: e,
            getIpAndPort: e
        }
    }
}), define("tpa/handlers/tpaHandlers", ["zepto", "lodash", "core", "utils", "siteUtils", "reactDOM", "tpa/utils/sitePages", "tpa/services/pageService", "tpa/services/clientSpecMapService", "tpa/services/tpaNavigationService", "tpa/utils/tpaUtils", "tpa/utils/tpaStyleUtils", "tpa/bi/errors", "tpa/handlers/anchorHandlers", "tpa/handlers/performanceHandlers", "tpa/handlers/tpaDummyHandlers", "wixUrlParser", "tpa/common/tpaMetaData", "experiment"], function(e, t, i, n, a, o, s, r, p, c, d, u, l, g, m, h, f, v, y) {
    function I(e) {
        return e.getSiteAspect("tpaModalAspect")
    }

    function S(e) {
        return e.getSiteAspect("tpaPopupAspect")
    }

    function P(e) {
        return e.getSiteAspect("siteMembers")
    }

    function A(e) {
        return e.getSiteAspect("QuickActionBarAspect")
    }

    function T(e, t) {
        return {
            action: {
                type: "comp",
                name: t,
                sourceId: U
            },
            behavior: {
                type: "comp",
                targetId: e,
                name: x,
                params: {
                    sourceId: U,
                    action: t
                }
            }
        }
    }

    function w(e, i) {
        var n = e.getComponentById(i),
            a = t.get(n, "props.compData.applicationId");
        return e.getSiteData().getClientSpecMap()[a].appDefinitionId
    }

    function C(e, i) {
        var n = E(e, i);
        return t.includes(v.PERMITTED_FULL_SCREEN_TPAS_IN_MOBILE, n.appDefinitionId)
    }

    function b(e, i, n) {
        if (e.isExperimentOpen("sv_qab")) {
            var a = E(e, (i = i || {}).compId).appDefinitionId;
            a || n({
                error: {
                    message: "No matching app definition found for comp id " + i.compId
                }
            });
            var o = M(i.data || {});
            !t.isEmpty(o) && (o.appId = a, A(e).updateDynamicActions(o)), n && n()
        }
    }

    function M(e) {
        var i = {};
        return t.isBoolean(e.visible) && (i.enabled = e.visible), t.isBoolean(e.notifications) && (i.notificationCount = e.notifications ? 1 : 0), i
    }

    function E(e, i, n) {
        var a = null,
            o = e.getComponentById(i, n);
        if (o) {
            var s = t.get(o.props, "compData.applicationId") || null;
            a = e.getSiteData().getClientSpecMapEntry(s) || null
        }
        return a || {}
    }
    var D = n.logger,
        _ = i.activityTypes.TPAActivity,
        R = i.activityService,
        U = "QUICK_ACTION_BAR",
        x = "notifyWidget",
        O = {
            APP: "APP",
            COMPONENT: "COMPONENT"
        },
        N = function(e, t, i) {
            var n = {},
                a = e.getSiteData().getDataByQuery(e.getSiteData().getCurrentUrlPageId()),
                o = e.getSiteData().getCurrentUrlPageTitle();
            d.sdkVersionIsAtLeast(t.version, "1.42.0") ? n.pageTitle = o : (n.siteTitle = o, n.pageTitle = a.title), n.siteDescription = a.descriptionSEO, n.siteKeywords = a.metaKeywordsSEO;
            var s = e.getSiteData().currentUrl;
            n.url = s.full, n.baseUrl = e.getSiteData().getExternalBaseUrl(), n.referer = window.document.referrer, i(n)
        },
        B = function(e, i) {
            var n = t.get(i, "data.title");
            if (n) {
                var a = e.getSiteData(),
                    o = t.get(a, "rendererModel.siteInfo.siteTitleSEO");
                return t.get(i, "data.overrideTitle") ? n : n + " | " + o
            }
        },
        L = function(e, i) {
            var n = e.getComponentById(i.compId);
            if (n && "wysiwyg.viewer.components.tpapps.TPAMultiSection" === t.get(n, "props.structure.componentType") && t.get(n, "props.pageId") === e.getSiteData().getCurrentUrlPageId()) {
                var a, o, s = e.getPageData();
                if (y.isOpen("sv_tpaSetPageMetadata")) {
                    a = t.get(s, "title", "");
                    var r = t.get(i, "data.description") || t.get(s, "descriptionSEO", "");
                    o = B(e, i), e.setRunTimePageTitle(a, r, o)
                } else {
                    var p = (a = t.get(i, "data.title")) || t.get(s, "title", ""),
                        c = t.get(i, "data.description") || t.get(s, "descriptionSEO", "");
                    o = t.get(i, "data.overrideTitle") ? a : void 0, e.setRunTimePageTitle(t.unescape(p), c, o)
                }
            }
        },
        k = function(e, t) {
            var i = "number" == typeof t.data ? t.data : t.data.height;
            if (i > 1e6) {
                var n = {
                    height: i
                };
                D.reportBI(e.getSiteData(), l.SDK_SET_HEIGHT_ERROR, n)
            }
            var a = {
                    height: i,
                    ignoreAnchors: t.data.overflow
                },
                o = e.getComponentById(t.compId);
            o.registerReLayout(), o.setState(a)
        },
        W = function(e, t, i) {
            i(e.getSiteData().getCurrentUrlPageId())
        },
        F = function(e, i, n) {
            var a = {
                filterHideFromMenuPages: !0,
                includePagesUrl: t.get(i, "data.includePagesUrl", !1),
                includeIsHomePage: !0,
                enhancedInfo: !1
            };
            n(s.getSitePagesInfoData(e.getSiteData(), a))
        },
        G = function(e, t, i) {
            var n = {
                filterHideFromMenuPages: !0,
                includePagesUrl: !1,
                includeIsHomePage: !1,
                enhancedInfo: !0
            };
            i(s.getSitePagesInfoData(e.getSiteData(), n))
        },
        V = function(e, i, n) {
            var a, o = t.get(i, "data.sectionIdentifier.appDefinitionId");
            if (o) a = d.getAppDataByAppDefinitionId(e, o);
            else {
                var s = e.getComponentById(i.compId);
                s && (a = s.getAppData())
            }
            var p = t.get(a, "applicationId"),
                u = r.mapPageToWidgets(e),
                l = t.get(u, p),
                g = e.getSiteData().getPrimaryPageId(),
                m = function(i, n) {
                    var a = e.getComponentsByPageId(i),
                        o = t.find(a, "isTPASection");
                    o && o.props.updateSectionUrlState(o.props.id, n)
                };
            c.navigateToSection(e, a, i, l, g, m, n)
        },
        H = function(e, i, n) {
            e.scrollSiteBy(i.data.x, i.data.y), t.isFunction(n) && n()
        },
        z = function(e, i, n) {
            e.scrollSiteTo(i.data.x, i.data.y), t.isFunction(n) && n()
        },
        q = function(e, i, n) {
            var o = t.get(i, "data.link");
            a.linkUtils.navigateToLink(e, o, n)
        },
        K = function(e, i, a) {
            var o = e.getSiteData().getPrimaryPageId(),
                s = e.getSiteData().getAllPageIds(),
                r = function(t) {
                    var i = d.Constants.TOP_PAGE_ANCHOR_PREFIX + t;
                    return n.scrollAnchors.getPageAnchors(e.getSiteData(), t, i)
                };
            c.navigateToPage(e, i, o, s, r, t.partial(Qe, e), a)
        },
        Q = function(e, i, n) {
            var o = i.data.pageId,
                s = i.data.compId,
                r = e.getSiteData().getFocusedRootId(),
                p = e.getComponentById(s);
            if (p && "wysiwyg.viewer.components.tpapps.TPAGluedWidget" === p.props.structure.componentType) n({
                error: {
                    message: "Navigation to glued widget not supported."
                }
            });
            else if (t.isEmpty(o) || o === r) X(e, p, s, o, n);
            else {
                var c = e.getSiteData().getAllPageIds();
                a.linkUtils.navigateToPage(e, o, c, i.data.noPageTransition, void 0, X.bind(null, e, p, s, o, n), n)
            }
        },
        X = function(e, i, n, a, o) {
            var s = e.getSiteData();
            if (a = a || s.getFocusedRootId(), (i = i || Y(e, n, a)) && (j(i) || i.props.rootId === a)) {
                var r = J(i, e);
                s.animations.animate("BaseScroll", e.getSiteContainer(), 1, 0, {
                    y: r.y,
                    x: r.x,
                    callbacks: {
                        onComplete: o
                    }
                })
            } else o({
                error: {
                    message: (t.isEmpty(a) ? "Current page" : 'Page id "' + a + '"') + ' does not contain the component id "' + n + '".'
                }
            })
        },
        j = function(e) {
            return "masterPage" === e.props.rootId
        },
        Y = function(e, t, i) {
            return e.getComponentsByPageId(i)[t]
        },
        J = function(e, i) {
            var a = i.getSiteData(),
                s = o.findDOMNode(e),
                r = a.measureMap.siteMarginTop || 0,
                p = n.domMeasurements.getElementRect(s),
                c = p.top + r;
            t.get(a, "measureMap.custom.SITE_HEADER.isFixedPosition") && (c -= a.measureMap.height.SITE_HEADER);
            var d = n.scrollAnchors.normalizeYOffset(c, a);
            return {
                x: p.left,
                y: d
            }
        },
        $ = function(i, n, a) {
            var s = i.getSiteData(),
                r = i.getComponentById(n.compId),
                p = o.findDOMNode(r),
                c = 0;
            t.get(s, "measureMap.custom.SITE_HEADER.isFixedPosition") && (c = s.measureMap.height.SITE_HEADER);
            var d = i.getRenderFlag("siteScale") || 1;
            a({
                rect: Z(p, c),
                offsets: ee(e(p).offset(), c),
                scale: d
            })
        },
        Z = function(e, i) {
            var n = e.getBoundingClientRect(),
                a = t(n).pick(["left", "right", "top", "bottom", "height", "width"]).mapValues(function(e) {
                    return Math.floor(e)
                }).value();
            return i && (a.top -= i), a
        },
        ee = function(e, t) {
            return {
                x: e.left,
                y: e.top - t
            }
        },
        te = function(e, t, i) {
            var n = e.getComponentById(t.compId);
            I(e).showModal(pe(t, n), i)
        },
        ie = function(e, t, i) {
            var n = e.getComponentById(t.compId);
            if (!ne(n)) {
                var a = new Error;
                throw a.name = "Operation not supported", a.message = "An app can not open a popup from a modal.", a
            }
            S(e).showPopup(pe(t, n), i)
        },
        ne = function(e) {
            var i = ["wysiwyg.viewer.components.tpapps.TPAModal"];
            return !t.includes(i, t.get(e, "props.structure.componentType"))
        },
        ae = function(e, t) {
            var i = e.getComponentById(t.compId);
            i && i.hide && i.hide(t.data)
        },
        oe = function(e) {
            return t.isString(e) && /^[0-9]+%$/.test(e)
        },
        se = function(e) {
            var i = ["wysiwyg.viewer.components.tpapps.TPAGluedWidget", "wysiwyg.viewer.components.tpapps.TPAPopup", "wysiwyg.viewer.components.tpapps.TPAModal"];
            return e && e.resizeWindow && t.includes(i, e.props.structure.componentType)
        },
        re = function(e, t, i) {
            var n = t.data.width,
                a = t.data.height;
            oe(n) || (n = parseFloat(n)), oe(a) || (a = parseFloat(a));
            var o = e.getComponentById(t.compId);
            se(o) && o.resizeWindow(n, a, i)
        },
        pe = function(i, n) {
            var a = t.merge(i.data, {
                    origCompId: i.compId
                }),
                s = o.findDOMNode(n);
            if (s) {
                a.origCompStyle = e(s).offset();
                var r = s.getBoundingClientRect();
                a.origCompStyle.actualTop = r.top, a.origCompStyle.actualLeft = r.left
            }
            return a.position = t.defaults(a.position || {}, {
                origin: "FIXED",
                placement: "CENTER",
                x: 0,
                y: 0
            }), a.position.x = de(a.position.x), a.position.y = de(a.position.y), a.windowSize = {
                width: e(window).width(),
                height: e(window).height()
            }, a.applicationId = t.get(n, "props.compData.applicationId"), a.tpaData = ce(n), a
        },
        ce = function(e) {
            return t.get(e, "props.compData.tpaData")
        },
        de = function(e) {
            if (t.isString(e)) {
                var i = parseInt(e, 10);
                return t.isNaN(i) ? 0 : i
            }
            return t.isNumber(e) ? e : 0
        },
        ue = function(e, t) {
            var i = t.data.eventKey;
            if ("QUICK_ACTION_TRIGGERED" !== i) {
                var n = e.getComponentById(t.compId);
                n && n.isCompListensTo && !n.isCompListensTo(i) && n.startListen(i)
            } else !le(e, i, t.compId) && e.getSiteData().isViewerMode() && ge(e, t.compId)
        },
        le = function(e, i, n) {
            var a = w(e, n),
                o = e.getRuntimeDal().getActionsAndBehaviors(U),
                s = t(o).filter({
                    action: {
                        sourceId: U,
                        name: a
                    }
                }).filter({
                    behavior: {
                        targetId: n
                    }
                }).filter({
                    behavior: {
                        name: x
                    }
                }).value();
            return !t.isEmpty(s)
        },
        ge = function(e, t) {
            var i = T(t, w(e, t));
            e.getRuntimeDal().addActionsAndBehaviors(U, i)
        },
        me = function(e, t) {
            var i = t.data.eventKey || t.data;
            if ("QUICK_ACTION_TRIGGERED" !== i) {
                var n = e.getComponentById(t.compId);
                n && n.stopListen(i)
            } else he(e, t.compId)
        },
        he = function(e, t) {
            var i = w(e, t);
            e.getRuntimeDal().removeActionsAndBehaviors(U, {
                action: {
                    name: i
                }
            })
        },
        fe = function(e, t) {
            var i, n = "string" == typeof t.data ? t.data : t.data.state,
                a = e.getComponentById(t.compId),
                o = e.getRootOfComponentId(t.compId),
                s = e.getSiteData().getExistingRootNavigationInfo(o),
                r = s ? s.pageId : o;
            try {
                switch ((i = JSON.parse(n)).cmd) {
                    case "zoom":
                        a.processImageZoom(i);
                        break;
                    case "itemClicked":
                        a.processItemClicked(i);
                        break;
                    case "itemChanged":
                        a.processItemChanged(i);
                        break;
                    case "componentReady":
                        a.setComponentInIframeReady();
                        break;
                    case "navigateToDynamicPage":
                        var p = i.args[0],
                            c = f.getUrl(e.getSiteData(), p),
                            d = f.parseUrl(e.getSiteData(), c);
                        i.args[1] && (d.anchorData = i.args[1]), e.handleNavigation(d, i.args[2]);
                        break;
                    case "navigateToAnchor":
                        var u = i.args[0],
                            l = i.args[1];
                        e.getSiteData().getPrimaryPageId() === u ? l && e.scrollToAnchor(l) : e.navigateToPage({
                            pageId: u,
                            pageAdditionalData: null,
                            anchorData: l
                        });
                        break;
                    default:
                        ve(e, a, r, n)
                }
            } catch (t) {
                ve(e, a, r, n)
            }
        },
        ve = function(e, t, i, n) {
            if (d.isTPASection(t)) {
                t.setState({
                    pushState: n
                });
                var a = e.getSiteData().getPrimaryPageId();
                c.navigateWithoutClosingPopupIfPossible(e, {
                    pageId: i,
                    pageAdditionalData: n,
                    transition: "none"
                }, a)
            }
        },
        ye = function(e, t) {
            var i = e.getComponentById(t.compId),
                n = t.data.state,
                a = e.getRootOfComponentId(t.compId);
            if (d.isTPASection(i)) {
                i.setState({
                    pushState: n
                });
                var o = e.getSiteData().getPrimaryPageId();
                c.navigateWithoutClosingPopupIfPossible(e, {
                    pageId: a,
                    pageAdditionalData: n,
                    transition: "none"
                }, o, !1, !0)
            }
        },
        Ie = function(e, i, n) {
            var a = e.getComponentById(i.compId);
            if (a) {
                var o = r.mapPageToWidgets(e),
                    s = e.getSiteData().getClientSpecMap()[a.props.compData.applicationId],
                    p = s.applicationId;
                if (t.isEmpty(o) || t.isUndefined(o[p])) n({
                    error: {
                        message: 'Page with app "' + s.appDefinitionName + '" was not found.'
                    }
                });
                else {
                    var c, d = o[p],
                        u = i.data.sectionIdentifier,
                        l = t.find(d, {
                            tpaPageId: u
                        }) || d[0];
                    if (l && (c = l.pageId), t.isUndefined(c)) n({
                        error: {
                            message: "Page was not found."
                        }
                    });
                    else {
                        var g = e.getPageUrlFor(c);
                        n(t.isUndefined(g) ? {
                            error: {
                                message: "Page was not found."
                            }
                        } : {
                            url: g
                        })
                    }
                }
            } else n({
                error: {
                    message: "Component was not found."
                }
            })
        },
        Se = function(e, t, i, n) {
            i.getMemberDetails(function(t) {
                null !== t ? (n(t), e && e.setSiteMemberDataState(null)) : e ? e.setSiteMemberDataState({
                    callback: n
                }) : n(null)
            })
        },
        Pe = function(e, i, n) {
            var a = e.getComponentById(i.compId),
                o = P(e);
            if (o.isLoggedIn()) Se(a, 0, o, function(e) {
                n({
                    authResponse: !0,
                    data: e
                })
            });
            else {
                var s, r = t.get(i, "data.mode"),
                    p = r && "login" === r,
                    c = t.get(i, "data.language", "en");
                t.get(i, "data.callOnCancel") && (s = function() {
                    n({
                        wasCancelled: !0
                    })
                });
                var u = function(e) {
                    a && (a.shouldUpdateState = !0), n({
                        authResponse: !0,
                        data: e
                    })
                };
                o.showAuthenticationDialog({
                    successCallback: u,
                    cancelCallback: s,
                    language: c,
                    showLoginDialog: p,
                    appId: d.getAppDefId(e, i.compId)
                })
            }
        },
        Ae = function(e, i, n) {
            var a = P(e);
            if (a.isLoggedIn()) {
                var o = e.getComponentById(i.compId);
                o && (o.shouldUpdateState = !0);
                var s = t.get(i, "data.language");
                a.logout(s)
            } else n({
                onError: "No member is logged in"
            })
        },
        Te = function(e, t, i) {
            var n = e.getComponentById(t.compId),
                a = P(e);
            a.isLoggedIn() ? Se(n, 0, a, function(e) {
                i(e)
            }) : i(null)
        },
        we = function(e, i) {
            var n = t.get(i, "data.pixelId"),
                a = t.get(i, "data.pixelType");
            n && "FACEBOOK" === a && e.initFacebookRemarketing(n)
        },
        Ce = function(e, i) {
            var n = t.get(i, "data", {}),
                a = t.get(i, "data.eventName");
            a && (delete n.eventName, e.fireFacebookRemarketingPixel(a, n))
        },
        be = function(e, t) {
            var i = e.getComponentById(t.compId),
                n = Me(e),
                a = Ee(e, t),
                o = function(e) {
                    i.sendPostMessage({
                        intent: "TPA_RESPONSE",
                        compId: t.compId,
                        callId: t.callId,
                        type: t.type,
                        status: e.status,
                        res: {
                            response: {
                                activityId: e.response.activityId,
                                contactId: e.response.contactId
                            },
                            status: e.status
                        }
                    })
                },
                s = function(t) {
                    t.userSessionToken && e.setUserSession(t.userSessionToken), o({
                        status: !0,
                        response: t
                    })
                },
                r = function(e) {
                    var t = {
                        status: e.status,
                        statusText: e.statusText,
                        responseText: e.responseText
                    };
                    o({
                        status: !1,
                        response: t
                    })
                },
                p = new _(n, a);
            R.reportActivity(p, s, r)
        },
        Me = function(e) {
            var t = e.getSiteData();
            return {
                hubSecurityToken: t.getHubSecurityToken(),
                svSession: t.getSvSession(),
                metaSiteId: t.getMetaSiteId(),
                currentUrl: t.getCurrentUrl()
            }
        },
        Ee = function(e, i) {
            var n = d.getAppData(e, i.compId),
                a = i.data;
            return {
                type: t.get(a, "activity.type") || "TPA",
                appDefinitionId: n.appDefinitionId || "TPA",
                info: t.get(a, "activity.info") || {},
                details: t.get(a, "activity.details") || {},
                contactUpdate: t.get(a, "activity.contactUpdate") || {},
                instance: n.instance
            }
        },
        De = function(e, t, i) {
            i(e.getUserSession())
        },
        _e = function(e, i, n) {
            var a = e.getComponentById(i.compId);
            a && a.setAppIsAlive && a.setAppIsAlive(), t.get(a, "hasOrigComponent") && n(Re(e, a))
        },
        Re = function(e, i) {
            var n = e.getSiteData(),
                a = n.getAllTheme(),
                o = i && i.hasOrigComponent() ? e.getComponentById(i.getOrigComponentId()) : i,
                s = t.get(o, "props.structure.styleId"),
                r = n.rendererModel.siteInfo.documentType,
                p = n.getDataByQuery("masterPage").characterSets;
            return u.getStyleDataToPassIntoApp(s, a, n.santaBase, r, p, n.serviceTopology, !0)
        },
        Ue = function(e, i, n) {
            t.isFunction(n) && n(e.getSiteData().getCTToken())
        },
        xe = function(e, i, a) {
            i.data.messageId = Date.now();
            var o = {
                    ctToken: e.getSiteData().getCTToken()
                },
                s = t.omit(i.data, "version"),
                r = "//player-counters.wix.com/collector/rest/collect-js" + ("?" + n.urlUtils.toQueryString(o)),
                p = function(e) {
                    a({
                        status: "success",
                        response: e
                    })
                },
                c = function(e) {
                    var t = e && e.responseText;
                    a({
                        status: "error",
                        response: t
                    })
                };
            n.ajaxLibrary.ajax({
                type: "OPTIONS",
                url: r,
                data: JSON.stringify(s),
                dataType: "json",
                contentType: "application/json",
                success: p,
                error: c
            })
        },
        Oe = function(e, t, i) {
            var n = e.getComponentById(t.compId);
            n && i(n.props.compData.referenceId)
        },
        Ne = function(e, t, i) {
            i({
                editMode: e.getSiteData().isViewerMode() ? "site" : e.getRenderFlag("componentViewMode")
            })
        },
        Be = function(e, i, n) {
            var a, o = i.data.key,
                s = i.data.scope,
                r = e.getSiteData(),
                p = e.getComponentById(i.compId).props.compData;
            if (s === O.APP) a = We(r, o, "tpaData-" + p.applicationId, "masterPage");
            else {
                var c = e.getRootOfComponentId(i.compId);
                a = We(r, o, p.tpaData, c)
            }
            n(t.isEmpty(a) ? {
                error: {
                    message: "key " + o + " not found in " + s + " scope"
                }
            } : a)
        },
        Le = function(e, i, n) {
            var a, o = t.uniq(i.data.keys),
                s = e.getSiteData(),
                r = e.getRootOfComponentId(i.compId),
                p = e.getComponentById(i.compId, r).props.compData,
                c = i.data.scope;
            if (c === O.APP) {
                var d = Fe(s, "tpaData-" + p.applicationId, "masterPage");
                a = t.pick(d, o)
            } else {
                var u = Fe(s, p.tpaData, r);
                a = t.pick(u, o)
            }
            if (!t.isEmpty(a) && t(a).keys().isEqual(o)) n(a);
            else {
                var l = t.keys(a);
                n({
                    error: {
                        message: "keys " + t(l).xor(o).intersection(o).value() + " not found in " + c + " scope"
                    }
                })
            }
        },
        ke = function(e, i, n) {
            var a = e.getComponentById(i.compId),
                o = a.props.compData,
                s = a.getAppData(),
                r = j(a),
                c = o.widgetId ? s.widgets[o.widgetId] : p.getMainSectionWidgetData(s);
            n({
                compId: i.compId,
                showOnAllPages: r,
                pageId: r ? "" : a.props.pageId,
                tpaWidgetId: t.get(c, "tpaWidgetId", ""),
                appPageId: t.get(c, "appPage.id", "")
            })
        },
        We = function(e, i, n, a) {
            if (!t.isEmpty(n)) {
                var o = Fe(e, n, a);
                if (o) return t.pick(o, i)
            }
            return null
        },
        Fe = function(e, t, i) {
            var n = e.getDataByQuery(t, i);
            return n && n.content ? JSON.parse(n.content) : null
        },
        Ge = function(e, i, a) {
            var o = e.getComponentById(i.compId);
            if (!o) return a({
                error: {
                    message: "Component was not found."
                }
            });
            var s = r.mapPageToWidgets(e),
                p = e.getSiteData().getClientSpecMap()[o.props.compData.applicationId],
                c = p.applicationId;
            if (t.isEmpty(s) || t.isUndefined(s[c])) return a({
                error: {
                    message: 'Page with app "' + p.appDefinitionName + '" was not found.'
                }
            });
            var d, u = s[c],
                l = t.find(u, {
                    tpaPageId: i.data.sectionId
                });
            return d = l ? {
                pageId: l.pageId,
                pageAdditionalData: i.data.state
            } : {
                pageId: u[0].pageId
            }, a({
                url: n.wixUrlParser.getUrl(e.getSiteData(), d, void 0, !0)
            })
        },
        Ve = function(e, t, i) {
            i(e.getComponentById(t.compId).props.structure.styleId)
        },
        He = function(e, i, n) {
            var a = e.getSiteData(),
                o = i.data.styleId;
            if (t.isUndefined(a.getAllTheme()[o])) n({
                error: {
                    message: 'Style id "' + o + '" was not found.'
                }
            });
            else {
                var s = a.getAllTheme(),
                    r = a.rendererModel.siteInfo.documentType,
                    p = a.getDataByQuery("masterPage").characterSets;
                n(u.getStylesForSDK(s, o, !0, a.serviceTopology, r, p, !0))
            }
        },
        ze = function(e, i) {
            return {
                width: t.get(e, "measureMap.custom.WIX_ADS." + i + ".width"),
                height: t.get(e, "measureMap.custom.WIX_ADS." + i + ".height"),
                top: t.get(e, "measureMap.custom.WIX_ADS." + i + ".top"),
                left: t.get(e, "measureMap.custom.WIX_ADS." + i + ".left")
            }
        },
        qe = function(e, i, n) {
            var a = e.getSiteData();
            n(a.shouldShowWixAds() ? a.isMobileView() ? {
                top: t.merge(ze(a, "topAd"), {
                    left: 0
                })
            } : {
                top: ze(a, "topAd"),
                bottom: ze(a, "bottomAd")
            } : {})
        },
        Ke = function(e, t, i) {
            if (e.getSiteData().isMobileView()) {
                var n = t.data.isFullScreen,
                    a = t.compId,
                    o = e.getComponentById(a);
                C(e, a) ? n ? (e.enterFullScreenMode(), e.setSiteRootHiddenState(!0), o.enterFullScreen(i)) : (e.setSiteRootHiddenState(!1), e.exitFullScreenMode(), o.exitFullScreen(i)) : i && i()
            } else i({
                error: {
                    message: "show full screen is only available in Mobile view"
                }
            })
        },
        Qe = function(e, t) {
            var i = e.getComponentById(t).props.compData;
            return i && i.id
        },
        Xe = function(e, i, a) {
            var o = e.getSiteData().getCurrentUrlPageId(),
                s = d.Constants.TOP_PAGE_ANCHOR_PREFIX + o,
                r = n.scrollAnchors.getPageAnchors(e.getSiteData(), o, s);
            g.navigateToAnchor(e, i, o, r, t.partial(Qe, e), a)
        },
        je = function(e, t, i) {
            var a = e.getSiteData().getCurrentUrlPageId(),
                o = d.Constants.TOP_PAGE_ANCHOR_PREFIX + a,
                s = n.scrollAnchors.getPageAnchors(e.getSiteData(), a, o);
            g.getCurrentPageAnchors(e, t, a, s, i)
        };
    return t.merge({
        siteInfo: N,
        heightChanged: k,
        registerEventListener: ue,
        removeEventListener: me,
        navigateTo: q,
        navigateToPage: K,
        smRequestLogin: Pe,
        smCurrentMember: Te,
        scrollBy: H,
        scrollTo: z,
        navigateToComponent: Q,
        registerCampaignPixel: we,
        reportCampaignEvent: Ce,
        postActivity: be,
        getCurrentPageId: W,
        getUserSession: De,
        boundingRectAndOffsets: $,
        navigateToSectionPage: V,
        getSitePages: F,
        getSiteMap: G,
        appIsAlive: _e,
        openModal: te,
        openPopup: ie,
        closeWindow: ae,
        setFullScreenMobile: Ke,
        resizeWindow: re,
        appStateChanged: fe,
        getSectionUrl: Ie,
        postCountersReport: xe,
        getExternalId: Oe,
        getViewMode: Ne,
        getValue: Be,
        getValues: Le,
        getCurrentPageAnchors: je,
        navigateToAnchor: Xe,
        getStateUrl: Ge,
        getComponentInfo: ke,
        getStyleId: Ve,
        getStyleParamsByStyleId: He,
        replaceSectionState: ye,
        logOutCurrentMember: Ae,
        getCtToken: Ue,
        setPageMetadata: L,
        applicationLoaded: m.applicationLoaded,
        applicationLoadingStep: m.applicationLoadingStep,
        getAdsOnPage: qe,
        setMobileActionBarButton: b,
        tpaWorker: {
            siteInfo: N,
            getSitePages: F,
            getSiteMap: G,
            removeEventListener: me,
            registerEventListener: ue,
            registerCampaignPixel: we,
            reportCampaignEvent: Ce,
            smCurrentMember: Te,
            appIsAlive: _e,
            navigateToSectionPage: V,
            getValue: Be,
            getValues: Le,
            applicationLoaded: m.applicationLoaded,
            applicationLoadingStep: m.applicationLoadingStep
        }
    }, h)
}), define("tpa/handlers/tpaPubSubHandlers", ["tpa/utils/tpaUtils", "utils", "tpa/bi/errors"], function(e, t, i) {
    var n = t.logger;
    return {
        registerEventListener: function(e, t) {
            e.getSiteAspect("tpaPubSubAspect").subscribe(t)
        },
        publish: function(t, a) {
            var o = a.data,
                s = a.compId,
                r = e.getAppDefId(t, s);
            r ? (o.eventKey = e.stripPubSubPrefix(o.eventKey), t.getSiteAspect("tpaPubSubAspect").publish(r, s, o)) : n.reportBI(t.getSiteData(), i.SDK_PUBSUB_PUBLISH_ERROR)
        },
        removeEventListener: function(t, i) {
            var n = i.compId,
                a = i.data,
                o = e.getAppDefId(t, n),
                s = e.stripPubSubPrefix(a.eventKey);
            t.getSiteAspect("tpaPubSubAspect").unsubscribe(o, n, s)
        }
    }
}), define("tpa/common/tpaBi", ["lodash", "tpa/utils/tpaUtils", "tpa/bi/events", "utils"], function(e, t, i, n) {
    var a = {},
        o = function(e) {
            return e ? i.JS_SDK_FUNCTION_CALL : i.GALLERY_FUNCTION_CALL
        },
        s = function(e, t) {
            var i = e.widgets[t];
            return (i ? i.published || i.santaEditorPublished : e.sectionPublished) ? 1 : 0
        },
        r = function(e, i) {
            var n = t.getInstance(i, e.appId);
            if (!i[e.appId]) throw "app definition could not be found by the given appId";
            return {
                appId: i[e.appId].appDefinitionId,
                instanceId: n.instanceId,
                isPublished: s(i[e.appId], e.widgetId)
            }
        },
        p = function(t, i) {
            return t.widgetId = e.get(i, "widgetId"), t.appId = e.get(i, "applicationId"), t
        },
        c = function(e, t) {
            return t && e.version && e.type && e.namespace
        };
    return {
        sendBIEvent: function(i, s, d, u, l) {
            var g = p(i, d);
            if (c(g, d)) {
                var m = e.get(d, "applicationId"),
                    h = {
                        count: 1,
                        target: 1
                    };
                if (e.has(a, [m, i.type]) ? ++(h = e.get(a, [m, i.type])).count : (a[m] || (a[m] = {}), a[m][i.type] = h), h.count === h.target) {
                    var f = {
                        visitorUuid: t.getVisitorUuid(n),
                        sdkVersion: g.version,
                        origin: s,
                        fnName: g.type,
                        param: JSON.stringify(i.data),
                        namespace: g.namespace,
                        count: h.count
                    };
                    if (g.appId) {
                        var v = r(g, u);
                        e.merge(f, v)
                    }
                    l(o(g.appId), f), h.target *= 10
                }
            }
        }
    }
}), define("tpa/aspects/TPAPostMessageAspect", ["lodash", "tpa/common/tpaPostMessageCommon", "tpa/handlers/tpaHandlers", "tpa/handlers/tpaPubSubHandlers", "tpa/utils/tpaUtils", "tpa/common/tpaBi", "tpa/services/clientSpecMapService", "tpa/mixins/tpaCompApiMixin", "tpa/common/supportedSiteEvents", "utils"], function(e, t, i, n, a, o, s, r, p, c) {
    var d = {
            getCtToken: !0
        },
        u = function(t) {
            if (e.has(t, "data") && !e.isNull(t.data)) return t.data.eventKey && c.stringUtils.startsWith(t.data.eventKey, a.Constants.TPA_PUB_SUB_PREFIX)
        },
        l = function(e) {
            return u(e) ? n : m(e.compId) ? i.tpaWorker : i
        },
        g = function(i, n, s) {
            if (h(i, n.compId, n.type)) {
                var r = t.fixOldPingPongMessageType(n.type),
                    p = l(n);
                if (p[r] && (p[r].apply(this, [i, n, s]), i.isExperimentOpen("sv_SendSdkMethodBI") && v(i, n))) {
                    var c = i.getComponentById(n.compId);
                    o.sendBIEvent(n, n.origin || "viewer", e.get(c, "props.compData"), a.getClientSpecMap(i), i.reportBI)
                }
            }
        },
        m = function(e) {
            return e && c.stringUtils.startsWith(e, "tpaWorker_")
        },
        h = function(t, i, n) {
            var a = i && t.getComponentById(i);
            return ("appStateChanged" !== n || a && e.includes(t.getAllRenderedRootIds(), a.props.rootId)) && f(t, i, n)
        },
        f = function(e, t, i) {
            return !d[i] || s.isSuperAppByCompId(e, t)
        },
        v = function(t, i) {
            return !("registerEventListener" === i.type && !u(i)) || e.includes(p, i.data.eventKey)
        },
        y = function(t) {
            e.bindAll(this, e.functionsIn(this)), t.registerToMessage(this.handleTPAMessage), this._siteAPI = t
        };
    return y.prototype = {
        handleTPAMessage: function(e) {
            t.handleTPAMessage.call(this, void 0, this._siteAPI, g, e)
        },
        sendPostMessage: function(e, i) {
            var n = e.getIframe();
            if (!n) throw new Error("No iframe found in TPA component", e);
            t.callPostMessage(n, i)
        },
        callHandler: g
    }, y
}), define("tpa/mixins/tpaRuntimeCompMixin", ["santaProps"], function(e) {
    return {
        propTypes: {
            compData: e.Types.Component.compData.isRequired
        },
        getOrigComponentId: function() {
            return this.props.compData.origCompId
        }
    }
}), define("tpa/components/tpaPopup", ["lodash", "react", "core", "utils", "compUtils", "santaProps", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaRuntimeCompMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o, s, r, p, c) {
    var d = i.compRegistrar,
        u = {
            FIXED: "FIXED",
            ABSOLUTE: "ABSOLUTE",
            RELATIVE: "RELATIVE",
            DEFAULT: "DEFAULT"
        },
        l = {
            bottomCenter: "BOTTOM_CENTER",
            bottomLeft: "BOTTOM_LEFT",
            bottomRight: "BOTTOM_RIGHT",
            center: "CENTER",
            centerLeft: "CENTER_LEFT",
            centerRight: "CENTER_RIGHT",
            topCenter: "TOP_CENTER",
            topLeft: "TOP_LEFT",
            topRight: "TOP_RIGHT"
        },
        g = function(e, t, i) {
            return e + t / 2 - i / 2
        },
        m = function(e, t, i) {
            return e - (t + i)
        },
        h = function(e, t, i) {
            return e - (t + i)
        },
        f = function(e, t, i) {
            return e + t / 2 - i / 2
        },
        v = function(t) {
            var i = 0,
                n = "";
            if (e.isNumber(t)) i = t;
            else if (e.isString(t)) {
                var a = function(e) {
                        return /(%)$/.exec(e)
                    }(t),
                    o = function(e) {
                        return /^([0-9]+)/.exec(e)
                    }(t);
                i = o && o[1] ? parseInt(o[1], 10) : 0, a && a[1] && (n = a[1])
            }
            return {
                size: i,
                unit: n
            }
        },
        y = function(t, i, n, a) {
            var o = {
                position: "fixed",
                display: "block",
                width: n,
                height: a
            };
            return a = v(a), a.size = "%" === a.unit ? e.min([a.size, 100]) : e.min([a.size, i.height]), n = v(n), n.size = "%" === n.unit ? e.min([n.size, 100]) : e.min([n.size, i.width]), t.placement === l.center ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                marginLeft: n.size / -2 + n.unit,
                marginTop: "%" === a.unit ? 0 : a.size / -2 + a.unit,
                left: "50%",
                top: "%" === a.unit ? 0 : "50%"
            }) : t.placement === l.topLeft ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                left: "0px",
                top: "0px"
            }) : t.placement === l.topRight ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                right: "0px",
                top: "0px"
            }) : t.placement === l.topCenter ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                marginLeft: n.size / -2 + n.unit,
                top: "0px",
                left: "50%"
            }) : t.placement === l.centerRight ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                marginTop: "%" === a.unit ? 0 : a.size / -2 + a.unit,
                top: "%" === a.unit ? 0 : "50%",
                right: "0px"
            }) : t.placement === l.centerLeft ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                marginTop: "%" === a.unit ? 0 : a.size / -2 + a.unit,
                top: "%" === a.unit ? 0 : "50%",
                left: "0px"
            }) : t.placement === l.bottomLeft ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                bottom: "0px",
                left: "0px"
            }) : t.placement === l.bottomRight ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                bottom: "0px",
                right: "0px"
            }) : t.placement === l.bottomCenter ? e.assign(o, {
                height: a.size + a.unit,
                width: n.size + n.unit,
                marginLeft: n.size / -2 + n.unit,
                left: "50%",
                bottom: "0px"
            }) : o
        },
        I = function(t, i, n, a, o) {
            var s, r, p = {
                position: "absolute",
                display: "block"
            };
            return t.placement === l.center ? (a = e.min([a, n.height]), o = e.min([o, n.width]), s = f(i.top, i.height, a), r = g(i.left, i.width, o)) : t.placement === l.topLeft ? (a = e.min([a, i.top]), o = e.min([o, i.left]), s = i.top - a, r = i.left - o) : t.placement === l.topRight ? (a = e.min([a, i.top]), o = e.min([o, h(n.width, i.width, i.left)]), s = i.top - a, r = i.width + i.left) : t.placement === l.topCenter ? (a = e.min([a, i.top]), o = e.min([o, n.width]), s = i.top - a, r = g(i.left, i.width, o)) : t.placement === l.centerRight ? (a = e.min([a, n.height]), o = e.min([o, h(n.width, i.width, i.left)]), s = f(i.top, i.height, a), r = i.width + i.left) : t.placement === l.centerLeft ? (a = e.min([a, n.height]), o = e.min([o, i.left]), s = f(i.top, i.height, a), r = i.left - o) : t.placement === l.bottomLeft ? (a = e.min([a, m(n.height, i.top, i.height)]), o = e.min([o, i.left]), s = i.top + i.height, r = i.left - o) : t.placement === l.bottomRight ? (a = e.min([a, m(n.height, i.top, i.height)]), o = e.min([o, h(n.width, i.width, i.left)]), s = i.top + i.height, r = i.width + i.left) : t.placement === l.bottomCenter && (a = e.min([a, m(n.height, i.top, i.height)]), o = e.min([o, n.width]), s = i.top + i.height, r = g(i.left, i.width, o)), s = e.max([0, s]), r = e.max([0, r]), e.assign(p, {
                top: s,
                left: r,
                width: o,
                height: a
            })
        },
        S = function(t, i, n, a, o) {
            var s, r, p, c, d = {
                position: "absolute",
                display: "block"
            };
            return t.placement === l.center ? (p = e.min([i.actualTop + t.y, n.height - (i.actualTop + t.y)]), a = e.min([a, 2 * p]), c = e.min([i.actualLeft + t.x, n.width - (i.actualLeft + t.x)]), o = e.min([o, 2 * c]), s = i.top + t.y - a / 2, r = i.left + t.x - o / 2) : t.placement === l.topLeft ? (a = e.min([a, i.actualTop + t.y]), o = e.min([o, i.actualLeft + t.x]), s = i.top + t.y - a, r = i.left + t.x - o) : t.placement === l.topRight ? (a = e.min([a, i.actualTop + t.y]), o = e.min([o, n.width - (i.actualLeft + t.x)]), s = i.top + t.y - a, r = i.left + t.x) : t.placement === l.topCenter ? (a = e.min([a, i.actualTop + t.y]), c = e.min([i.actualLeft + t.x, n.width - (i.actualLeft + t.x)]), o = e.min([o, 2 * c]), s = i.top + t.y - a, r = i.left + t.x - o / 2) : t.placement === l.centerRight ? (p = e.min([i.actualTop + t.y, n.height - (i.actualTop + t.y)]), a = e.min([a, 2 * p]), o = e.min([o, n.width - (i.actualLeft + t.x)]), s = i.top + t.y - a / 2, r = i.left + t.x) : t.placement === l.centerLeft ? (p = e.min([i.actualTop + t.y, n.height - (i.actualTop + t.y)]), a = e.min([a, 2 * p]), o = e.min([o, i.actualLeft + t.x]), s = i.top + t.y - a / 2, r = i.left + t.x - o) : t.placement === l.bottomLeft ? (a = e.min([a, n.height - (i.actulaTop + t.y)]), o = e.min([o, i.actualLeft + t.x]), s = i.top + t.y, r = i.left + t.x - o) : t.placement === l.bottomRight ? (a = e.min([a, n.height - (i.actualTop + t.y)]), o = e.min([o, n.width - (i.actualLeft + t.x)]), s = i.top + t.y, r = i.left + t.x) : t.placement === l.bottomCenter && (a = e.min([a, n.height - (i.actualTop + t.y)]), c = e.min([i.actualLeft + t.x, n.width - (i.actualLeft + t.x)]), o = e.min([o, 2 * c]), s = i.top + t.y, r = i.left + t.x - o / 2), s = e.max([0, s]), r = e.max([0, r]), e.assign(d, {
                top: s,
                left: r,
                width: o,
                height: a
            })
        },
        P = function(t, i, n, a) {
            if (a.width < 10 || a.height < 10) {
                var o = v(n);
                o.size = "%" === o.unit ? e.min([o.size, 100]) : e.min([o.size, t.height]);
                var s = v(i);
                return s.size = "%" === s.unit ? e.min([s.size, 100]) : e.min([s.size, t.width]), {
                    position: "fixed",
                    display: "block",
                    width: s.size + o.unit,
                    height: o.size + s.unit,
                    marginLeft: s.size / -2 + o.unit,
                    marginTop: o.size / -2 + s.unit,
                    left: "50%",
                    top: "50%"
                }
            }
            return a
        },
        A = function(e, t, i, n, a) {
            var o = {};
            return e.origin !== u.DEFAULT && e.origin !== u.FIXED || (o = y(e, i, n, a)), e.origin === u.RELATIVE && (o = I(e, t, i, a, n)), e.origin === u.ABSOLUTE && (o = S(e, t, i, a, n)), o = P(i, n, a, o)
        },
        T = function(e) {
            return e.isModalOpen ? 1001 : null
        },
        w = {
            displayName: "TPAPopup",
            mixins: [i.compMixins.skinBasedComp, s, r, p, c],
            propTypes: {
                compData: o.Types.Component.compData.isRequired,
                id: o.Types.Component.id.isRequired,
                aspectData: o.Types.TPA.data.isRequired,
                onCloseCallback: t.PropTypes.func,
                removePopup: o.Types.TPA.removePopup.isRequired
            },
            statics: {
                useSantaTypes: !0
            },
            getInitialState: function() {
                return {
                    showComponent: !0,
                    registeredEvents: [],
                    $displayDevice: this.getDeviceType()
                }
            },
            getSkinProperties: function() {
                var e = this.state.showComponent ? this.getSelfStyle() : {
                        display: "none"
                    },
                    t = this.isBareTheme() ? "none" : "block";
                return this.state.showComponent ? {
                    "": {
                        style: e
                    },
                    closeButton: {
                        onClick: this.hide,
                        style: {
                            display: t
                        }
                    },
                    iframe: {
                        src: this.buildUrl(this.props.compData.url),
                        scrolling: "no",
                        frameBorder: "0",
                        allowTransparency: !0,
                        allowFullScreen: !0,
                        name: this.props.id
                    }
                } : {
                    "": {
                        style: e
                    }
                }
            },
            mutateIframeUrlQueryParam: function(e) {
                return e.origCompId = this.props.compData.origCompId, e
            },
            getSelfStyle: function() {
                var t = e.defaults(this.props.compData.position, {
                        x: 0,
                        y: 0
                    }),
                    i = this.props.compData.origCompStyle,
                    n = this.props.compData.windowSize,
                    a = e.isUndefined(this.state.width) ? this.props.compData.width : this.state.width,
                    o = e.isUndefined(this.state.height) ? this.props.compData.height : this.state.height,
                    s = A(t, i, n, a, o);
                return s.zIndex = T(this.props.aspectData), this.getThemeStyle(s)
            },
            getThemeStyle: function(t) {
                return this.isBareTheme() ? e.merge(t, {
                    background: "none",
                    boxShadow: "none",
                    borderRadius: 0
                }) : t
            },
            hide: function(t, i) {
                var n = this;
                this.setState({
                    showComponent: !1
                }, function() {
                    var a = t && t.message ? t : void 0;
                    n.props.onCloseCallback && n.props.onCloseCallback(a), this.props.removePopup(n), e.isFunction(i) && i()
                })
            },
            isBareTheme: function() {
                return "BARE" === this.props.compData.theme
            }
        };
    return d.register("wysiwyg.viewer.components.tpapps.TPAPopup", w), w
}), define("tpa/aspects/TPAPopupAspect", ["lodash", "utils", "tpa/components/tpaPopup"], function(e, t) {
    function i() {
        return {
            componentType: "wysiwyg.viewer.components.tpapps.TPAPopup",
            type: "Component",
            id: t.guidUtils.getUniqueId(),
            skin: "wysiwyg.viewer.skins.TPAPopupSkin",
            styleId: ""
        }
    }

    function n(e) {
        return e.getAspectGlobalData(s)
    }

    function a(t) {
        return t && e.isArray(t) && t.length > 0
    }

    function o(t) {
        this.aspectSiteApi = t, e.bindAll(this, e.functionsIn(this)), this.aspectSiteApi.registerToUrlPageChange(this.removeAllPopups)
    }
    var s = "tpaPopupAspect";
    return o.prototype = {
        getComponentsToRender: function() {
            var t = n(this.aspectSiteApi);
            return a(t) ? e.map(t, function(e) {
                return {
                    structure: e.structure,
                    props: {
                        compData: e.popupData,
                        onCloseCallback: e.popupOnClose
                    }
                }
            }) : null
        },
        showPopup: function(e, t) {
            var o = {
                    structure: i(),
                    popupData: e,
                    popupOnClose: t
                },
                r = n(this.aspectSiteApi);
            a(r) || (r = []), r.push(o), this.aspectSiteApi.setAspectGlobalData(s, r), this.aspectSiteApi.forceUpdate()
        },
        removePopup: function(t) {
            var i = t.props.id,
                o = n(this.aspectSiteApi);
            a(o) && (o = e.reject(o, {
                structure: {
                    id: i
                }
            }), this.aspectSiteApi.setAspectGlobalData(s, o), this.aspectSiteApi.forceUpdate())
        },
        removeAllPopups: function() {
            a(n(this.aspectSiteApi)) && (this.aspectSiteApi.setAspectGlobalData(s, []), this.aspectSiteApi.forceUpdate())
        }
    }, o
}), define("tpa/classes/PubSubHub", ["lodash", "utils"], function(e, t) {
    var i = function(e) {
        this.hub = e || {}
    };
    return i.prototype = {
        persistData: function(e, i, n, a) {
            var o = {
                    data: a,
                    name: i,
                    origin: n
                },
                s = this._addEvent(e, i);
            s.data.length >= 1e3 && (t.log.warn("You have exceeded the data limit, and some of the data will be lost! Please make sure you are not persisting unneeded data."), s.data.shift()), s.data.push(o)
        },
        addEventListener: function(t, i, n) {
            var a = this._addEvent(t, i);
            e.includes(a.listeners, n) || a.listeners.push(n)
        },
        removeEventListener: function(t, i, n) {
            var a = this._getEvent(t, i);
            a && (a.listeners = e.without(a.listeners, n))
        },
        getPersistedData: function(e, t) {
            var i = this._getEvent(e, t);
            return i && i.data
        },
        getEventListeners: function(e, t) {
            var i = this._getEvent(e, t);
            return i && i.listeners
        },
        deleteCompListeners: function(t, i) {
            var n = this,
                a = this._getAppEvents(t);
            e.forOwn(a, function(e, a) {
                n.removeEventListener(t, a, i)
            })
        },
        _addEvent: function(e, t) {
            var i = this.hub[e];
            i || (i = this.hub[e] = {});
            var n = i[t];
            return n || (n = i[t] = {
                data: [],
                listeners: []
            }), n
        },
        _getEvent: function(e, t) {
            var i = this.hub[e];
            if (i) return i[t]
        },
        _getAppEvents: function(e) {
            return this.hub[e]
        }
    }, i
}), define("tpa/aspects/TPAPubSubAspect", ["lodash", "tpa/utils/tpaUtils", "tpa/classes/PubSubHub"], function(e, t, i) {
    var n = function(t) {
        this.aspectSiteAPI = t, this.hub = new i, e.bindAll(this, e.functionsIn(this))
    };
    return n.prototype = {
        publish: function(i, n, a) {
            var o = a.eventKey,
                s = a.isPersistent,
                r = this.hub.getEventListeners(i, o),
                p = {
                    eventType: t.addPubSubEventPrefix(o),
                    intent: "addEventListener",
                    params: {
                        data: a.eventData,
                        name: o,
                        origin: n
                    }
                };
            if (e.forEach(r, function(e) {
                    this._sendDataToComp(e, p)
                }.bind(this)), s) {
                var c = a.eventData;
                this.hub.persistData(i, o, n, c)
            }
        },
        subscribe: function(i) {
            var n = i.compId,
                a = i.data,
                o = t.stripPubSubPrefix(a.eventKey),
                s = a.receivePastEvents,
                r = t.getAppDefId(this.aspectSiteAPI, n);
            if (this.hub.addEventListener(r, o, n), s) {
                var p = this.hub.getPersistedData(r, o);
                if (!e.isEmpty(p)) {
                    var c = {
                        intent: "TPA_RESPONSE",
                        compId: n,
                        callId: i.callId,
                        type: i.type,
                        status: !0,
                        res: {
                            drain: !0,
                            data: p
                        }
                    };
                    this._sendDataToComp(n, c)
                }
            }
        },
        unsubscribe: function(e, t, i) {
            this.hub.getEventListeners(e, i) && this.hub.removeEventListener(e, i, t)
        },
        deleteCompListeners: function(e, t) {
            this.hub.deleteCompListeners(e, t)
        },
        _sendDataToComp: function(e, t) {
            var i = this.aspectSiteAPI.getComponentById(e);
            i && i.sendPostMessage(t)
        }
    }, n
}), define("tpa/aspects/TPAPixelTrackerAspect", ["lodash", "utils", "tpa/common/TPABaseUrlBuilder"], function(e, t, i) {
    function n(e) {
        this._aspectSiteAPI = e, this._aspectSiteAPI.registerToComponentDidMount(p.bind(this)), this._aspectSiteAPI.registerToUrlPageChange(p.bind(this))
    }
    var a = t.urlUtils,
        o = t.throttleUtils.throttledForEach,
        s = function(t) {
            return e.filter(t, function(t) {
                return e.isString(t.pixelUrl) && t.permissions && !t.permissions.revoked
            })
        },
        r = function(e) {
            new window.Image(0, 0).src = e
        },
        p = function() {
            var t = this._aspectSiteAPI.getPageUrl.bind(this._aspectSiteAPI),
                r = s(this._aspectSiteAPI.getSiteData().getClientSpecMap()),
                p = e.map(r, function(e) {
                    return new i(e.pixelUrl).addMultipleQueryParams({
                        instance: e.instance,
                        page: t(),
                        ck: a.cacheKiller()
                    }).build()
                });
            o(p, n.sendRequest, n.CHUNK_SIZE, n.CHUNK_INTERVAL)
        };
    return n.sendRequest = r, n.CHUNK_SIZE = 1, n.CHUNK_INTERVAL = 100, n
}), define("tpa/components/tpaModal", ["lodash", "zepto", "react", "compUtils", "core", "santaProps", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/mixins/tpaRuntimeCompMixin", "tpa/mixins/tpaResizeWindowMixin"], function(e, t, i, n, a, o, s, r, p, c) {
    var d = a.compRegistrar,
        u = a.compMixins,
        l = {
            displayName: "TPAModal",
            propTypes: {
                compData: o.Types.Component.compData.isRequired,
                windowResizeEvent: o.Types.SiteAspects.windowResizeEvent.isRequired,
                id: o.Types.Component.id.isRequired,
                isMobileView: o.Types.isMobileView.isRequired,
                removeModal: o.Types.TPA.removeModal.isRequired,
                exitFullScreenMode: o.Types.exitFullScreenMode.isRequired,
                onCloseCallback: i.PropTypes.func
            },
            statics: {
                useSantaTypes: !0
            },
            mixins: [u.skinBasedComp, s, r, p, c, u.blockOuterScrollMixin],
            getInitialState: function() {
                return this.props.windowResizeEvent.registerToResize(this), {
                    showComponent: !0,
                    registeredEvents: [],
                    $displayDevice: this.getDeviceType(),
                    windowSize: this.props.compData.windowSize
                }
            },
            getDefaultProperties: function() {
                return {
                    "": {
                        style: {
                            position: "fixed",
                            display: "block"
                        },
                        onWheel: this.blockOuterScroll
                    },
                    blockingLayer: {
                        onClick: this.hide
                    },
                    frameWrap: {
                        style: this.getIframeWrapperStyle()
                    },
                    dialog: {
                        style: this.getDialogStyle()
                    },
                    xButton: {
                        children: "×",
                        onClick: this.hide,
                        style: {
                            display: "block"
                        }
                    },
                    iframe: {
                        src: this.buildUrl(this.props.compData.url),
                        frameBorder: "0",
                        allowTransparency: !0,
                        allowFullScreen: !0,
                        name: this.props.id
                    }
                }
            },
            getHiddenProperties: function() {
                return {
                    "": {
                        style: {
                            display: "none"
                        }
                    }
                }
            },
            getBareProperties: function() {
                return e.merge(this.getDefaultProperties(), {
                    frameWrap: {
                        style: {
                            background: "transparent",
                            border: "none"
                        }
                    },
                    xButton: {
                        style: {
                            display: "none"
                        }
                    }
                })
            },
            getSkinProperties: function() {
                if (this.state.showComponent) switch (this.props.compData.theme) {
                    case "BARE":
                    case "LIGHT_BOX":
                        return this.getBareProperties();
                    default:
                        return this.getDefaultProperties()
                }
                return this.getHiddenProperties()
            },
            getIframeWrapperStyle: function() {
                var e = {};
                return this.props.isMobileView && (e = {
                    WebkitOverflowScrolling: "touch",
                    overflowY: "scroll"
                }), e
            },
            getDialogStyle: function() {
                if ("mobile" === this.getDeviceType()) return {};
                var t = this.state.windowSize,
                    i = e.isNumber(this.state.width) ? this.state.width : this.props.compData.width,
                    n = e.isNumber(this.state.height) ? this.state.height : this.props.compData.height;
                if (i = Math.min(i, t.width), n = Math.min(n, t.height), !this.getAppData().isWixTPA) {
                    var a = t.width - 50,
                        o = t.height - 50;
                    i >= a && n >= o && (i = a, n = o)
                }
                return {
                    width: i,
                    height: n,
                    marginTop: -n / 2,
                    marginLeft: -i / 2
                }
            },
            mutateIframeUrlQueryParam: function(e) {
                return e.origCompId = this.props.compData.origCompId, e
            },
            hide: function(t, i) {
                var n = this;
                this.setState({
                    showComponent: !1
                }, function() {
                    var a = t && t.message ? t : void 0;
                    n.props.onCloseCallback && n.props.onCloseCallback(a), "mobile" === n.state.$displayDevice && n.props.exitFullScreenMode(), n.props.windowResizeEvent.unregisterToResize(n), n.props.removeModal(n), e.isFunction(i) && i()
                })
            },
            isBareTheme: function() {
                return "BARE" === this.props.compData.theme
            },
            onResize: function() {
                var e = t(window);
                this.setState({
                    windowSize: {
                        width: e.width(),
                        height: e.height()
                    }
                })
            }
        };
    return d.register("wysiwyg.viewer.components.tpapps.TPAModal", l), l
}), define("tpa/aspects/TPAModalAspect", ["lodash", "utils", "tpa/components/tpaModal"], function(e, t, i) {
    function n() {
        return {
            componentType: "wysiwyg.viewer.components.tpapps.TPAModal",
            type: "Component",
            id: t.guidUtils.getUniqueId(),
            skin: "wysiwyg.viewer.skins.TPAModalSkin"
        }
    }

    function a(t) {
        var i = t.getAspectGlobalData(s);
        return e.get(i, "modalStructure")
    }

    function o(t) {
        this.aspectSiteApi = t, e.bindAll(this, e.functionsIn(this))
    }
    var s = "tpaModalAspect";
    return o.prototype = {
        getComponentsToRender: function() {
            var e = a(this.aspectSiteApi);
            if (e) {
                var t = this.aspectSiteApi.getAspectGlobalData(s);
                return [{
                    structure: e,
                    props: {
                        compData: t.modalData,
                        onCloseCallback: t.modalOnClose,
                        key: e.id
                    }
                }]
            }
            return null
        },
        showModal: function(e, t) {
            this.aspectSiteApi.getSiteData().isMobileView() && ("LIGHT_BOX" === e.theme ? (this.aspectSiteApi.exitFullScreenMode(), this.aspectSiteApi.setSiteRootHiddenState(!0)) : (this.aspectSiteApi.enterFullScreenMode(), this.aspectSiteApi.setSiteRootHiddenState(!1))), this.aspectSiteApi.setAspectGlobalData(s, {
                modalStructure: n(),
                modalData: e,
                modalOnClose: t
            }), this.aspectSiteApi.forceUpdate()
        },
        removeModal: function() {
            this.aspectSiteApi.getSiteData().isMobileView() && (this.aspectSiteApi.exitFullScreenMode(), this.aspectSiteApi.setSiteRootHiddenState(!1)), this.aspectSiteApi.setAspectGlobalData(s, {
                modalStructure: null
            }), this.aspectSiteApi.forceUpdate()
        }
    }, o
}), define("tpa/aspects/TPAMobileViewportAspect", ["lodash", "utils", "experiment", "tpa/services/clientSpecMapService"], function(e, t, i, n) {
    var a = "tpaMobileViewportAspect",
        o = function(t) {
            this.aspectSiteAPI = t, e.bindAll(this, e.functionsIn(this)), this.aspectSiteAPI.registerToSiteReady(this.fixMobileViewportIfNeeded), this.aspectSiteAPI.registerToUrlPageChange(this.fixMobileViewportIfNeeded)
        };
    return o.prototype = {
        fixMobileViewportIfNeeded: function() {
            var e = this.aspectSiteAPI.getSiteData();
            if (i.isOpen("sv_tpaMobileViewportFix", e)) {
                var o = this.aspectSiteAPI.getAspectGlobalData(a);
                if (n.isCurrentPageFullResponsive(e)) {
                    if (!o || !o.isResponsive) {
                        var s = {
                            isResponsive: !0
                        };
                        this.aspectSiteAPI.setAspectGlobalData(a, s), t.mobileViewportFixer.fixViewportTag(e, s)
                    }
                } else o && o.isResponsive && (this.aspectSiteAPI.setAspectGlobalData(a, null), t.mobileViewportFixer.fixViewportTag(e, null))
            }
        }
    }, o
}), define("tpa/aspects/TPACompStateAspect", ["lodash"], function(e) {
    var t = function(t) {
        this.siteAspectsSiteAPI = t, e.bindAll(this, e.functionsIn(this))
    };
    return t.prototype = {
        updateSectionUrlState: function(e, t) {
            var i = this.siteAspectsSiteAPI.getComponentById(e);
            i && i.setState({
                sectionUrlState: t
            })
        }
    }, t
}), define("tpa/aspects/TPAComponentsDomAspect", ["lodash", "bluebird"], function(e, t) {
    function i(t) {
        this.aspectSiteApi = t, this.aliveTpaComponentPromises = {}, this.handleComponentIsAlive = {}, e.bindAll(this, e.functionsIn(this))
    }
    var n = function(e, t) {
        return e.getComponentById(t)
    };
    return i.prototype = {
        markComponentIsAlive: function(e) {
            var i = n(this.aspectSiteApi, e);
            this.handleComponentIsAlive[e] ? this.handleComponentIsAlive[e](i) : this.aliveTpaComponentPromises[e] = t.resolve(i)
        },
        getComponentWhenReady: function(e) {
            var i = this.aliveTpaComponentPromises;
            return i[e] = i[e] || new t(function(t) {
                this.handleComponentIsAlive[e] = t
            }.bind(this)), i[e]
        }
    }, i
}), define("tpa/aspects/tpaAspectCollector", ["core", "tpa/aspects/TPAWorkerAspect", "tpa/aspects/TPAPostMessageAspect", "tpa/aspects/TPAPopupAspect", "tpa/aspects/TPAPubSubAspect", "tpa/aspects/TPAPixelTrackerAspect", "tpa/aspects/TPAModalAspect", "tpa/aspects/TPAMobileViewportAspect", "tpa/aspects/TPACompStateAspect", "tpa/aspects/TPAComponentsDomAspect"], function(e, t, i, n, a, o, s, r, p, c) {
    var d = e.siteAspectsRegistry;
    d.registerSiteAspect("tpaWorkerAspect", t), d.registerSiteAspect("tpaPostMessageAspect", i), d.registerSiteAspect("tpaPopupAspect", n), d.registerSiteAspect("tpaPubSubAspect", a), d.registerSiteAspect("tpaPixelTrackerAspect", o), d.registerSiteAspect("tpaModalAspect", s), d.registerSiteAspect("tpaMobileViewportAspect", r), d.registerSiteAspect("tpaCompStateAspect", p), d.registerSiteAspect("tpaComponentsDomAspect", c)
}), define("tpa/layout/gluedWidgetPatcher", ["lodash", "tpa/common/tpaMetaData"], function(e, t) {
    function i(t, i, n) {
        var a = {};
        return e.forEach(n, function(n) {
            var o = i[n] && i[n][t],
                s = n;
            e.isUndefined(o) || (0 === n.indexOf(d) && (s = s.slice(d.length).toLowerCase()), a[s] = o)
        }), a
    }

    function n(t, i, n) {
        return {
            top: e.isNumber(t.top) ? e.parseInt(t.top) : n - t.height,
            bottom: e.isNumber(t.bottom) ? n - e.parseInt(t.bottom) : e.parseInt(t.top) + t.height,
            right: e.isNumber(t.right) ? i - e.parseInt(t.right) : e.parseInt(t.left) + t.width,
            left: e.isNumber(t.left) ? e.parseInt(t.left) : i - t.width
        }
    }

    function a(e, t) {
        return !(e.right < t.left || e.left > t.right || e.bottom < t.top || e.top > t.bottom)
    }

    function o(t, i, n) {
        return a(n, i) && e.isNumber(t.top) && (t.top = (t.top || 0) + (n.bottom - i.top)), t
    }

    function s(e, t, i) {
        var a = e,
            s = t.height.screen,
            r = t.width.screen,
            p = t.custom && t.custom[i.WIX_ADS_ID] && t.custom[i.WIX_ADS_ID].topAd;
        return p && (a = o(a, n(a, r, s), p)), a
    }

    function r(t, n, a, o, r) {
        if (r.isMobileView()) p(o, r.getClientSpecMap()) && n.css(t, {
            position: "fixed",
            margin: "0",
            top: "0",
            left: "auto",
            width: a.width.screen,
            height: "100%",
            zIndex: 2e3
        });
        else {
            var c = i(t, a, ["position", "fixedTop", "fixedLeft", "right", "bottom", "width", "height"]);
            c = s(c, a, r), c = e.omit(c, ["width", "height"]), n.css(t, c)
        }
    }

    function p(i, n) {
        var a = n[i.dataItem.applicationId],
            o = t.PERMITTED_FULL_SCREEN_TPAS_IN_MOBILE;
        return a && e.includes(o, a.appDefinitionId)
    }

    function c() {
        this.patchGluedWidget = r
    }
    var d = "fixed";
    return c
}), define("tpa/layout/tpaMeasurer", ["zepto"], function(e) {
    return {
        measureTPA: function(t, i, n, a, o) {
            var s = e(n[t]);
            i.custom[t] = {
                hasIframe: Boolean(n[t + "iframe"])
            };
            var r = parseInt(s.css("min-height"), 10),
                p = parseInt(s.css("min-width"), 10),
                c = s.attr("data-ignore-anchors");
            r && "true" !== c && (i.minHeight[t] = r, i.height[t] = r), r && "true" === c && (i.minHeight[t] = o.structure.layout.height, i.height[t] = o.structure.layout.height), p && (i.minWidth[t] = p, i.width[t] = p)
        }
    }
}), define("tpa/layout/tpaGluedWidgetPlacement", [], function() {
    function e(e, t) {
        var i = e.applicationId,
            n = e.widgetId,
            a = t[i];
        if (a) {
            var o = a.widgets[n];
            if (o) return (o.gluedOptions || {
                horizontalMargin: 0,
                placement: "BOTTOM_RIGHT",
                verticalMargin: 0
            }).placement
        }
    }
    return {
        getDefaultPlacement: e
    }
}), define("tpa/utils/gluedWidgetMeasuringUtils", ["lodash", "tpa/layout/tpaGluedWidgetPlacement"], function(e, t) {
    function i(e) {
        return "number" == typeof e ? e : e ? parseFloat(e) || 0 : 0
    }

    function n(t, n, a, o, s, c, d, u) {
        function l() {
            if (c >= -1 && c <= 1) {
                var e = o / 2 - n / 2,
                    t = c * ((o - 2 * p) / 2 - n / 2);
                h.top = e + t
            } else if (c < -1 && c >= -2) m = 2 + c, h.top = m * p;
            else if (c > 1 && c <= 2) {
                m = 2 - c;
                var i = Math.floor(m * p);
                h.top = o - i - n
            }
        }

        function g() {
            if (d >= -1 && d <= 1) {
                var e = a / 2 - t / 2,
                    i = d * ((a - 2 * r) / 2 - t / 2);
                h.left = e + i
            } else if (d > 1 && d <= 2) {
                m = 2 - d;
                var n = Math.floor(m * r);
                h.left = a - n - t
            } else d < -1 && d >= -2 && (m = 2 + d, h.left = m * r)
        }
        c = i(c), d = i(d);
        var m, h = {};
        switch (s) {
            case "TOP_LEFT":
                h.top = 0, h.left = 0, h.bottom = "auto";
                break;
            case "TOP_RIGHT":
                h.top = 0, h.right = 0, h.bottom = "auto";
                break;
            case "TOP_CENTER":
                h.top = 0, h.bottom = "auto", g();
                break;
            case "CENTER_RIGHT":
                h.right = 0, l();
                break;
            case "CENTER_LEFT":
                h.left = 0, l();
                break;
            case "BOTTOM_LEFT":
                h.bottom = 0, h.left = 0, h.top = "auto";
                break;
            case "BOTTOM_CENTER":
                h.bottom = 0, h.top = "auto", g();
                break;
            case "BOTTOM_RIGHT":
            default:
                h.bottom = 0, h.right = 0, h.top = "auto"
        }
        return e.defaults(h, {
            position: u ? "absolute" : "fixed",
            top: "0",
            left: "0"
        })
    }

    function a(t, i) {
        var n = {};
        return i && i > 0 && e.isNumber(t.bottom) && t.bottom < i && (n.bottom = i), n
    }

    function o(e) {
        return (e > 2 || e < -2) && (e = 0), e
    }

    function s(i, s, r, p, c, d) {
        var u = o(s.props.horizontalMargin),
            l = o(s.props.verticalMargin),
            g = s.props.placement || t.getDefaultPlacement(s.data, i),
            m = n(s.layout.width, s.layout.height, r, p, g, l, u, d),
            h = a(m, c || 0),
            f = e.assign(m, h);
        return 0 === f.right && (f.left = r - s.layout.width), 0 === f.bottom && (f.top = p - s.layout.height - (c || 0)), f
    }
    var r = 300,
        p = 120;
    return {
        getGluedWidgetMeasurements: s
    }
}), define("tpa/layout/gluedWidgetMeasurer", ["lodash", "zepto", "tpa/layout/tpaMeasurer", "tpa/utils/gluedWidgetMeasuringUtils"], function(e, t, i, n) {
    function a(e, t, i, n) {
        var a = n.isMobileView() ? "mobileAd" : "desktopWADTop",
            o = i[e].querySelector("#" + e + a),
            s = i[e].querySelector("#" + e + "desktopWADBottom");
        (o || s) && (t.custom[e] || (t.custom[e] = {}), o && (t.custom[e].topAd = o.getBoundingClientRect()), s && (t.custom[e].bottomAd = s.getBoundingClientRect()))
    }

    function o(e) {
        return 0 === e.right && (e.left = "auto"), 0 === e.bottom && (e.top = "auto"), 0 === e.left && (e.right = "auto"), 0 === e.top && (e.bottom = "auto"), e
    }

    function s(a, s, r, p, c, d) {
        var u = d.propertiesItem,
            l = d.dataItem,
            g = e.assign(d.layout, {
                height: t(p[s]).height(),
                width: t(p[s]).width()
            }),
            m = r.width.screen,
            h = r.height.screen;
        u.placement = u.placement || a(l, c);
        var f = {
                props: u,
                data: l,
                layout: g
            },
            v = c.getClientSpecMap(),
            y = c.isMobileView(),
            I = n.getGluedWidgetMeasurements(v, f, m, h, r.siteMarginBottom, y);
        (I = o(I)).fixedTop = I.top, I.fixedLeft = I.left, delete I.top, delete I.left, e.forEach(I, function(e, t) {
            r[t] = r[t] || {}, r[t][s] = e
        }), r.width[s] = g.width, i.measureTPA(s, r, p)
    }

    function r(e) {
        function t(t, i) {
            try {
                return e.getDefaultPlacement(t, i)
            } catch (e) {
                return ""
            }
        }
        this.measureWixAdComponent = a, this.measureGluedWidget = s.bind(this, t)
    }
    return r
}), define("tpa/layout/tpaSectionPatcher", ["lodash", "zepto", "tpa/services/clientSpecMapService", "experiment"], function(e, t, i, n) {
    function a(e, t, i) {
        var n = t.height.screen - t.siteOffsetTop;
        return e.height = n + "px", e.minHeight = n + "px", e.top = t.siteOffsetTop + "px", i.isViewerMode() || (e.left = void 0, e.right = void 0), e
    }

    function o(t, n) {
        var a = e.get(t, "widgetId"),
            o = a ? e.get(n.widgets, a) : i.getMainSectionWidgetData(n);
        return e.get(o, "appPage.fullPage", !1)
    }
    return {
        patchTPASection: function(e, t, s, r, p) {
            var c = r.dataItem,
                d = p.getClientSpecMap()[c.applicationId],
                u = s.height[e];
            if (d && o(c, d)) {
                var l = {};
                l.position = "fixed", l.left = "0px", l.top = "0px", l.right = "0px", l.bottom = "0px", p.isMobileView() && (u = s.height.screen - s.siteOffsetTop, l = a(l, s, p)), t.css(e, l)
            }
            var g = s.width[e],
                m = p.os.ios && p.browser.safari;
            s.custom[e].hasIframe && (n.isOpen("sv_tpaMobileViewportFix", p) && i.isCurrentPageFullResponsive(p) ? t.css(e + "iframe", {
                position: "fixed",
                left: 0
            }) : m && t.css(e + "iframe", {
                width: g,
                height: u
            }))
        }
    }
}), define("tpa/layout/mobileSafariPatcher", [], function() {
    return {
        patchWidth: function(e, t, i, n, a) {
            a.os.ios && a.browser.safari && i.custom[e].hasIframe && t.css(e + "iframe", {
                width: 1,
                minWidth: "100%"
            })
        }
    }
}), define("tpa/layout/tpaLayout", ["layout", "tpa/layout/gluedWidgetPatcher", "tpa/layout/gluedWidgetMeasurer", "tpa/layout/tpaSectionPatcher", "tpa/layout/tpaMeasurer", "tpa/layout/tpaGluedWidgetPlacement", "tpa/layout/mobileSafariPatcher"], function(e, t, i, n, a, o, s) {
    var r = new t(o),
        p = new i(o);
    return e.registerCustomMeasure("wysiwyg.viewer.components.tpapps.TPAWidget", a.measureTPA), e.registerCustomMeasure("wysiwyg.viewer.components.tpapps.TPASection", a.measureTPA), e.registerCustomMeasure("wysiwyg.viewer.components.tpapps.TPAMultiSection", a.measureTPA), e.registerCustomMeasure("wysiwyg.viewer.components.tpapps.TPAGluedWidget", p.measureGluedWidget), e.registerRequestToMeasureDom("wysiwyg.viewer.components.tpapps.TPAWidget"), e.registerRequestToMeasureDom("wysiwyg.viewer.components.tpapps.TPAGluedWidget"), e.registerRequestToMeasureDom("wysiwyg.viewer.components.tpapps.TPASection"), e.registerRequestToMeasureDom("wysiwyg.viewer.components.tpapps.TPAMultiSection"), e.registerRequestToMeasureChildren("wysiwyg.viewer.components.tpapps.TPASection", [
        ["iframe"]
    ]), e.registerRequestToMeasureChildren("wysiwyg.viewer.components.tpapps.TPAMultiSection", [
        ["iframe"]
    ]), e.registerRequestToMeasureChildren("wysiwyg.viewer.components.tpapps.TPAWidget", [
        ["iframe"]
    ]), e.registerSAFEPatcher("wysiwyg.viewer.components.tpapps.TPAGluedWidget", r.patchGluedWidget), e.registerSAFEPatcher("wysiwyg.viewer.components.tpapps.TPAMultiSection", n.patchTPASection), e.registerSAFEPatcher("wysiwyg.viewer.components.tpapps.TPASection", n.patchTPASection), e.registerSAFEPatcher("wysiwyg.viewer.components.tpapps.TPAWidget", s.patchWidth), ["wysiwyg.viewer.components.WixAdsMobile", "wysiwyg.viewer.components.WixAdsDesktop"].forEach(function(t) {
        e.registerRequestToMeasureChildren(t, [
            ["desktopWADTop"],
            ["desktopWADBottom"],
            ["mobileWADTop"]
        ]), e.registerCustomMeasure(t, p.measureWixAdComponent)
    }), {}
}), define("tpa/components/tpaPreloaderOverlay", ["core"], function(e) {
    var t = e.compRegistrar,
        i = {
            mixins: [e.compMixins.skinBasedComp],
            statics: {
                useSantaTypes: !0
            },
            getSkinProperties: function() {
                return {
                    preloader: {
                        className: "circle-preloader"
                    }
                }
            }
        };
    t.register("wysiwyg.viewer.components.tpapps.TPAPreloaderOverlay", i)
}), define("tpa/services/tpaPreviewEditorCommunicationService", ["core"], function(e) {
    var t, i = [],
        n = 1,
        a = function(e) {
            t = e, o()
        };
    e.siteAspectsRegistry.registerSiteAspect("tpaPreviewEditorAspect", a);
    var o = function() {
            t.registerToMessage(p.bind(this))
        },
        s = function(e, t, i, n) {
            var a, o = r(e, t, i, n);
            window.parent.postMessage ? a = window.parent : window.parent.document.postMessage && (a = window.parent.document), a && void 0 !== a && a.postMessage(JSON.stringify(o), "*")
        },
        r = function(e, t, a, o) {
            var s = {
                intent: "TPA_PREVIEW",
                callId: n++,
                type: e,
                compId: a,
                data: t
            };
            return o && (i[s.callId] = o), s
        },
        p = function(e) {
            if (e && e.data) {
                var t = {};
                try {
                    t = JSON.parse(e.data)
                } catch (e) {
                    return
                }
                switch (t.intent) {
                    case "TPA_PREVIEW":
                        t.callId && i[t.callId] && (i[t.callId](t.res), delete i[t.callId])
                }
            }
        };
    return {
        doPostMessage: s
    }
}), define("tpa/mixins/tpaPreviewEditorMixin", ["tpa/services/tpaPreviewEditorCommunicationService"], function(e) {
    return {
        openHelp: function(t) {
            e.doPostMessage("openHelp", t)
        }
    }
}), define("tpa/components/tpaUnavailableMessageOverlay", ["react", "santaProps", "core", "tpa/mixins/tpaPreviewEditorMixin"], function(e, t, i, n) {
    var a = i.compRegistrar,
        o = i.compMixins,
        s = Object.freeze({
            displayName: "TPAUnavailableMessageOverlay",
            mixins: [o.skinBasedComp, n],
            propTypes: {
                compData: t.Types.Component.compData.isRequired
            },
            statics: {
                useSantaTypes: !0
            },
            getInitialState: function() {
                return {
                    showOverlay: !0
                }
            },
            getSkinProperties: function() {
                return {
                    text: {
                        children: [this.props.compData.text]
                    },
                    dismissButton: {
                        onClick: this.props.compData.hideOverlayFunc
                    },
                    openHelp: this.openHelp
                }
            }
        });
    a.register("wysiwyg.viewer.components.tpapps.TPAUnavailableMessageOverlay", s)
}), define("tpa", ["tpa/components/tpaWidget", "tpa/components/tpaSection", "tpa/components/tpaMultiSection", "tpa/components/tpaWorker", "tpa/components/tpaGluedWidget", "tpa/aspects/tpaAspectCollector", "tpa/mixins/tpaUrlBuilderMixin", "tpa/mixins/tpaCompApiMixin", "tpa/layout/tpaLayout", "tpa/components/tpaPreloaderOverlay", "tpa/components/tpaUnavailableMessageOverlay", "tpa/layout/gluedWidgetPatcher", "tpa/layout/tpaMeasurer", "tpa/layout/tpaSectionPatcher", "tpa/mixins/tpaCompBaseMixin", "tpa/common/tpaPostMessageCommon", "tpa/handlers/tpaHandlers", "tpa/common/TPAUrlBuilder", "tpa/common/TPABaseUrlBuilder", "tpa/utils/tpaStyleUtils", "tpa/utils/tpaUtils", "tpa/utils/gluedWidgetMeasuringUtils", "tpa/services/tpaPreviewEditorCommunicationService", "tpa/services/tpaNavigationService", "tpa/common/tpaBi", "tpa/utils/sitePages", "tpa/common/tpaMetaData"], function(e, t, i, n, a, o, s, r, p, c, d, u, l, g, m, h, f, v, y, I, S, P, A, T, w, C, b) {
    return {
        widget: e,
        section: t,
        multiSection: i,
        worker: n,
        gluedWidget: a,
        gluedWidgetMeasuringUtils: P,
        tpaMixins: {
            tpaUrlBuilder: s,
            tpaCompApi: r,
            tpaCompBase: m
        },
        GluedWidgetPatcher: u,
        tpaMeasurer: l,
        tpaSectionPatcher: g,
        tpaHandlers: f,
        common: {
            metaData: b,
            tpaPostMessageCommon: h,
            TPAUrlBuilder: v,
            styleUtils: I,
            TPABaseUrlBuilder: y,
            utils: S,
            bi: w
        },
        services: {
            tpaPreviewEditorCommunicationService: A,
            tpaNavigationService: T
        },
        tpaStyleUtils: I,
        sitePages: C
    }
});
//# sourceMappingURL=tpa.min.js.map
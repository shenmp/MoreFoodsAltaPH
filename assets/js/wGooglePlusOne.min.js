"use strict";
define("wGooglePlusOne", ["lodash", "react", "core", "reactDOM", "santaProps"], function(e, t, i, o, r) {
    function n(t) {
        var i = e.get(t.compProp, "isHidden");
        switch (t.compProp.size + "_" + t.compProp.annotation) {
            case "small_bubble":
                return {
                    width: 70,
                    height: 15,
                    opacity: i ? 0 : 1
                };
            case "small_none":
                return {
                    width: 24,
                    height: 15,
                    opacity: i ? 0 : 1
                };
            case "small_inline":
                return {
                    width: 250,
                    height: 15,
                    opacity: i ? 0 : 1
                };
            case "medium_bubble":
                return {
                    width: 90,
                    height: 20,
                    opacity: i ? 0 : 1
                };
            case "medium_none":
                return {
                    width: 32,
                    height: 20,
                    opacity: i ? 0 : 1
                };
            case "medium_inline":
                return {
                    width: 250,
                    height: 20,
                    opacity: i ? 0 : 1
                };
            case "standard_bubble":
                return {
                    width: 106,
                    height: 24,
                    opacity: i ? 0 : 1
                };
            case "standard_none":
                return {
                    width: 38,
                    height: 24,
                    opacity: i ? 0 : 1
                };
            case "standard_inline":
                return {
                    width: 250,
                    height: 24,
                    opacity: i ? 0 : 1
                };
            case "tall_bubble":
                return {
                    width: 50,
                    height: 60,
                    opacity: i ? 0 : 1
                };
            case "tall_none":
                return {
                    width: 50,
                    height: 20,
                    opacity: i ? 0 : 1
                };
            case "tall_inline":
                return {
                    width: 250,
                    height: 20,
                    opacity: i ? 0 : 1
                };
            default:
                return {
                    width: 50,
                    height: 60,
                    opacity: i ? 0 : 1
                }
        }
    }
    return {
        displayName: "WGooglePlusOne",
        mixins: [i.compMixins.skinBasedComp],
        propTypes: {
            externalScriptLoader: r.Types.SiteAspects.externalScriptLoader.isRequired,
            cookie: r.Types.RequestModel.cookie,
            currentUrl: r.Types.currentUrl,
            compProp: r.Types.Component.compProp.isRequired
        },
        static: {
            useSantaTypes: !0
        },
        componentDidMount: function() {
            this.props.externalScriptLoader.loadScript("GOOGLE", this.renderTag, {
                cookie: this.props.cookie,
                currentUrl: this.props.currentUrl
            }), window.gapi && this.renderTag()
        },
        componentDidUpdate: function(t) {
            var i = ["annotation", "size"];
            e.isEqual(e.pick(this.props.compProp, i), e.pick(t.compProp, i)) || this.renderTag()
        },
        renderTag: function() {
            var t = this.refs.googlePlus || this.refs[""],
                i = n(this.props);
            e.get(window, "gapi.plusone") && window.gapi.plusone.render(o.findDOMNode(t), {
                size: this.props.compProp.size,
                annotation: this.props.compProp.annotation,
                width: i.width
            })
        },
        componentWillUnmount: function() {
            this.props.externalScriptLoader.unsubscribe("GOOGLE", this.renderTag)
        },
        getSkinProperties: function() {
            return {
                googlePlus: {
                    children: t.DOM.div({
                        className: "g-plusone"
                    }),
                    ref: "googlePlus"
                },
                "": {
                    style: n(this.props)
                }
            }
        }
    }
});
//# sourceMappingURL=wGooglePlusOne.min.js.map
"use strict";
define("youTubeSubscribeButton", ["lodash", "react", "core", "santaProps"], function(t, e, o, i) {
    function s(t, e, o) {
        var i = r(t, e, o);
        return {
            height: i.height + a.toolTipExtraSpace,
            width: i.width + ("default" === o ? a.toolTipWidthExtraSpaceDefault : a.toolTipWidthExtraSpaceFull)
        }
    }

    function r(t, e, o) {
        return "default" === o ? (t < a.defaultLayoutHeight && (t = a.defaultLayoutHeight), e < a.defaultLayoutWidth && (e = a.defaultLayoutWidth)) : (t < a.fullLayoutHeight && (t = a.fullLayoutHeight), e < a.fullLayoutWidth && (e = a.fullLayoutWidth)), {
            width: e,
            height: t
        }
    }
    var a = {
        defaultLayoutWidth: 145,
        defaultLayoutHeight: 33,
        fullLayoutWidth: 212,
        fullLayoutHeight: 55,
        fullLayoutHeightIE: 67,
        toolTipExtraSpace: 60,
        toolTipWidthExtraSpaceDefault: 150,
        toolTipWidthExtraSpaceFull: 150
    };
    return {
        displayName: "YouTubeSubscribeButton",
        mixins: [o.compMixins.skinBasedComp],
        propTypes: {
            browser: i.Types.Browser.browser.isRequired,
            compData: i.Types.Component.compData.isRequired,
            compProp: i.Types.Component.compProp.isRequired,
            santaBase: i.Types.santaBase.isRequired,
            style: i.Types.Component.style.isRequired
        },
        statics: {
            useSantaTypes: !0
        },
        getInitialState: function() {
            var t;
            return this.props.browser.ie && (a.fullLayoutHeight = a.fullLayoutHeightIE), t = "default" === this.props.compProp.layout ? this.props.browser.ie ? "defaultIE" : "default" : this.props.browser.ie ? "fullIE" : "full", {
                $layout: t,
                $hoverMode: "nonHover",
                iframeWrapperSizes: r(this.props.style.height, this.props.style.width, this.props.compProp.layout)
            }
        },
        getIFrameSrc: function() {
            var t = this.props.santaBase + "/static/external/youtubeSubscribeButton.html?",
                e = [];
            return e.push("channel=" + this.props.compData.youtubeChannelId), e.push("layout=" + this.props.compProp.layout), e.push("theme=" + this.props.compProp.theme), t + e.join("&")
        },
        onMouseOut: function() {
            this.setState({
                iframeWrapperSizes: r(this.props.style.height, this.props.style.width, this.props.compProp.layout),
                $hoverMode: "nonHover"
            })
        },
        onMouseEnter: function() {
            this.setState({
                iframeWrapperSizes: s(this.props.style.height, this.props.style.width, this.props.compProp.layout),
                $hoverMode: "hoverMode"
            })
        },
        componentWillReceiveProps: function(t) {
            this.setState({
                iframeWrapperSizes: s(t.style.height, t.style.width, t.compProp.layout)
            })
        },
        getSkinProperties: function() {
            var t = r(this.props.style.height, this.props.style.width, this.props.compProp.layout),
                o = {
                    "data-src": this.getIFrameSrc(),
                    allowFullScreen: !0,
                    frameBorder: "0",
                    width: "100%",
                    height: "100%",
                    onMouseOut: this.onMouseOut,
                    onMouseEnter: this.onMouseEnter
                };
            return {
                "": {
                    style: {
                        height: t.height,
                        width: t.width
                    }
                },
                hitWidth: {
                    style: {
                        left: t.width
                    }
                },
                youtubeIframe: {
                    addChildren: [e.DOM.iframe(o)],
                    style: {
                        width: this.state.iframeWrapperSizes.width,
                        height: this.state.iframeWrapperSizes.height
                    }
                }
            }
        }
    }
});
//# sourceMappingURL=youTubeSubscribeButton.min.js.map